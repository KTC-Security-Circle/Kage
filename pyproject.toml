[project]
name = "kage"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [
    { name = "Flet developer", email = "you@example.com" }
]
dependencies = [
    "alembic>=1.16.2",
    "flet==0.27.6",
    "langchain>=0.3.25",
    "langchain-google-genai>=2.1.5",
    "langchain-huggingface>=0.3.1",
    "langchain-openvino-genai",
    "langgraph>=0.4.8",
    "langgraph-checkpoint-sqlite>=2.0.10",
    "langsmith>=0.3.45",
    "loguru>=0.7.3",
    "optimum[nncf,openvino]>=1.27.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "python-dotenv>=1.1.0",
    "ruamel-yaml>=0.18.15",
    "sqlmodel>=0.0.24"
]

[tool.flet]
# org name in reverse domain name notation, e.g. "com.mycompany".
# Combined with project.name to build bundle ID for iOS and Android apps
org = "com.mycompany"

# project display name that is used as an app title on Android and iOS home screens,
# shown in window titles and about app dialogs on desktop.
product = "Kage"

# company name to display in about app dialogs
company = "Flet"

# copyright text to display in about app dialogs
copyright = "Copyright (C) 2025 by Flet"

[tool.flet.app]
path = "src"

[project.scripts]
kage-cli = "cli.main:app"

[tool.uv]
package = true

[dependency-groups]
dev = [
    "flet[all]==0.27.6",
    "poethepoet>=0.36.0",
    "pre-commit>=4.2.0",
    # test
    "langchain-tests>=0.3.21",
    "pytest>=8.4.0",
    "pytest-cov>=6.2.1",
    # lint
    "pyright>=1.1.400",
    "ruff>=0.13,<0.14",
    # docs
    "mkdocs>=1.6.1",
    "mkdocs-git-committers-plugin-2>=2.5.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-material>=9.6.16",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.17.0",
    # cli
    "questionary>=2.1.1",
    "rich>=14.1.0",
    "typer>=0.17.4",
]

[tool.uv.sources]
langchain-openvino-genai = { git = "https://github.com/KTC-Security-Circle/langchain-openvino-genai.git", tag = "v0.0.2.dev0" }
# langchain-openvino-genai = { path = "../langchain-openvino-genai", editable = true }

# Poe the Poet
[tool.poe]
shell_interpreter = ["powershell", "posix"]

[tool.poe.tasks]

# == Essential Commands ==
setup = ["sync", "migrate"]
sync = "uv sync"

# == Application Execution ==
run = "flet run"
dev = "flet run -dr"
web = "flet run --web"
cli = "kage-cli"

# == Code Quality ==
check = ["_lint", "_format-check", "_type-check"]
fix = ["_lint-fix", "_format"]

# == Testing ==
test = "uv run pytest"
test-cov = "uv run pytest --cov=src --cov-report=html"

# == Database ==
migrate = { shell = "cd src/models && uv run alembic upgrade head" }
db-status = { shell = "cd src/models && uv run alembic current" }

# == Documentation ==
docs = ["_gen-env-docs", "_docs-serve"]
docs-build = "uv run mkdocs build"
docs-deploy = "uv run mkdocs gh-deploy --force --no-history"

# == Build ==
build = "flet build web"

# == Utility ==
clean = "uv cache clean"

# == Internal Commands (prefixed with _) ==
_lint = "uv run ruff check ."
_lint-fix = "uv run ruff check . --fix"
_format = "uv run ruff format ."
_format-check = "uv run ruff format . --check"
_type-check = "uv run pyright ."
_docs-serve = "uv run mkdocs serve -a 127.0.0.1:8000"
_gen-env-docs = "uv run scripts/generate_env_docs.py"


# (https://zenn.dev/mutex_inc/articles/4183b992ccd701)
[tool.ruff]
line-length = 120
exclude = [
    "src/models/migrations/versions/",
]

[tool.ruff.format]
docstring-code-format = true


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1",    # undocumented
    "D203",  # one blank line before class
    "D213",  # multi-line summary second line
    "D400",
    "D415",
    "TD001", # invalid todo tag
    "TD002", # missing todo author
    "TD003", # missing todo link
    "PD011", # pandas use of dot values
    "ERA001",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF022",
    "COM812",
    "DTZ005",
    "BLE001",
    "PLC0415",
    "FIX002",
]
unfixable = [
    "F401", # unused import
    "F841", # unused variable
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D",
    "S101",
    "N802",
    "ARG",
    "SLF001",
]
"src/cli/**/*.py" = [
    "FBT001",
]

# logger-objects = ["src.library.logger.LOGGER"]

[tool.ruff.lint.pylint]
max-args = 6


[tool.pyright]
include = ["src"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs",
    "src/models/migrations/versions"
]
typeCheckingMode = "basic"
venvPath = "."
venv = ".venv"


[tool.pytest.ini_options]
pythonpath = ["src", "."]

testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--verbose",
    "-s",
]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]
