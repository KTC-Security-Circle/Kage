{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Kage \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<p>\u3088\u3046\u3053\u305d\u3002\u3053\u3053\u3067\u306f Kage \u306e\u300c\u30a2\u30d7\u30ea\u30b3\u30f3\u30bb\u30d7\u30c8 / \u5229\u7528\u30a4\u30e1\u30fc\u30b8\u300d\u3068\u300c\u958b\u767a\u8005\u5411\u3051\u6280\u8853\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u300d\u3092\u6574\u7406\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"#_1","title":"\u30a2\u30d7\u30ea\u6982\u8981","text":"<ul> <li>\u30b3\u30f3\u30bb\u30d7\u30c8: app/concept.md</li> <li>UI \u30ac\u30a4\u30c9: app/ui.md</li> </ul>"},{"location":"#_2","title":"\u958b\u767a\u30ac\u30a4\u30c9\u5165\u53e3","text":"<ul> <li>\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7: dev/setup.md</li> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3: dev/architecture-design.md</li> <li>\u753b\u9762\u8a2d\u8a08: dev/views_guide.md</li> <li>\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8: dev/agents_guide.md</li> <li>\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3: dev/migrations.md</li> <li>\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc: dev/task_runner.md</li> <li>\u30d6\u30e9\u30f3\u30c1\u547d\u540d: dev/branch_naming.md</li> <li>\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3: dev/contributing_docs.md</li> <li>\u8a2d\u5b9a\u3068\u74b0\u5883\u5909\u6570: dev/configuration.md</li> <li>CLI: dev/cli/index.md</li> </ul> <p>\u6539\u5584\u63d0\u6848\u30fb\u4e0d\u5099\u5831\u544a\u306f Issue / PR \u3067\u6b53\u8fce\u3057\u307e\u3059\u3002</p>"},{"location":"app/concept/","title":"\u30a2\u30d7\u30ea\u30b3\u30f3\u30bb\u30d7\u30c8\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aKage","text":""},{"location":"app/concept/#_1","title":"\u306f\u3058\u3081\u306b","text":""},{"location":"app/concept/#_2","title":"\u6982\u8981","text":"<p>\u300cKage\u300d\u306f\u3001AI PC (NPU \u642d\u8f09 PC) \u306e\u80fd\u529b\u3092\u6700\u5927\u9650\u306b\u6d3b\u7528\u3057\u3001\u5b8c\u5168\u30aa\u30d5\u30e9\u30a4\u30f3\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u9769\u65b0\u7684\u306a Windows \u5411\u3051\u30bf\u30b9\u30af\u7ba1\u7406\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002GTD (Getting Things Done) \u30e1\u30bd\u30c3\u30c9\u306e\u601d\u60f3\u306b\u57fa\u3065\u304d\u3001AI \u304c\u30e6\u30fc\u30b6\u30fc\u4e00\u4eba\u3072\u3068\u308a\u306e\u300c\u4eba\u3068\u306a\u308a\u300d\u3084\u50cd\u304d\u65b9\u3092\u6df1\u304f\u7406\u89e3\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u672c\u6765\u306e\u696d\u52d9\u306b\u96c6\u4e2d\u3067\u304d\u308b\u3088\u3046\u3001\u307e\u308b\u3067\u300c\u5f71\u300d\u306e\u3088\u3046\u306b\u5bc4\u308a\u6dfb\u3044\u3001\u751f\u7523\u6027\u306e\u6700\u5927\u5316\u3092\u652f\u63f4\u3057\u307e\u3059\u3002</p>"},{"location":"app/concept/#_3","title":"\u89e3\u6c7a\u3057\u305f\u3044\u8ab2\u984c","text":"<p>GTD \u306f\u5f37\u529b\u306a\u624b\u6cd5\u3067\u3059\u304c\u3001\u5b9f\u8df5\u306b\u306f\u624b\u9593\u304c\u4f34\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u73fe\u4ee3\u306e\u30d3\u30b8\u30cd\u30b9\u30d1\u30fc\u30bd\u30f3\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3001\u3088\u308a\u6df1\u523b\u306a\u8ab2\u984c\u306b\u3082\u76f4\u9762\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"app/concept/#gtd","title":"GTD \u306e\u5b9f\u8df5\u306b\u304a\u3051\u308b\u8ab2\u984c","text":"<ul> <li>\u53ce\u96c6\u30fb\u6574\u7406\u306e\u7169\u96d1\u3055: \u3059\u3079\u3066\u306e\u300c\u6c17\u306b\u306a\u308b\u3053\u3068\u300d\u3092\u53ce\u96c6\u3057\u3001\u5206\u985e\u30fb\u6574\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u304c\u624b\u9593\u3067\u7fd2\u6163\u5316\u304c\u96e3\u3057\u3044\u3002</li> <li>\u5224\u65ad\u75b2\u308c: \u300c\u6b21\u306b\u53d6\u308b\u3079\u304d\u884c\u52d5\u306f\uff1f\u300d\u3068\u3044\u3063\u305f\u5224\u65ad\u306e\u9023\u7d9a\u3067\u75b2\u5f0a\u3057\u3066\u3057\u307e\u3046\u3002</li> <li>\u5f62\u9ab8\u5316\u3059\u308b\u30ec\u30d3\u30e5\u30fc: \u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u306a\u3069\u304c\u91cd\u8981\u3067\u3042\u308b\u4e00\u65b9\u3001\u591a\u5fd9\u306b\u3088\u308a\u5f62\u9ab8\u5316\u3057\u304c\u3061\u3002</li> </ul>"},{"location":"app/concept/#_4","title":"\u73fe\u4ee3\u306e\u50cd\u304d\u65b9\u306b\u304a\u3051\u308b\u8ab2\u984c","text":"<ul> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u61f8\u5ff5: \u6a5f\u5bc6\u60c5\u5831\u3084\u500b\u4eba\u30c7\u30fc\u30bf\u3092\u30af\u30e9\u30a6\u30c9\u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3078\u306e\u4e0d\u5b89\u3002</li> <li>\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u74b0\u5883\u3078\u306e\u4f9d\u5b58: \u5e38\u6642\u30aa\u30f3\u30e9\u30a4\u30f3\u304c\u56f0\u96e3\u306a\u4f5c\u696d\u74b0\u5883\u3084\u3001\u63a5\u7d9a\u81ea\u4f53\u304c\u8a31\u53ef\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9\u3002</li> <li>\u60c5\u5831\u904e\u591a\u3068\u96c6\u4e2d\u963b\u5bb3: \u591a\u304f\u306e\u30c4\u30fc\u30eb\u3084\u901a\u77e5\u304c\u3001\u304b\u3048\u3063\u3066\u696d\u52d9\u306e\u96c6\u4e2d\u3092\u59a8\u3052\u3066\u3044\u308b\u3002</li> </ul> <p>\u300cKage\u300d\u306f\u3001\u3053\u308c\u3089\u306e\u8ab2\u984c\u3092\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u4f5c\u3059\u308b AI \u30a2\u30b7\u30b9\u30bf\u30f3\u30c8\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u89e3\u6c7a\u3057\u307e\u3059\u3002</p>"},{"location":"app/concept/#_5","title":"\u30b3\u30f3\u30bb\u30d7\u30c8","text":""},{"location":"app/concept/#kage_1","title":"\u30a2\u30d7\u30ea\u540d\u300cKage\u300d","text":"<p>\u300c\u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3001\u307e\u308b\u3067\u5f71\u306e\u3088\u3046\u306b\u3001\u610f\u8b58\u3055\u305b\u305a\u306b\u652f\u3048\u308b\u5b58\u5728\u300d AI \u304c\u524d\u9762\u306b\u51fa\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u9759\u304b\u306b\u3001\u3057\u304b\u3057\u78ba\u5b9f\u306b\u30e6\u30fc\u30b6\u30fc\u306e\u751f\u7523\u6027\u5411\u4e0a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</p>"},{"location":"app/concept/#gtd-ai","title":"GTD \u00d7 \u30d7\u30ed\u30a2\u30af\u30c6\u30a3\u30d6 AI","text":"<p>\u30e6\u30fc\u30b6\u30fc\u306f GTD \u306e\u57fa\u672c\u7684\u306a\u6d41\u308c\u306b\u6cbf\u3063\u3066\u30bf\u30b9\u30af\u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3002\u305d\u306e\u88cf\u5074\u3067 AI \u30a2\u30b7\u30b9\u30bf\u30f3\u30c8\u300cKage AI\u300d\u304c\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u65e5\u3005\u306e\u696d\u52d9\u30d1\u30bf\u30fc\u30f3\u3001\u4f5c\u696d\u6642\u9593\u3001\u30bf\u30b9\u30af\u5185\u5bb9\u3001\u3055\u3089\u306b\u306f\u30e1\u30e2\u304b\u3089\u8aad\u307f\u53d6\u308c\u308b\u611f\u60c5\u306e\u6a5f\u5fae\u307e\u3067\u3092\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u5b66\u7fd2\u30fb\u5206\u6790\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4e00\u4eba\u3072\u3068\u308a\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30d7\u30ed\u30a2\u30af\u30c6\u30a3\u30d6\uff08\u5148\u56de\u308a\u3057\u305f\uff09\u306a\u30b5\u30dd\u30fc\u30c8\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u304c AI \u3068\u30c1\u30e3\u30c3\u30c8\u3067\u5bfe\u8a71\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"app/concept/#_6","title":"\u30bf\u30fc\u30b2\u30c3\u30c8\u30e6\u30fc\u30b6\u30fc","text":"<ul> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3084\u4f5c\u696d\u74b0\u5883\u306b\u3088\u308a\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5229\u7528\u306b\u5236\u9650\u306e\u3042\u308b\u30d3\u30b8\u30cd\u30b9\u30d1\u30fc\u30bd\u30f3</li> <li>\u4f8b\uff1a\u5b98\u516c\u5e81\u3001\u91d1\u878d\u6a5f\u95a2\u3001\u6cd5\u52d9\u3001\u7814\u7a76\u958b\u767a\u8077\u306a\u3069\u3001\u6a5f\u5bc6\u60c5\u5831\u3092\u6271\u3046\u8077\u7a2e\u3002</li> <li>\u30da\u30eb\u30bd\u30ca\u4f8b\uff1a\u5e02\u5f79\u6240\u52e4\u52d9 2 \u5e74\u76ee\u306e\u8077\u54e1\u3002\u666e\u6bb5\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u9694\u96e2\u3055\u308c\u305f PC \u3067\u4f5c\u696d\u3057\u3001\u7d19\u306e ToDo \u30ea\u30b9\u30c8\u3067\u30bf\u30b9\u30af\u7ba1\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002\u696d\u52d9\u30d7\u30ed\u30bb\u30b9\u306e\u975e\u52b9\u7387\u3055\u306b\u8ab2\u984c\u3092\u611f\u3058\u3064\u3064\u3082\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u304b\u3089\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306e\u5229\u7528\u304c\u96e3\u3057\u3044\u3002</li> <li>GTD \u306b\u8208\u5473\u304c\u3042\u308b\u3001\u307e\u305f\u306f\u632b\u6298\u7d4c\u9a13\u306e\u3042\u308b\u3059\u3079\u3066\u306e\u4eba</li> <li>AI \u6280\u8853\u306b\u95a2\u5fc3\u306f\u3042\u308b\u304c\u3001\u60c5\u5831\u6f0f\u6d29\u30ea\u30b9\u30af\u304b\u3089\u5c0e\u5165\u3092\u305f\u3081\u3089\u3063\u3066\u3044\u308b\u5c64</li> </ul>"},{"location":"app/concept/#_7","title":"\u63d0\u4f9b\u4fa1\u5024","text":"<ul> <li>\u30bb\u30ad\u30e5\u30a2\u306a AI \u6d3b\u7528: \u5b8c\u5168\u30aa\u30d5\u30e9\u30a4\u30f3\u52d5\u4f5c\u306b\u3088\u308a\u3001\u60c5\u5831\u6f0f\u6d29\u30ea\u30b9\u30af\u3092\u6c17\u306b\u305b\u305a AI \u306e\u6069\u6075\u3092\u4eab\u53d7\u3067\u304d\u307e\u3059\u3002</li> <li>\u30b9\u30c8\u30ec\u30b9\u30d5\u30ea\u30fc\u306a\u4f5c\u696d\u74b0\u5883: AI \u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u9759\u304b\u306b\u52d5\u4f5c\u3002\u5fc5\u8981\u306a\u6642\u306b\u3060\u3051\u7684\u78ba\u306a\u30b5\u30dd\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u696d\u52d9\u306b\u6ca1\u982d\u3067\u304d\u307e\u3059\u3002</li> <li>\u9ad8\u5ea6\u306a\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba: \u30e6\u30fc\u30b6\u30fc\u306e\u300c\u4eba\u3068\u306a\u308a\u300d\u3092 AI \u304c\u5b66\u7fd2\u3057\u3001\u771f\u306b\u81ea\u5206\u306b\u5408\u3063\u305f\u79d8\u66f8\u306e\u3088\u3046\u306a\u30b5\u30dd\u30fc\u30c8\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002</li> <li>\u696d\u52d9\u52b9\u7387\u306e\u98db\u8e8d\u7684\u5411\u4e0a: \u30bf\u30b9\u30af\u306e\u7d30\u5206\u5316\u3084\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u306a\u3069\u3092 AI \u304c\u652f\u63f4\u3057\u3001\u629c\u3051\u6f0f\u308c\u3084\u5224\u65ad\u75b2\u308c\u3092\u524a\u6e1b\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"app/concept/#_8","title":"\u4e3b\u306a\u6a5f\u80fd","text":""},{"location":"app/concept/#gtd-5","title":"GTD \u306e 5 \u30b9\u30c6\u30c3\u30d7\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u57fa\u672c\u6a5f\u80fd","text":"<ul> <li>\u30a4\u30f3\u30dc\u30c3\u30af\u30b9 (\u53ce\u96c6)</li> <li>\u30bf\u30b9\u30af\u51e6\u7406\u30fb\u6574\u7406</li> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406</li> <li>\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u7ba1\u7406 (@PC, @\u5916\u51fa\u5148\u306a\u3069)</li> <li>\u30ec\u30d3\u30e5\u30fc</li> </ul>"},{"location":"app/concept/#ai-kage-ai","title":"AI \u30a2\u30b7\u30b9\u30c8\u6a5f\u80fd (Kage AI)","text":"<ul> <li>\u81ea\u52d5\u6574\u7406: \u30a4\u30f3\u30dc\u30c3\u30af\u30b9\u306e\u30bf\u30b9\u30af\u5185\u5bb9\u3092\u89e3\u6790\u3057\u3001\u9069\u5207\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u81ea\u52d5\u3067\u63d0\u6848\u3002</li> <li>\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u5206\u89e3: \u300c\u4f01\u753b\u66f8\u3092\u4f5c\u6210\u300d\u3068\u3044\u3063\u305f\u5927\u304d\u306a\u30bf\u30b9\u30af\u3092\u3001\u300c\u8cc7\u6599\u53ce\u96c6\u300d\u300c\u69cb\u6210\u6848\u4f5c\u6210\u300d\u3068\u3044\u3063\u305f\u5177\u4f53\u7684\u306a\u300c\u6b21\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u306b\u5206\u89e3\u3059\u308b\u3053\u3068\u3092\u63d0\u6848\u3002</li> <li>\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3055\u308c\u305f\u512a\u5148\u9806\u4f4d\u306e\u30b5\u30b8\u30a7\u30b9\u30c8: \u671f\u9650\u3084\u95a2\u9023\u6027\u306b\u52a0\u3048\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u4f5c\u696d\u30d1\u30bf\u30fc\u30f3\uff08\u96c6\u4e2d\u3067\u304d\u308b\u6642\u9593\u5e2f\u306a\u3069\uff09\u3084\u3001\u30bf\u30b9\u30af\u306b\u7d10\u3065\u304f\u30e1\u30e2\u306e\u611f\u60c5\uff08\u30dd\u30b8\u30c6\u30a3\u30d6/\u30cd\u30ac\u30c6\u30a3\u30d6\uff09\u3092\u5206\u6790\u3002\u300c\u6c17\u304c\u91cd\u3044\u30bf\u30b9\u30af\u300d\u306e\u65e9\u671f\u51e6\u7406\u3092\u4fc3\u3059\u306a\u3069\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5fc3\u7406\u72b6\u614b\u306b\u3082\u914d\u616e\u3057\u305f\u63d0\u6848\u3092\u884c\u3044\u307e\u3059\u3002</li> <li>\u30b9\u30de\u30fc\u30c8\u901a\u77e5: \u30e6\u30fc\u30b6\u30fc\u306e\u4f5c\u696d\u3092\u4e2d\u65ad\u3055\u305b\u306a\u3044\u3088\u3046\u3001\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u3084\u30bf\u30b9\u30af\u5b8c\u4e86\u6642\u306a\u3069\u3001\u81ea\u7136\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a7\u3048\u3081\u306b\u63d0\u6848\u3084\u901a\u77e5\u3092\u884c\u3044\u307e\u3059\u3002</li> </ul>"},{"location":"app/concept/#uiux","title":"UI/UX \u30c7\u30b6\u30a4\u30f3","text":"<ul> <li>\u30b7\u30f3\u30d7\u30eb\uff06\u30e2\u30c0\u30f3: \u96c6\u4e2d\u3092\u59a8\u3052\u306a\u3044\u3001\u30df\u30cb\u30de\u30eb\u3067\u6d17\u7df4\u3055\u308c\u305f\u30c7\u30b6\u30a4\u30f3\u3002</li> <li>AI \u304c\u524d\u9762\u306b\u51fa\u306a\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9: AI \u306f\u5439\u304d\u51fa\u3057\u306a\u3069\u3067\u72b6\u6cc1\u306b\u5fdc\u3058\u305f\u4e00\u8a00\u30b3\u30e1\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\u7a0b\u5ea6\u306e\u3001\u63a7\u3048\u3081\u306a\u5b58\u5728\u611f\u3092\u7dad\u6301\u3057\u307e\u3059\u3002</li> <li>\u30ad\u30fc\u30dc\u30fc\u30c9\u4e2d\u5fc3\u306e\u64cd\u4f5c\u6027: \u307b\u3068\u3093\u3069\u306e\u64cd\u4f5c\u304c\u30ad\u30fc\u30dc\u30fc\u30c9\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3067\u5b8c\u7d50\u3002</li> <li>\u8efd\u5feb\u306a\u52d5\u4f5c: \u30cd\u30a4\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u306a\u3089\u3067\u306f\u306e\u30b9\u30c8\u30ec\u30b9\u306e\u306a\u3044\u52d5\u4f5c\u3002</li> </ul>"},{"location":"app/concept/#_9","title":"\u6280\u8853\u7684\u306a\u7279\u5fb4","text":"<ul> <li>\u5b8c\u5168\u30aa\u30d5\u30e9\u30a4\u30f3\u52d5\u4f5c: \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u306f\u4e00\u5207\u4e0d\u8981\u3002\u5168\u3066\u306e\u30c7\u30fc\u30bf\u51e6\u7406\u3068 AI \u5206\u6790\u306f\u30ed\u30fc\u30ab\u30eb PC \u5185\u3067\u5b8c\u7d50\u3057\u307e\u3059\u3002</li> <li>AI PC \u7279\u5316\u8a2d\u8a08: OpenVINO\u2122 \u306a\u3069\u3092\u6d3b\u7528\u3057\u3001NPU \u4e0a\u3067\u9ad8\u5ea6\u306a AI \u51e6\u7406\u3092\u9ad8\u901f\u306b\u5b9f\u884c\u3002\u30e6\u30fc\u30b6\u30fc\u306e\u30e1\u30a4\u30f3\u4f5c\u696d\u3092\u963b\u5bb3\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067 AI \u304c\u601d\u8003\u3057\u307e\u3059\u3002</li> <li>\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u30fb\u30d5\u30a1\u30fc\u30b9\u30c8: \u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u306f\u3059\u3079\u3066\u30ed\u30fc\u30ab\u30eb PC \u306b\u4fdd\u5b58\u3002\u5916\u90e8\u306b\u9001\u4fe1\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002</li> </ul>"},{"location":"app/ui/","title":"UI \u30ac\u30a4\u30c9 - Kage","text":""},{"location":"app/ui/#_1","title":"\u306f\u3058\u3081\u306b","text":"<p>Kage \u306f\u3001GTD\uff08Getting Things Done\uff09\u30e1\u30bd\u30c3\u30c9\u3092\u6d3b\u7528\u3057\u305f\u30bf\u30b9\u30af\u7ba1\u7406\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002 \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u73fe\u5728\u306e\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08UI\uff09\u306b\u3064\u3044\u3066\u3001\u753b\u9762\u69cb\u6210\u3068\u6a5f\u80fd\u3092\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"app/ui/#_2","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u69cb\u6210","text":""},{"location":"app/ui/#_3","title":"\u57fa\u672c\u30ec\u30a4\u30a2\u30a6\u30c8","text":"<p>Kage \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u57fa\u672c\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\uff08\u30d8\u30c3\u30c0\u30fc\uff09: \u3059\u3079\u3066\u306e\u753b\u9762\u306b\u5171\u901a</li> <li>\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30ea\u30a2: \u5404\u753b\u9762\u56fa\u6709\u306e\u5185\u5bb9</li> <li>\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\u306e\u30dc\u30bf\u30f3\u3068\u30e1\u30cb\u30e5\u30fc\u306b\u3088\u308b\u753b\u9762\u9077\u79fb</li> </ul>"},{"location":"app/ui/#_4","title":"\u30ab\u30e9\u30fc\u30c6\u30fc\u30de","text":"<ul> <li>\u30d9\u30fc\u30b9\u30ab\u30e9\u30fc: \u30b0\u30ec\u30fc\u7cfb\uff08Grey 700\uff09</li> <li>\u80cc\u666f\u8272: \u30e9\u30a4\u30c8\u30e2\u30fc\u30c9\u57fa\u8abf</li> <li>\u30a2\u30af\u30bb\u30f3\u30c8\u30ab\u30e9\u30fc: \u5404\u6a5f\u80fd\u306b\u5fdc\u3058\u305f\u8272\u5206\u3051</li> <li>\u7dca\u6025\u30bf\u30b9\u30af: \u8d64 (Red 500)</li> <li>\u6b21\u306e\u30a2\u30af\u30b7\u30e7\u30f3: \u30aa\u30ec\u30f3\u30b8 (Orange 500)</li> <li>\u3044\u3064\u304b\u3084\u308b: \u9752 (Blue 500)</li> <li>\u53c2\u8003\u8cc7\u6599: \u7dd1 (Green 500)</li> </ul>"},{"location":"app/ui/#1","title":"1. \u30db\u30fc\u30e0\u753b\u9762\uff08\u30e1\u30a4\u30f3\u753b\u9762\uff09","text":""},{"location":"app/ui/#_5","title":"\u753b\u9762\u6982\u8981","text":"<p>\u30db\u30fc\u30e0\u753b\u9762\u306f\u3001Kage \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u70b9\u3068\u306a\u308b\u753b\u9762\u3067\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3068\u6700\u521d\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <p>\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5:</p> <ul> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306e\u521d\u671f\u753b\u9762</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\u306e\u300c\u30db\u30fc\u30e0\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af</li> <li>URL: <code>/</code></li> </ul>"},{"location":"app/ui/#_6","title":"\u753b\u9762\u69cb\u6210","text":"<p> \u30db\u30fc\u30e0\u753b\u9762\uff1a\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u30bf\u30b9\u30af\u7ba1\u7406\u30dc\u30bf\u30f3\u3001\u4eca\u65e5\u306e\u30bf\u30b9\u30af\u7d71\u8a08\u304c\u8868\u793a\u3055\u308c\u308b</p>"},{"location":"app/ui/#_7","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc","text":"<ul> <li>\u30bf\u30a4\u30c8\u30eb: \"Kage\"</li> <li>\u30db\u30fc\u30e0\u30dc\u30bf\u30f3: \u73fe\u5728\u306e\u753b\u9762\uff08\u30db\u30fc\u30e0\uff09\u306b\u623b\u308b</li> <li>\u30e1\u30cb\u30e5\u30fc\u30dc\u30bf\u30f3: \u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u30e1\u30cb\u30e5\u30fc\u3067\u30bf\u30b9\u30af\u753b\u9762\u3078\u306e\u9077\u79fb</li> </ul>"},{"location":"app/ui/#_8","title":"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4","text":"<ol> <li> <p>\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8</p> </li> <li> <p>\u30c6\u30ad\u30b9\u30c8: \"\u30bf\u30b9\u30af\u7ba1\u7406\u3067\u3082\u3063\u3068\u52b9\u7387\u7684\u306b\uff01\"</p> </li> <li>\u4e2d\u592e\u63c3\u3048\u3001\u30b0\u30ec\u30fc\u7cfb\u306e\u30c6\u30ad\u30b9\u30c8\u30ab\u30e9\u30fc</li> <li> <p>\u30d5\u30a9\u30f3\u30c8\u30b5\u30a4\u30ba: 18px</p> </li> <li> <p>\u30e1\u30a4\u30f3\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3</p> </li> <li> <p>\u30bf\u30b9\u30af\u7ba1\u7406\u30dc\u30bf\u30f3</p> <ul> <li>\u30e9\u30d9\u30eb: \"\u30bf\u30b9\u30af\u7ba1\u7406\"</li> <li>\u30a2\u30a4\u30b3\u30f3: \u30bf\u30b9\u30af\u30a2\u30a4\u30b3\u30f3\uff08task_alt\uff09</li> <li>\u30b5\u30a4\u30ba: \u5e45 200px\u3001\u9ad8\u3055 50px</li> <li>\u30d5\u30a9\u30f3\u30c8\u30b5\u30a4\u30ba: 16px</li> <li>\u6a5f\u80fd: \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\uff08<code>/task</code>\uff09\u3078\u306e\u9077\u79fb</li> </ul> </li> <li> <p>\u7d71\u8a08\u60c5\u5831\u30ab\u30fc\u30c9</p> </li> <li>\u4eca\u65e5\u306e\u30bf\u30b9\u30af\u30ab\u30fc\u30c9<ul> <li>\u30bf\u30a4\u30c8\u30eb: \"\u4eca\u65e5\u306e\u30bf\u30b9\u30af\"</li> <li>\u4ef6\u6570\u8868\u793a: \"X \u4ef6\" \u5f62\u5f0f</li> <li>\u30ab\u30fc\u30c9\u30c7\u30b6\u30a4\u30f3: \u5f71\u4ed8\u304d\u3001\u89d2\u4e38</li> <li>\u5e45: 200px</li> </ul> </li> </ol>"},{"location":"app/ui/#_9","title":"\u64cd\u4f5c\u65b9\u6cd5","text":"<ul> <li>\u30bf\u30b9\u30af\u7ba1\u7406\u30dc\u30bf\u30f3: \u30af\u30ea\u30c3\u30af\u3067\u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\u306b\u9077\u79fb</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\u306e\u30e1\u30cb\u30e5\u30fc: \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\u3078\u306e\u5225\u306e\u9077\u79fb\u65b9\u6cd5</li> </ul>"},{"location":"app/ui/#2","title":"2. \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762","text":""},{"location":"app/ui/#_10","title":"\u753b\u9762\u6982\u8981","text":"<p>\u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\u306f\u3001GTD \u30e1\u30bd\u30c3\u30c9\u306b\u57fa\u3065\u3044\u305f\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u4e2d\u6838\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 3 \u3064\u306e\u30bb\u30af\u30b7\u30e7\u30f3\uff08\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3001\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\uff09\u3067\u69cb\u6210\u3055\u308c\u305f\u7e26\u578b\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3059\u3002</p> <p>\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5:</p> <ul> <li>\u30db\u30fc\u30e0\u753b\u9762\u306e\u300c\u30bf\u30b9\u30af\u7ba1\u7406\u300d\u30dc\u30bf\u30f3</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u9078\u629e</li> <li>URL: <code>/task</code></li> </ul>"},{"location":"app/ui/#_11","title":"\u753b\u9762\u69cb\u6210","text":"<p> \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\uff1a\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3001\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\u306e 3 \u30bb\u30af\u30b7\u30e7\u30f3\u69cb\u6210</p>"},{"location":"app/ui/#_12","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc","text":"<ul> <li>\u30bf\u30a4\u30c8\u30eb: \"Kage - \u30bf\u30b9\u30af\u7ba1\u7406\"</li> <li>\u30db\u30fc\u30e0\u30dc\u30bf\u30f3: \u30db\u30fc\u30e0\u753b\u9762\uff08<code>/</code>\uff09\u3078\u306e\u9077\u79fb</li> <li>\u30e1\u30cb\u30e5\u30fc\u30dc\u30bf\u30f3: \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3</li> </ul>"},{"location":"app/ui/#1-quick-action","title":"\u30bb\u30af\u30b7\u30e7\u30f3 1: \u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\uff08QUICK-ACTION\uff09","text":"<p>GTD \u306e\u300c2 \u5206\u30eb\u30fc\u30eb\u300d\u3068\u300c\u30bf\u30b9\u30af\u306e\u6027\u8cea\u5206\u985e\u300d\u3092\u652f\u63f4\u3059\u308b\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u304c\u6c34\u5e73\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p> \u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\uff1aGTD \u30e1\u30bd\u30c3\u30c9\u306b\u57fa\u3065\u304f 4 \u3064\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\uff08\u3059\u3050\u306b\u3084\u308b\u3001\u6b21\u306b\u3084\u308b\u3001\u3044\u3064\u304b\u3084\u308b\u3001\u53c2\u8003\u8cc7\u6599\uff09</p> <p>\u30dc\u30bf\u30f3\u69cb\u6210:</p> <ol> <li> <p>\u3059\u3050\u306b\u3084\u308b (DO_NOW)</p> </li> <li> <p>\u30a2\u30a4\u30b3\u30f3: \u8ffd\u52a0\u30a2\u30a4\u30b3\u30f3\uff08add_circle\uff09</p> </li> <li>\u30ab\u30e9\u30fc: \u8d64\uff08Red 500\uff09</li> <li> <p>\u6a5f\u80fd: \u7dca\u6025\u30fb\u91cd\u8981\u306a\u30bf\u30b9\u30af\u306e\u4f5c\u6210</p> </li> <li> <p>\u6b21\u306b\u3084\u308b (DO_NEXT)</p> </li> <li> <p>\u30a2\u30a4\u30b3\u30f3: \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30a2\u30a4\u30b3\u30f3\uff08schedule\uff09</p> </li> <li>\u30ab\u30e9\u30fc: \u30aa\u30ec\u30f3\u30b8\uff08Orange 500\uff09</li> <li> <p>\u6a5f\u80fd: Next Action \u3068\u3057\u3066\u512a\u5148\u7684\u306b\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af\u306e\u4f5c\u6210</p> </li> <li> <p>\u3044\u3064\u304b\u3084\u308b (DO_SOMEDAY)</p> </li> <li> <p>\u30a2\u30a4\u30b3\u30f3: \u6642\u8a08\u30a2\u30a4\u30b3\u30f3\uff08access_time\uff09</p> </li> <li>\u30ab\u30e9\u30fc: \u9752\uff08Blue 500\uff09</li> <li> <p>\u6a5f\u80fd: Someday/Maybe \u30ea\u30b9\u30c8\u306e\u30bf\u30b9\u30af\u4f5c\u6210</p> </li> <li> <p>\u53c2\u8003\u8cc7\u6599 (REFERENCE)</p> </li> <li>\u30a2\u30a4\u30b3\u30f3: \u30d6\u30c3\u30af\u30de\u30fc\u30af\u30a2\u30a4\u30b3\u30f3\uff08bookmark\uff09</li> <li>\u30ab\u30e9\u30fc: \u7dd1\uff08Green 500\uff09</li> <li>\u6a5f\u80fd: \u53c2\u8003\u8cc7\u6599\u30fb\u60c5\u5831\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u4f5c\u6210</li> </ol> <p>\u30c7\u30b6\u30a4\u30f3\u7279\u5fb4:</p> <ul> <li>\u767d\u80cc\u666f\u306e\u30b3\u30f3\u30c6\u30ca</li> <li>\u89d2\u4e38\uff0812px\uff09</li> <li>\u5f71\u52b9\u679c\uff08BoxShadow\uff09</li> <li>\u5185\u5074\u30d1\u30c7\u30a3\u30f3\u30b0: 16px</li> </ul>"},{"location":"app/ui/#2-projects","title":"\u30bb\u30af\u30b7\u30e7\u30f3 2: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08PROJECTS\uff09","text":"<p>\u73fe\u5728\u958b\u767a\u4e2d\u306e\u6a5f\u80fd\u3067\u3001\u5c06\u6765\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u6a5f\u80fd\u3092\u63d0\u4f9b\u4e88\u5b9a\u3067\u3059\u3002</p> <p> \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bb\u30af\u30b7\u30e7\u30f3\uff1a\u958b\u767a\u4e2d\u6a5f\u80fd\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u8868\u793a</p> <p>\u73fe\u5728\u306e\u8868\u793a\u5185\u5bb9:</p> <ul> <li>\u30d8\u30c3\u30c0\u30fc: \"PROJECTS\" + \u30d5\u30a9\u30eb\u30c0\u30a2\u30a4\u30b3\u30f3</li> <li>\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8:</li> <li>\u5efa\u8a2d\u30a2\u30a4\u30b3\u30f3\uff08construction\uff09</li> <li>\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6a5f\u80fd\u306f\u958b\u767a\u4e2d\u3067\u3059\"</li> <li>\"\u8fd1\u65e5\u4e2d\u306b\u30ea\u30ea\u30fc\u30b9\u4e88\u5b9a\u3067\u3059\u3002\u30bf\u30b9\u30af\u306e\u6574\u7406\u3084\u30b0\u30eb\u30fc\u30d7\u5316\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\"</li> </ul> <p>\u30c7\u30b6\u30a4\u30f3\u7279\u5fb4:</p> <ul> <li>\u30b0\u30ec\u30fc\u80cc\u666f\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u30a8\u30ea\u30a2</li> <li>\u4e2d\u592e\u5bc4\u305b\u30ec\u30a4\u30a2\u30a6\u30c8</li> <li>\u89d2\u4e38\u3001\u5f71\u52b9\u679c</li> </ul>"},{"location":"app/ui/#3-tasks","title":"\u30bb\u30af\u30b7\u30e7\u30f3 3: \u30bf\u30b9\u30af\u30dc\u30fc\u30c9\uff08TASKS\uff09","text":"<p>GTD \u306e\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u57fa\u3065\u3044\u305f 2 \u30ab\u30e9\u30e0\u306e\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\u3067\u3059\u3002</p> <p> \u30bf\u30b9\u30af\u30dc\u30fc\u30c9\uff1aCLOSED\uff08\u5b8c\u4e86\u6e08\u307f\uff09\u3068 INBOX\uff08\u672a\u51e6\u7406\uff09\u306e 2 \u30ab\u30e9\u30e0\u69cb\u6210\u3067\u30bf\u30b9\u30af\u3092\u7ba1\u7406</p> <p>\u30ec\u30a4\u30a2\u30a6\u30c8\u69cb\u6210:</p> <ul> <li>\u5de6\u30ab\u30e9\u30e0: CLOSED\uff08\u5b8c\u4e86\u6e08\u307f\u30bf\u30b9\u30af\uff09</li> <li>\u53f3\u30ab\u30e9\u30e0: INBOX\uff08\u672a\u51e6\u7406\u30bf\u30b9\u30af\uff09</li> </ul> <p>\u30bf\u30b9\u30af\u30ab\u30fc\u30c9\u306e\u6a5f\u80fd:</p> <ul> <li>\u8868\u793a\u9805\u76ee: \u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\u3001\u8aac\u660e\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u3001\u4f5c\u6210\u65e5\u6642</li> <li>\u64cd\u4f5c: \u30af\u30ea\u30c3\u30af\u3067\u7de8\u96c6\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u3001\u524a\u9664</li> <li>\u8272\u5206\u3051: \u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u3088\u308b\u8996\u899a\u7684\u5206\u985e</li> </ul> <p>\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9:</p> <ul> <li><code>INBOX</code>: \u30aa\u30ec\u30f3\u30b8 - \u672a\u51e6\u7406\u30fb\u8981\u5206\u985e</li> <li><code>NEXT_ACTION</code>: \u7dd1 - \u6b21\u306b\u3084\u308b\u3079\u304d\u30a2\u30af\u30b7\u30e7\u30f3</li> <li><code>WAITING</code>: \u9ec4 - \u4ed6\u8005\u306e\u56de\u7b54\u5f85\u3061</li> <li><code>SCHEDULED</code>: \u9752 - \u65e5\u6642\u6307\u5b9a</li> <li><code>SOMEDAY_MAYBE</code>: \u7d2b - \u3044\u3064\u304b\u3084\u308b\u304b\u3082</li> <li><code>DONE</code>: \u30b0\u30ec\u30fc - \u5b8c\u4e86\u6e08\u307f</li> </ul>"},{"location":"app/ui/#_13","title":"\u64cd\u4f5c\u65b9\u6cd5","text":""},{"location":"app/ui/#_14","title":"\u30bf\u30b9\u30af\u306e\u4f5c\u6210","text":"<ol> <li>\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af</li> <li>\u30bf\u30b9\u30af\u4f5c\u6210\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a</li> <li>\u30bf\u30a4\u30c8\u30eb\u3001\u8aac\u660e\u306a\u3069\u3092\u5165\u529b</li> <li>\u4fdd\u5b58\u3067\u30bf\u30b9\u30af\u304c\u4f5c\u6210\u3055\u308c\u3001\u9069\u5207\u306a\u30b9\u30c6\u30fc\u30bf\u30b9\u3067\u5206\u985e</li> </ol>"},{"location":"app/ui/#_15","title":"\u30bf\u30b9\u30af\u306e\u7de8\u96c6\u30fb\u7ba1\u7406","text":"<ol> <li>\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\u5185\u306e\u30bf\u30b9\u30af\u30ab\u30fc\u30c9\u3092\u30af\u30ea\u30c3\u30af</li> <li>\u30bf\u30b9\u30af\u7de8\u96c6\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a</li> <li>\u60c5\u5831\u306e\u7de8\u96c6\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u3001\u524a\u9664\u304c\u53ef\u80fd</li> </ol>"},{"location":"app/ui/#_16","title":"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3","text":"<ul> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\u306e\u30db\u30fc\u30e0\u30dc\u30bf\u30f3\u3067\u30db\u30fc\u30e0\u753b\u9762\u306b\u623b\u308b</li> <li>\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u305d\u306e\u4ed6\u306e\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\uff08\u4eca\u5f8c\u8ffd\u52a0\u4e88\u5b9a\uff09</li> </ul>"},{"location":"app/ui/#3","title":"3. \u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7","text":""},{"location":"app/ui/#_17","title":"\u30bf\u30b9\u30af\u4f5c\u6210\u30fb\u7de8\u96c6\u30c0\u30a4\u30a2\u30ed\u30b0","text":"<p>\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u3084\u7de8\u96c6\u3092\u884c\u3046\u305f\u3081\u306e\u30e2\u30fc\u30c0\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u3059\u3002</p> <p> \u30bf\u30b9\u30af\u4f5c\u6210\u30fb\u7de8\u96c6\u30c0\u30a4\u30a2\u30ed\u30b0\uff1a\u30bf\u30a4\u30c8\u30eb\u3001\u8aac\u660e\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u9078\u629e\u3001\u4f5c\u6210\u65e5\u6642\u8868\u793a\u3068\u64cd\u4f5c\u30dc\u30bf\u30f3</p> <p>\u5165\u529b\u30d5\u30a3\u30fc\u30eb\u30c9:</p> <ul> <li>\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb: \u5fc5\u9808\u3001\u6700\u5927 100 \u6587\u5b57</li> <li>\u8aac\u660e: \u4efb\u610f\u3001\u8907\u6570\u884c\u5bfe\u5fdc</li> <li>\u30b9\u30c6\u30fc\u30bf\u30b9: \u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u3067\u9078\u629e</li> <li>\u4f5c\u6210\u65e5\u6642: \u81ea\u52d5\u8a2d\u5b9a</li> </ul> <p>\u30dc\u30bf\u30f3:</p> <ul> <li>\u4fdd\u5b58: \u30bf\u30b9\u30af\u306e\u4f5c\u6210\u30fb\u66f4\u65b0</li> <li>\u30ad\u30e3\u30f3\u30bb\u30eb: \u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u9589\u3058\u308b</li> <li>\u524a\u9664: \u7de8\u96c6\u6642\u306e\u307f\u8868\u793a</li> </ul>"},{"location":"app/ui/#_18","title":"\u524a\u9664\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0","text":"<p>\u30bf\u30b9\u30af\u524a\u9664\u6642\u306e\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u3059\u3002</p> <p>\u8868\u793a\u5185\u5bb9:</p> <ul> <li>\u30bf\u30a4\u30c8\u30eb: \"\u30bf\u30b9\u30af\u524a\u9664\u306e\u78ba\u8a8d\"</li> <li>\u30e1\u30c3\u30bb\u30fc\u30b8: \"\u300c[\u30bf\u30b9\u30af\u540d]\u300d\u3092\u524a\u9664\u3057\u307e\u3059\u304b\uff1f\u3053\u306e\u64cd\u4f5c\u306f\u5143\u306b\u623b\u305b\u307e\u305b\u3093\u3002\"</li> <li>\u30dc\u30bf\u30f3: \"\u524a\u9664\"\uff08\u78ba\u8a8d\uff09\u3001\"\u30ad\u30e3\u30f3\u30bb\u30eb\"</li> </ul>"},{"location":"app/ui/#4","title":"4. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3068\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af","text":""},{"location":"app/ui/#_19","title":"\u30a8\u30e9\u30fc\u8868\u793a","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306e\u8868\u793a\u65b9\u6cd5\uff1a</p> <ul> <li>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8: \u30b9\u30ca\u30c3\u30af\u30d0\u30fc\u307e\u305f\u306f\u30a2\u30e9\u30fc\u30c8\u30c0\u30a4\u30a2\u30ed\u30b0</li> <li>\u6210\u529f\u30e1\u30c3\u30bb\u30fc\u30b8: \u7dd1\u8272\u306e\u30b9\u30ca\u30c3\u30af\u30d0\u30fc</li> <li>\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8: \u9ec4\u8272\u306e\u30b9\u30ca\u30c3\u30af\u30d0\u30fc</li> </ul>"},{"location":"app/ui/#_20","title":"\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u72b6\u614b","text":"<p>\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u4e2d\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u5b9f\u884c\u4e2d\u306e\u8868\u793a\uff1a</p> <ul> <li>\u30d7\u30ed\u30b0\u30ec\u30b9\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u30fc: \u51e6\u7406\u4e2d\u306e\u8996\u899a\u7684\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af</li> <li>\u30dc\u30bf\u30f3\u306e\u7121\u52b9\u5316: \u91cd\u8907\u5b9f\u884c\u306e\u9632\u6b62</li> </ul>"},{"location":"app/ui/#5","title":"5. \u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u30c7\u30b6\u30a4\u30f3\u3068\u64cd\u4f5c\u6027","text":""},{"location":"app/ui/#_21","title":"\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u5bfe\u5fdc","text":"<ul> <li>\u6700\u5c0f\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba: \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u9069\u5207\u306a\u30b5\u30a4\u30ba</li> <li>\u30b9\u30af\u30ed\u30fc\u30eb\u5bfe\u5fdc: \u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u753b\u9762\u3092\u306f\u307f\u51fa\u3059\u5834\u5408\u306e\u81ea\u52d5\u30b9\u30af\u30ed\u30fc\u30eb</li> <li>\u30ec\u30a4\u30a2\u30a6\u30c8\u8abf\u6574: \u7e26\u65b9\u5411\u306e\u4f38\u7e2e\u306b\u5bfe\u5fdc</li> </ul>"},{"location":"app/ui/#_22","title":"\u30ad\u30fc\u30dc\u30fc\u30c9\u64cd\u4f5c","text":"<p>\u73fe\u5728\u306e\u5b9f\u88c5\u3067\u306f\u4e3b\u306b\u30de\u30a6\u30b9\u64cd\u4f5c\u4e2d\u5fc3\u3067\u3059\u304c\u3001\u5c06\u6765\u7684\u306b\u30ad\u30fc\u30dc\u30fc\u30c9\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u306e\u8ffd\u52a0\u3092\u4e88\u5b9a\uff1a</p> <ul> <li>Enter: \u30c0\u30a4\u30a2\u30ed\u30b0\u306e\u78ba\u5b9a</li> <li>Escape: \u30c0\u30a4\u30a2\u30ed\u30b0\u306e\u30ad\u30e3\u30f3\u30bb\u30eb</li> <li>\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u30ad\u30fc: \u30bf\u30b9\u30af\u4f5c\u6210\u3001\u753b\u9762\u9077\u79fb\u306a\u3069\uff08\u4eca\u5f8c\u8ffd\u52a0\u4e88\u5b9a\uff09</li> </ul>"},{"location":"app/ui/#6","title":"6. \u4eca\u5f8c\u306e\u6539\u5584\u4e88\u5b9a","text":""},{"location":"app/ui/#_23","title":"\u8fd1\u65e5\u4e2d\u306e\u8ffd\u52a0\u6a5f\u80fd","text":"<ol> <li> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u6a5f\u80fd</p> </li> <li> <p>\u30bf\u30b9\u30af\u306e\u30b0\u30eb\u30fc\u30d7\u5316</p> </li> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u968e\u5c64\u8868\u793a</li> <li> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d9\u30fc\u30b9\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0</p> </li> <li> <p>\u691c\u7d22\u30fb\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u6a5f\u80fd</p> </li> <li> <p>\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\u30fb\u8aac\u660e\u3067\u306e\u691c\u7d22</p> </li> <li>\u30b9\u30c6\u30fc\u30bf\u30b9\u3001\u65e5\u4ed8\u3067\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0</li> <li> <p>\u30bf\u30b0\u6a5f\u80fd</p> </li> <li> <p>\u30c9\u30e9\u30c3\u30b0&amp;\u30c9\u30ed\u30c3\u30d7</p> </li> <li> <p>\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\u9593\u3067\u306e\u30bf\u30b9\u30af\u79fb\u52d5</p> </li> <li> <p>\u76f4\u611f\u7684\u306a\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4</p> </li> <li> <p>\u30ad\u30fc\u30dc\u30fc\u30c9\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8</p> </li> <li>\u52b9\u7387\u7684\u306a\u64cd\u4f5c\u306e\u305f\u3081\u306e\u30db\u30c3\u30c8\u30ad\u30fc</li> <li>\u30a2\u30af\u30bb\u30b7\u30d3\u30ea\u30c6\u30a3\u306e\u5411\u4e0a</li> </ol>"},{"location":"app/ui/#_24","title":"\u9577\u671f\u7684\u306a\u6539\u5584","text":"<ol> <li> <p>AI \u30a2\u30b7\u30b9\u30bf\u30f3\u30c8\u6a5f\u80fd</p> </li> <li> <p>\u30bf\u30b9\u30af\u306e\u81ea\u52d5\u5206\u985e\u30fb\u63d0\u6848</p> </li> <li> <p>\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30d9\u30fc\u30b9\u306e\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3</p> </li> <li> <p>\u8a73\u7d30\u306a GTD \u30ef\u30fc\u30af\u30d5\u30ed\u30fc</p> </li> <li> <p>\u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd</p> </li> <li>Inbox Review \u306e\u652f\u63f4</li> <li> <p>Context\uff08@PC\u3001@\u5916\u51fa\u5148\u306a\u3069\uff09\u7ba1\u7406</p> </li> <li> <p>\u30c7\u30fc\u30bf\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30fb\u30a4\u30f3\u30dd\u30fc\u30c8</p> </li> <li>\u4ed6\u306e\u30bf\u30b9\u30af\u7ba1\u7406\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a</li> <li>\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30fb\u5fa9\u5143\u6a5f\u80fd</li> </ol>"},{"location":"app/ui/#_25","title":"\u88dc\u8db3\u60c5\u5831","text":""},{"location":"app/ui/#_26","title":"\u6280\u8853\u7684\u8a73\u7d30","text":"<ul> <li>\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af: Flet (Flutter for Python)</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: SQLite\uff08SQLModel \u7d4c\u7531\uff09</li> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3: \u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 + DDD</li> <li>\u30c7\u30b6\u30a4\u30f3\u30b7\u30b9\u30c6\u30e0: Material Design \u6e96\u62e0</li> </ul>"},{"location":"app/ui/#_27","title":"\u30d5\u30a1\u30a4\u30eb\u69cb\u6210","text":"<p>\u4e3b\u8981\u306a UI \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\uff1a</p> <pre><code>src/views/\n\u251c\u2500\u2500 home/\n\u2502   \u251c\u2500\u2500 view.py           # \u30db\u30fc\u30e0\u753b\u9762\u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\n\u2502   \u2514\u2500\u2500 components.py     # \u30db\u30fc\u30e0\u753b\u9762\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\u251c\u2500\u2500 task/\n\u2502   \u251c\u2500\u2500 view.py           # \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\n\u2502   \u2514\u2500\u2500 components/       # \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\u2502       \u251c\u2500\u2500 quick_actions.py      # \u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\n\u2502       \u251c\u2500\u2500 tasks_board.py        # \u30bf\u30b9\u30af\u30dc\u30fc\u30c9\n\u2502       \u251c\u2500\u2500 task_dialog.py        # \u30bf\u30b9\u30af\u30c0\u30a4\u30a2\u30ed\u30b0\n\u2502       \u2514\u2500\u2500 projects_placeholder.py # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\n\u2514\u2500\u2500 shared/\n    \u251c\u2500\u2500 app_bar.py        # \u5171\u901a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\n    \u251c\u2500\u2500 base_view.py      # \u30d9\u30fc\u30b9\u30d3\u30e5\u30fc\u30af\u30e9\u30b9\n    \u2514\u2500\u2500 error_handling_mixin.py # \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n</code></pre> <p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u9032\u6357\u306b\u5408\u308f\u305b\u3066\u7d99\u7d9a\u7684\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"dev/agents_guide/","title":"Agent\u5c64 \u8a2d\u8a08\u30ac\u30a4\u30c9 - LangChain\u3068LangGraph\u306e\u6d3b\u7528","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001<code>agents</code>\u5c64\u306e\u8a2d\u8a08\u3068\u5b9f\u88c5\u65b9\u91dd\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002<code>LangChain</code>\u3068<code>LangGraph</code>\u3092\u5229\u7528\u3057\u3066\u3001\u81ea\u5f8b\u7684\u306a\u30bf\u30b9\u30af\u5b9f\u884c\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"dev/agents_guide/#agent","title":"Agent\u5c64\u306e\u5f79\u5272","text":"<p>Agent\u5c64\u306f\u3001\u8907\u96d1\u3067\u8907\u6570\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u8981\u3059\u308b\u30bf\u30b9\u30af\u3084\u3001\u5927\u898f\u6a21\u8a00\u8a9e\u30e2\u30c7\u30eb\uff08LLM\uff09\u306e\u80fd\u529b\u3092\u6700\u5927\u9650\u306b\u6d3b\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u51e6\u7406\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002</p>"},{"location":"dev/agents_guide/#_1","title":"\u4e3b\u306a\u8cac\u52d9","text":"<ul> <li>\u81ea\u5f8b\u7684\u306a\u30bf\u30b9\u30af\u5b9f\u884c: \u4e0e\u3048\u3089\u308c\u305f\u76ee\u6a19\u306b\u5bfe\u3057\u3001\u30c4\u30fc\u30eb\u3092\u4f7f\u3044\u5206\u3051\u306a\u304c\u3089\u81ea\u5f8b\u7684\u306b\u30bf\u30b9\u30af\u3092\u9042\u884c\u3057\u307e\u3059\u3002</li> <li>\u72b6\u614b\u7ba1\u7406: <code>LangGraph</code>\u3092\u5229\u7528\u3057\u3066\u3001\u30bf\u30b9\u30af\u306e\u9032\u6357\u3084\u4e2d\u9593\u7d50\u679c\u306a\u3069\u306e\u72b6\u614b\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002</li> <li>\u30c4\u30fc\u30eb\u9023\u643a: <code>Logic</code>\u5c64\u306e\u30b5\u30fc\u30d3\u30b9\u3084\u5916\u90e8API\u3092\u300c\u30c4\u30fc\u30eb\u300d\u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"dev/agents_guide/#langchainlanggraph","title":"\u306a\u305cLangChain\u3068LangGraph\u3092\u4f7f\u3046\u306e\u304b\uff1f","text":"<ul> <li>LangChain: LLM\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u306e\u305f\u3081\u306e\u8c4a\u5bcc\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u30d7\u30ed\u30f3\u30d7\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001\u30d1\u30fc\u30b5\u30fc\u3001\u30c4\u30fc\u30eb\u9023\u643a\u306a\u3069\uff09\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>LangGraph: \u72b6\u614b\u3092\u6301\u3064\u30b0\u30e9\u30d5\u3068\u3057\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u51e6\u7406\u30d5\u30ed\u30fc\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30eb\u30fc\u30d7\u3084\u6761\u4ef6\u5206\u5c90\u3092\u542b\u3080\u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5805\u7262\u306b\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"dev/agents_guide/#_2","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4e0a\u306e\u4f4d\u7f6e\u3065\u3051","text":"<p>Agent\u5c64\u306f\u3001<code>Logic</code>\u5c64\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u5f62\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002<code>Logic</code>\u5c64\u304c\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u6307\u793a\u3092\u89e3\u91c8\u3057\u3001\u3069\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u30bf\u30b9\u30af\u3092\u4f9d\u983c\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002</p> <p>```plain text \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      Views      \u2502 (UI Layer) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      Logic      \u2502 (Business Logic Layer) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2518          \u2502   \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2510 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502  Models  \u2502 \u2502 \u2502  Agents  \u2502 (AI Agent Layer) \u2502 (Data)   \u2502 \u2502 \u2502          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2518              \u2502       \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba Tools (e.g., Logic services, APIs) <pre><code>## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n\n```plain text\nsrc/agents/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 base.py                 # BaseAgent\u306a\u3069\u3001\u3059\u3079\u3066\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u57fa\u5e95\u5b9a\u7fa9\n\u251c\u2500\u2500 agent_conf.py           # LLM\u30d7\u30ed\u30d0\u30a4\u30c0\u306a\u3069\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u95a2\u9023\u306e\u8a2d\u5b9a\n\u251c\u2500\u2500 utils.py                # LLM\u30e2\u30c7\u30eb\u3084\u30e1\u30e2\u30ea\u53d6\u5f97\u306a\u3069\u306e\u5171\u901a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\u251c\u2500\u2500 tools/                  # \u8907\u6570\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u5171\u6709\u3059\u308b\u30c4\u30fc\u30eb\n\u2502   \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 task_agents/            # \u7279\u5b9a\u306e\u76ee\u7684\u3092\u6301\u3064\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u7fa4\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 splitter/           # \u300c\u30bf\u30b9\u30af\u5206\u5272\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u300d\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 agent.py        # \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u672c\u4f53 (\u30b0\u30e9\u30d5\u5b9a\u7fa9\u3001\u30ce\u30fc\u30c9\u5b9f\u88c5)\n        \u251c\u2500\u2500 prompt.py       # \u30d7\u30ed\u30f3\u30d7\u30c8\u5b9a\u7fa9\n        \u2514\u2500\u2500 state.py        # \u72b6\u614b(State)\u3068\u51fa\u529b\u30e2\u30c7\u30eb(Pydantic)\u306e\u5b9a\u7fa9\n</code></pre></p>"},{"location":"dev/agents_guide/#_3","title":"\u5b9f\u88c5\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"<p><code>BaseAgent</code>\u3092\u7d99\u627f\u3057\u305f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9f\u88c5\u4f8b\u3067\u3059\u3002\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u4e3b\u306b<code>state.py</code>, <code>prompt.py</code>, <code>agent.py</code>\u306e3\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"dev/agents_guide/#1-splitterstatepy","title":"1. \u72b6\u614b\u3068\u51fa\u529b\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9 (<code>splitter/state.py</code>)","text":"<p>\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5185\u90e8\u3067\u308a\u6271\u3046\u72b6\u614b\u3068\u3001\u6700\u7d42\u7684\u306b\u51fa\u529b\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <pre><code>from pydantic import BaseModel, Field\nfrom agents.base import BaseAgentState\n\n# \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5185\u90e8\u72b6\u614b\u3092\u5b9a\u7fa9\nclass TaskSplitterState(BaseAgentState):\n    \"\"\"\u30bf\u30b9\u30af\u5206\u5272\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u72b6\u614b.\"\"\"\n    task_title: str\n    task_description: str\n\n# LLM\u306b\u69cb\u9020\u5316\u3055\u308c\u305f\u51fa\u529b\u3092\u5f37\u5236\u3059\u308b\u305f\u3081\u306ePydantic\u30e2\u30c7\u30eb\nclass TaskSplitterOutput(BaseModel):\n    \"\"\"\u3053\u306e\u30c4\u30fc\u30eb\u3092\u5e38\u306b\u5fdc\u7b54\u306e\u69cb\u9020\u5316\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044.\"\"\"\n    task_titles: list[str] = Field(description=\"\u5206\u5272\u3055\u308c\u305f\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u306e\u30ea\u30b9\u30c8\")\n    task_descriptions: list[str] = Field(description=\"\u5206\u5272\u3055\u308c\u305f\u30bf\u30b9\u30af\u306e\u8aac\u660e\u306e\u30ea\u30b9\u30c8\")\n</code></pre>"},{"location":"dev/agents_guide/#2-splitterpromptpy","title":"2. \u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u5b9a\u7fa9 (<code>splitter/prompt.py</code>)","text":"<p>\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <pre><code>from langchain_core.prompts import ChatPromptTemplate\n\n# \u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5f79\u5272\u3092\u5b9a\u7fa9\nSPLITTER_AGENT_SYSTEM_PROMPT = \"\"\"\u3042\u306a\u305f\u306f\u3001\u30bf\u30b9\u30af\u3092\u5c0f\u3055\u306a\u30b5\u30d6\u30bf\u30b9\u30af\u306b\u5206\u5272\u3059\u308b\u306e\u304c\u5f97\u610f\u306a\u30a2\u30b7\u30b9\u30bf\u30f3\u30c8\u3067\u3059\u3002\n...\uff08\u5f79\u5272\u3084\u6307\u793a\u306e\u8a73\u7d30\uff09...\n\"\"\"\n\n# \u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\nSPLITTER_AGENT_HUMAN_PROMPT = \"\"\"\u4ee5\u4e0b\u306e\u30bf\u30b9\u30af\u3092\u5c0f\u3055\u306a\u30b5\u30d6\u30bf\u30b9\u30af\u306b\u5206\u5272\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u30bf\u30b9\u30af\u540d: {task_name}\n\u30bf\u30b9\u30af\u8aac\u660e: {task_description}\n\"\"\"\n\n# ChatPromptTemplate\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u7d44\u307f\u7acb\u3066\u308b\nsplitter_agent_prompt = ChatPromptTemplate.from_messages(\n    [\n        (\"system\", SPLITTER_AGENT_SYSTEM_PROMPT),\n        (\"human\", SPLITTER_AGENT_HUMAN_PROMPT),\n    ]\n)\n</code></pre>"},{"location":"dev/agents_guide/#3-splitteragentpy","title":"3. \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u672c\u4f53\u306e\u5b9f\u88c5 (<code>splitter/agent.py</code>)","text":"<p><code>BaseAgent</code>\u3092\u7d99\u627f\u3057\u3001\u30b0\u30e9\u30d5\u306e\u69cb\u7bc9\u3068\u30ce\u30fc\u30c9\u306e\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>from langgraph.graph import START, StateGraph\nfrom agents.base import BaseAgent\nfrom .prompt import splitter_agent_prompt\nfrom .state import TaskSplitterOutput, TaskSplitterState\n\nclass TaskSplitterAgent(BaseAgent[TaskSplitterState, TaskSplitterOutput]):\n    \"\"\"\u30bf\u30b9\u30af\u5206\u5272\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u5b9f\u88c5.\"\"\"\n\n    # \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\n    _name = \"TaskSplitterAgent\"\n    _description = \"\u30bf\u30b9\u30af\u3092\u5206\u5272\u3057\u3066\u51e6\u7406\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\"\n    _state = TaskSplitterState\n\n    def create_graph(self, graph_builder: StateGraph) -&gt; StateGraph:\n        \"\"\"\u30b0\u30e9\u30d5\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9a\u7fa9.\"\"\"\n        graph_builder.add_node(\"chatbot\", self.chatbot_node) # \u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\n        graph_builder.add_edge(START, \"chatbot\") # \u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\n        return graph_builder\n\n    def chatbot_node(self, state: TaskSplitterState) -&gt; dict[str, TaskSplitterOutput]:\n        \"\"\"\u30b0\u30e9\u30d5\u306e\u30ce\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406.\"\"\"\n        # \u30e2\u30c7\u30eb\u3068\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u6e96\u5099\n        model = self.get_model()\n        # \u51fa\u529b\u30e2\u30c7\u30eb(Pydantic)\u3092\u30c4\u30fc\u30eb\u3068\u3057\u3066LLM\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3001\u69cb\u9020\u5316\u51fa\u529b\u3092\u5f37\u5236\n        llm_with_tools = model.bind_tools([TaskSplitterOutput])\n        agent = splitter_agent_prompt | llm_with_tools\n\n        # \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5b9f\u884c\n        response = agent.invoke({\n            \"task_name\": state[\"task_title\"],\n            \"task_description\": state[\"task_description\"],\n        })\n\n        # \u7d50\u679c\u3092\u30d1\u30fc\u30b9\u3057\u3066\u72b6\u614b\u3092\u66f4\u65b0\n        output_obj = TaskSplitterOutput.model_validate(response.tool_calls[0][\"args\"])\n        return {\"final_response\": output_obj}\n</code></pre>"},{"location":"dev/architecture-design/","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u8a2d\u8a08\u30ac\u30a4\u30c9 - \u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068 GTD \u57fa\u76e4","text":""},{"location":"dev/architecture-design/#_1","title":"\u306f\u3058\u3081\u306b","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001Kage \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u63a1\u7528\u3057\u3066\u3044\u308b\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u57fa\u3065\u304f\u8a2d\u8a08\u601d\u60f3\u306b\u3064\u3044\u3066\u3001Python \u521d\u5b66\u8005\u5411\u3051\u306b\u5206\u304b\u308a\u3084\u3059\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\u672c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001GTD\uff08Getting Things Done\uff09\u624b\u6cd5\u3092\u30d9\u30fc\u30b9\u3068\u3057\u305f\u30bf\u30b9\u30af\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u4fdd\u5b88\u6027\u30fb\u62e1\u5f35\u6027\u30fb\u30c6\u30b9\u30bf\u30d3\u30ea\u30c6\u30a3\u3092\u91cd\u8996\u3057\u305f\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/architecture-design/#_2","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6982\u8981","text":""},{"location":"dev/architecture-design/#2025-8","title":"\u6280\u8853\u30b9\u30bf\u30c3\u30af\uff082025 \u5e74 8 \u6708\u73fe\u5728\uff09","text":"<ul> <li>UI \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af: Flet 0.27.6</li> <li>ORM: SQLModel 0.0.24</li> <li>AI/Agent: LangChain 0.3.26 + LangGraph 0.4.9</li> <li>\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406: uv 0.7.3</li> <li>\u958b\u767a\u30c4\u30fc\u30eb: Ruff, Pyright, pytest</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: SQLite\uff08Alembic \u5bfe\u5fdc\uff09</li> </ul>"},{"location":"dev/architecture-design/#gtd","title":"GTD \u57fa\u76e4\u306e\u5b9f\u88c5","text":"<p>Kage \u306f\u4ee5\u4e0b\u306e GTD \u6838\u5fc3\u6982\u5ff5\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>Inbox: \u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u306e\u53d7\u3051\u76bf</li> <li>Next Action: \u6b21\u306b\u53d6\u308b\u5177\u4f53\u7684\u306a\u30a2\u30af\u30b7\u30e7\u30f3</li> <li>Waiting For: \u4ed6\u8005\u306e\u5bfe\u5fdc\u5f85\u3061\u9805\u76ee</li> <li>Someday/Maybe: \u3044\u3064\u304b\u3084\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u9805\u76ee</li> <li>Projects: \u8907\u6570\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f34\u3046\u6210\u679c</li> <li>Delegated: \u59d4\u8b72\u3055\u308c\u305f\u30bf\u30b9\u30af</li> </ul>"},{"location":"dev/architecture-design/#_3","title":"\u306a\u305c\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304c\u91cd\u8981\u306a\u306e\u304b\uff1f","text":""},{"location":"dev/architecture-design/#_4","title":"\u60aa\u3044\u4f8b\uff1a\u3059\u3079\u3066\u3092\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304f\u5834\u5408","text":"<pre><code># \u274c \u60aa\u3044\u4f8b\uff1a\u3059\u3079\u3066\u304c\u6df7\u5728\u3057\u3066\u3044\u308b\nimport flet as ft\nfrom sqlmodel import Session, create_engine, SQLModel, Field\nimport uuid\nfrom datetime import datetime\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001UI\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u304c\u3059\u3079\u3066\u6df7\u5728\nclass Task(SQLModel, table=True):\n    id: uuid.UUID = Field(primary_key=True)\n    title: str\n    completed: bool = False\n\ndef main():\n    engine = create_engine(\"sqlite:///tasks.db\")\n\n    def on_add_task(e):\n        # UI\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n        title = title_field.value\n\n        # \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\uff08\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\uff09\n        if not title:\n            show_error(\"\u30bf\u30a4\u30c8\u30eb\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n            return\n\n        if len(title) &gt; 100:\n            show_error(\"\u30bf\u30a4\u30c8\u30eb\u306f100\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n            return\n\n        # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u76f4\u63a5\u4fdd\u5b58\uff08\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\uff09\n        with Session(engine) as session:\n            task = Task(id=uuid.uuid4(), title=title)\n            session.add(task)\n            session.commit()\n\n        # UI\u3092\u66f4\u65b0\uff08\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\uff09\n        refresh_task_list()\n\n    # UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4f5c\u6210\n    title_field = ft.TextField(label=\"\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\")\n    # ...\n</code></pre> <p>\u3053\u306e\u66f8\u304d\u65b9\u306e\u554f\u984c\u70b9\uff1a</p> <ul> <li>\u5358\u4e00\u8cac\u4efb\u539f\u5247\u9055\u53cd: \u4e00\u3064\u306e\u95a2\u6570\u3067\u591a\u304f\u306e\u8cac\u4efb\u3092\u8ca0\u3063\u3066\u3044\u308b</li> <li>\u30c6\u30b9\u30c8\u304c\u56f0\u96e3: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001UI\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u304c\u5bc6\u7d50\u5408</li> <li>\u4fee\u6b63\u6642\u306e\u5f71\u97ff\u304c\u5927\u304d\u3044: \u4e00\u7b87\u6240\u306e\u5909\u66f4\u304c\u4ed6\u306e\u90e8\u5206\u306b\u6ce2\u53ca\u3057\u3084\u3059\u3044</li> <li>\u30b3\u30fc\u30c9\u306e\u518d\u5229\u7528\u304c\u3067\u304d\u306a\u3044: \u7279\u5b9a\u306e UI \u306b\u4f9d\u5b58\u3057\u305f\u30ed\u30b8\u30c3\u30af</li> <li>\u62e1\u5f35\u304c\u56f0\u96e3: \u65b0\u6a5f\u80fd\u8ffd\u52a0\u6642\u306b\u65e2\u5b58\u30b3\u30fc\u30c9\u306b\u5927\u304d\u306a\u5f71\u97ff</li> </ul>"},{"location":"dev/architecture-design/#_5","title":"\u826f\u3044\u4f8b\uff1a\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u57fa\u3065\u304f\u8cac\u4efb\u5206\u96e2","text":"<pre><code># \u2705 \u826f\u3044\u4f8b\uff1a\u8cac\u4efb\u304c\u660e\u78ba\u306b\u5206\u96e2\u3055\u308c\u3066\u3044\u308b\n\n# models/task.py - \u30c7\u30fc\u30bf\u69cb\u9020\u3068GTD\u306e\u5b9f\u88c5\nfrom enum import Enum\nfrom sqlmodel import SQLModel, Field\nimport uuid\n\nclass TaskStatus(str, Enum):\n    \"\"\"GTD\u30b7\u30b9\u30c6\u30e0\u306b\u57fa\u3065\u304f\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\"\"\"\n    INBOX = \"inbox\"\n    NEXT_ACTION = \"next_action\"\n    WAITING_FOR = \"waiting_for\"\n    SOMEDAY_MAYBE = \"someday_maybe\"\n    DELEGATED = \"delegated\"\n    COMPLETED = \"completed\"\n    CANCELLED = \"cancelled\"\n\nclass TaskBase(SQLModel):\n    \"\"\"\u30bf\u30b9\u30af\u306e\u57fa\u672c\u30e2\u30c7\u30eb\"\"\"\n    title: str = Field(index=True)\n    description: str = Field(default=\"\")\n    status: TaskStatus = Field(default=TaskStatus.INBOX, index=True)\n\nclass TaskCreate(TaskBase):\n    \"\"\"\u65b0\u898f\u4f5c\u6210\u6642\u306b\u4f7f\u7528\uff08ID\u306f\u4e0d\u8981\uff09\"\"\"\n    pass\n\nclass TaskRead(TaskBase):\n    \"\"\"\u8aad\u307f\u53d6\u308a\u6642\u306b\u4f7f\u7528\uff08ID\u304c\u5fc5\u8981\uff09\"\"\"\n    id: uuid.UUID\n\n# logic/services/task_service.py - \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\nclass TaskService:\n    def __init__(self, repository: TaskRepository):\n        self.repository = repository\n\n    def create_task(self, command: TaskCreate) -&gt; TaskRead:\n        \"\"\"GTD\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u30bf\u30b9\u30af\u3092\u4f5c\u6210\"\"\"\n        if not command.title.strip():\n            raise TaskServiceCreateError(\"\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u5fc5\u9808\u3067\u3059\")\n\n        return self.repository.create(command)\n\n# logic/application/task_application_service.py - \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\nclass TaskApplicationService:\n    \"\"\"View\u5c64\u304b\u3089Session\u7ba1\u7406\u3092\u5206\u96e2\"\"\"\n\n    def create_task(self, command: CreateTaskCommand) -&gt; TaskRead:\n        with SqlModelUnitOfWork() as uow:\n            service_factory = create_service_factory(uow.session)\n            task_service = service_factory.create_task_service()\n            return task_service.create_task(command.to_create_model())\n\n# views/task/view.py - UI\u8868\u793a\nclass TaskView(BaseView):\n    def __init__(self):\n        self.task_app_service = get_application_service_container().get_task_application_service()\n\n    def on_add_task(self, e):\n        \"\"\"UI\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\"\"\"\n        try:\n            command = CreateTaskCommand(title=self.title_field.value)\n            task = self.task_app_service.create_task(command)\n            self.refresh_task_list()\n        except TaskServiceCreateError as e:\n            self.show_error(str(e))\n</code></pre>"},{"location":"dev/architecture-design/#_6","title":"\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u30ec\u30a4\u30e4\u30fc\u69cb\u9020","text":"<p>\u672c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30ed\u30d0\u30fc\u30c8\u30fbC\u30fb\u30de\u30fc\u30c6\u30a3\u30f3\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u539f\u5247\u306b\u57fa\u3065\u304d\u3001\u95a2\u5fc3\u4e8b\u306e\u5206\u96e2\u3092\u5fb9\u5e95\u3057\u305f\u30ec\u30a4\u30e4\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Views Layer           \u2502 \ud83c\udfa8 UI\u3068\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\n\u2502         (src/views/)            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 Commands/Events\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502       Application Layer         \u2502 \ud83d\udd04 \u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3068\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u8abf\u6574\n\u2502      (src/logic/application/)   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502 Business Logic\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        Services Layer           \u2502 \ud83e\udde0 \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u3068GTD\u30ed\u30b8\u30c3\u30af\n\u2502       (src/logic/services/)     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502          \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Models    \u2502 \u2502     Agents     \u2502 \ud83e\udd16 LLM/AI\u81ea\u52d5\u5316\n\u2502 (src/models)\u2502 \u2502 (src/agents/)  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    Infrastructure        \u2502 \ud83d\udcbe \u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\u3068\u30ea\u30dd\u30b8\u30c8\u30ea\n\u2502 (src/logic/repositories/) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"dev/architecture-design/#_7","title":"\u5404\u5c64\u306e\u8cac\u52d9","text":"<ul> <li>Views Layer: Flet \u3092\u4f7f\u7528\u3057\u305f UI \u8868\u793a\u3001\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u51e6\u7406\u3001Application Service \u306e\u547c\u3073\u51fa\u3057</li> <li>Application Layer: \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u7ba1\u7406\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u306e\u8abf\u6574\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406</li> <li>Services Layer: GTD \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u3001\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u3001\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3</li> <li>Models Layer: \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u5b9a\u7fa9\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3001\u578b\u5b89\u5168\u6027</li> <li>Agents Layer: LangChain/LangGraph \u306b\u3088\u308b AI \u81ea\u52d5\u5316\u3001\u8907\u96d1\u306a\u30bf\u30b9\u30af\u306e\u59d4\u8b72</li> <li>Infrastructure Layer: \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3\u3001\u5916\u90e8\u30b7\u30b9\u30c6\u30e0\u9023\u643a</li> </ul>"},{"location":"dev/architecture-design/#model-layer","title":"\u30e2\u30c7\u30eb\u5c64\uff08Model Layer\uff09\u306e\u8a73\u7d30\u8a2d\u8a08","text":""},{"location":"dev/architecture-design/#1-gtd","title":"1. GTD \u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u5b9a\u7fa9","text":"<p>\u30e2\u30c7\u30eb\u5c64\u3067\u306f\u3001GTD \u624b\u6cd5\u306b\u57fa\u3065\u3044\u305f\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u6982\u5ff5\u3092\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002</p> <pre><code># models/task.py - \u5b9f\u969b\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9f\u88c5\u4f8b\nfrom enum import Enum\nfrom datetime import date\nfrom sqlmodel import Field, SQLModel\nimport uuid\n\nclass TaskStatus(str, Enum):\n    \"\"\"GTD\u30b7\u30b9\u30c6\u30e0\u306b\u57fa\u3065\u304f\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\"\"\"\n    INBOX = \"inbox\"                # \u53d7\u4fe1\u7bb1\uff08\u672a\u5206\u985e\uff09\n    NEXT_ACTION = \"next_action\"    # \u6b21\u306e\u30a2\u30af\u30b7\u30e7\u30f3\n    WAITING_FOR = \"waiting_for\"    # \u4ed6\u8005\u306e\u5bfe\u5fdc\u5f85\u3061\n    SOMEDAY_MAYBE = \"someday_maybe\" # \u3044\u3064\u304b\u3084\u308b\u304b\u3082\u3057\u308c\u306a\u3044\n    DELEGATED = \"delegated\"        # \u59d4\u8b72\u6e08\u307f\n    COMPLETED = \"completed\"        # \u5b8c\u4e86\n    CANCELLED = \"cancelled\"        # \u30ad\u30e3\u30f3\u30bb\u30eb\n\nclass TaskBase(SQLModel):\n    \"\"\"\u30bf\u30b9\u30af\u306e\u57fa\u672c\u5c5e\u6027\u3092\u5b9a\u7fa9\"\"\"\n    project_id: uuid.UUID | None = Field(default=None, foreign_key=\"project.id\", index=True)\n    parent_id: uuid.UUID | None = Field(default=None, foreign_key=\"task.id\", index=True)\n    title: str = Field(index=True)  # \u691c\u7d22\u7528\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n    description: str = Field(default=\"\")\n    status: TaskStatus = Field(default=TaskStatus.INBOX, index=True)  # \u30b9\u30c6\u30fc\u30bf\u30b9\u691c\u7d22\u7528\n    due_date: date | None = Field(default=None)  # \u7de0\u5207\u65e5\n</code></pre>"},{"location":"dev/architecture-design/#2-cqrs","title":"2. CQRS \u5bfe\u5fdc\u306e\u578b\u5b89\u5168\u306a\u30e2\u30c7\u30eb\u8a2d\u8a08","text":"<p>Command Query Responsibility Segregation (CQRS) \u30d1\u30bf\u30fc\u30f3\u306b\u57fa\u3065\u304d\u3001\u7528\u9014\u5225\u306b\u30e2\u30c7\u30eb\u3092\u5206\u96e2\uff1a</p> <pre><code># \u4f5c\u6210\u7528\u30e2\u30c7\u30eb\uff08ID\u306f\u4e0d\u8981\uff09\nclass TaskCreate(TaskBase):\n    \"\"\"\u65b0\u898f\u30bf\u30b9\u30af\u4f5c\u6210\u6642\u306b\u4f7f\u7528\"\"\"\n    pass\n\n# \u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb\uff08ID\u304c\u5fc5\u8981\uff09\nclass TaskRead(TaskBase):\n    \"\"\"\u30bf\u30b9\u30af\u53d6\u5f97\u30fb\u8868\u793a\u6642\u306b\u4f7f\u7528\"\"\"\n    id: uuid.UUID\n    created_at: datetime\n    updated_at: datetime\n\n# \u66f4\u65b0\u7528\u30e2\u30c7\u30eb\uff08\u5909\u66f4\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\uff09\nclass TaskUpdate(SQLModel):\n    \"\"\"\u30bf\u30b9\u30af\u66f4\u65b0\u6642\u306b\u4f7f\u7528\uff08\u90e8\u5206\u66f4\u65b0\u5bfe\u5fdc\uff09\"\"\"\n    title: str | None = None\n    description: str | None = None\n    status: TaskStatus | None = None\n    due_date: date | None = None\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\nclass Task(TaskBase, table=True):\n    \"\"\"\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c6\u30fc\u30d6\u30eb\"\"\"\n    id: uuid.UUID = Field(default_factory=uuid.uuid4, primary_key=True)\n    created_at: datetime = Field(default_factory=datetime.now)\n    updated_at: datetime = Field(default_factory=datetime.now)\n</code></pre>"},{"location":"dev/architecture-design/#3","title":"3. \u95a2\u9023\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u306e\u9023\u643a","text":"<pre><code># models/project.py - \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\nclass Project(SQLModel, table=True):\n    \"\"\"GTD\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6982\u5ff5\u3092\u5b9f\u88c5\"\"\"\n    id: uuid.UUID = Field(default_factory=uuid.uuid4, primary_key=True)\n    name: str = Field(index=True)\n    description: str = Field(default=\"\")\n    status: ProjectStatus = Field(default=ProjectStatus.ACTIVE)\n\n# models/tag.py - \u30bf\u30b0\u30b7\u30b9\u30c6\u30e0\nclass Tag(SQLModel, table=True):\n    \"\"\"\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u30bf\u30b0\u7ba1\u7406\"\"\"\n    id: uuid.UUID = Field(default_factory=uuid.uuid4, primary_key=True)\n    name: str = Field(unique=True, index=True)\n    color: str = Field(default=\"#808080\")\n\n# models/task_tag.py - \u591a\u5bfe\u591a\u95a2\u4fc2\nclass TaskTag(SQLModel, table=True):\n    \"\"\"\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u4fc2\u30c6\u30fc\u30d6\u30eb\"\"\"\n    task_id: uuid.UUID = Field(foreign_key=\"task.id\", primary_key=True)\n    tag_id: uuid.UUID = Field(foreign_key=\"tag.id\", primary_key=True)\n</code></pre>"},{"location":"dev/architecture-design/#_8","title":"\u306a\u305c\u8907\u6570\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u306e\u304b\uff1f","text":""},{"location":"dev/architecture-design/#1","title":"\u7406\u7531 1: \u578b\u5b89\u5168\u6027\u306e\u78ba\u4fdd","text":"<pre><code># \u274c \u60aa\u3044\u4f8b\uff1a\u5358\u4e00\u30e2\u30c7\u30eb\u3067\u306e\u66d6\u6627\u306a\u4f7f\u7528\ndef create_task(task: Task) -&gt; Task:  # ID\u304c\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\n    pass\n\n# \u2705 \u826f\u3044\u4f8b\uff1a\u610f\u56f3\u304c\u660e\u78ba\ndef create_task(task_data: TaskCreate) -&gt; TaskRead:  # ID\u306f\u4e0d\u8981\u3001\u623b\u308a\u5024\u306fID\u3092\u542b\u3080\n    pass\n</code></pre>"},{"location":"dev/architecture-design/#2","title":"\u7406\u7531 2: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3","text":"<pre><code># API\u7d4c\u7531\u3067\u306e\u4e0d\u6b63\u306aID\u6307\u5b9a\u3092\u9632\u6b62\n@app.post(\"/api/tasks\")\ndef create_task_endpoint(task: TaskCreate):  # ID\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\n    return task_service.create_task(task)\n</code></pre>"},{"location":"dev/architecture-design/#3_1","title":"\u7406\u7531 3: \u90e8\u5206\u66f4\u65b0\u306e\u6700\u9069\u5316","text":"<pre><code># \u5fc5\u8981\u306a\u9805\u76ee\u306e\u307f\u3092\u66f4\u65b0\ndef update_task_status(task_id: uuid.UUID, status: TaskStatus) -&gt; TaskRead:\n    update_data = TaskUpdate(status=status)  # title\u3084description\u306f\u5909\u66f4\u3057\u306a\u3044\n    return repository.update(task_id, update_data)\n</code></pre>"},{"location":"dev/architecture-design/#services-layer","title":"\u30b5\u30fc\u30d3\u30b9\u5c64\uff08Services Layer\uff09\u306e\u8a73\u7d30\u8a2d\u8a08","text":""},{"location":"dev/architecture-design/#1-gtd_1","title":"1. GTD \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb\u306e\u5b9f\u88c5","text":"<p>\u30b5\u30fc\u30d3\u30b9\u5c64\u306f\u300cGTD \u306e\u539f\u5247\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u69d8\u300d\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code># logic/services/task_service.py - \u5b9f\u969b\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9f\u88c5\nclass TaskService(ServiceBase):\n    \"\"\"\u30bf\u30b9\u30af\u306e\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u7ba1\u7406\"\"\"\n\n    def __init__(self, task_repo: TaskRepository, project_repo: ProjectRepository):\n        self.task_repo = task_repo\n        self.project_repo = project_repo\n\n    def create_task(self, task_data: TaskCreate) -&gt; TaskRead:\n        \"\"\"GTD\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u30bf\u30b9\u30af\u3092\u4f5c\u6210\"\"\"\n        # \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb1: \u30bf\u30a4\u30c8\u30eb\u306f\u5fc5\u9808\n        if not task_data.title.strip():\n            raise TaskServiceCreateError(\"\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u5fc5\u9808\u3067\u3059\")\n\n        # \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb2: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5b58\u5728\u78ba\u8a8d\n        if task_data.project_id:\n            project = self.project_repo.get_by_id(task_data.project_id)\n            if not project:\n                raise TaskServiceCreateError(\"\u6307\u5b9a\u3055\u308c\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\")\n\n        # \u30d3\u30b8\u30cd\u30b9\u30eb\u30fc\u30eb3: \u65b0\u898f\u30bf\u30b9\u30af\u306f\u81ea\u52d5\u7684\u306bInbox\u306b\u914d\u7f6e\uff08GTD\u539f\u5247\uff09\n        if not task_data.status:\n            task_data.status = TaskStatus.INBOX\n\n        return self.task_repo.create(task_data)\n\n    def move_to_next_action(self, task_id: uuid.UUID) -&gt; TaskRead:\n        \"\"\"\u30bf\u30b9\u30af\u3092Next Action\u306b\u79fb\u52d5\uff08GTD\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\uff09\"\"\"\n        task = self.task_repo.get_by_id(task_id)\n        if not task:\n            raise TaskServiceError(\"\u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n\n        # GTD\u30eb\u30fc\u30eb: Inbox\u304b\u3089\u306e\u307f Next Action \u306b\u79fb\u52d5\u53ef\u80fd\n        if task.status != TaskStatus.INBOX:\n            raise TaskServiceError(\"Inbox\u306e\u30bf\u30b9\u30af\u306e\u307fNext Action\u306b\u79fb\u52d5\u3067\u304d\u307e\u3059\")\n\n        update_data = TaskUpdate(status=TaskStatus.NEXT_ACTION)\n        return self.task_repo.update(task_id, update_data)\n</code></pre>"},{"location":"dev/architecture-design/#2-gtd","title":"2. \u8907\u96d1\u306a GTD \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u5b9f\u88c5","text":"<pre><code>class TaskService(ServiceBase):\n    def process_inbox_item(self, task_id: uuid.UUID, decision: InboxDecision) -&gt; TaskRead:\n        \"\"\"Inbox\u30a2\u30a4\u30c6\u30e0\u306e\u51e6\u7406\uff08GTD\u306e\u6838\u5fc3\u30d7\u30ed\u30bb\u30b9\uff09\"\"\"\n        task = self.task_repo.get_by_id(task_id)\n\n        match decision.action:\n            case InboxAction.DELETE:\n                # \u4e0d\u8981\u306a\u30bf\u30b9\u30af\u3092\u524a\u9664\n                self.task_repo.delete(task_id)\n                return None\n\n            case InboxAction.DELEGATE:\n                # \u30bf\u30b9\u30af\u3092\u59d4\u8b72\n                update_data = TaskUpdate(\n                    status=TaskStatus.DELEGATED,\n                    description=f\"Delegated to: {decision.delegate_to}\"\n                )\n                return self.task_repo.update(task_id, update_data)\n\n            case InboxAction.DO_NOW:\n                # 2\u5206\u4ee5\u5185\u3067\u5b8c\u4e86\u53ef\u80fd\u306a\u30bf\u30b9\u30af\u306f\u3059\u3050\u306b\u5b9f\u884c\n                update_data = TaskUpdate(status=TaskStatus.COMPLETED)\n                return self.task_repo.update(task_id, update_data)\n\n            case InboxAction.SCHEDULE:\n                # \u7279\u5b9a\u306e\u65e5\u6642\u306b\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af\n                update_data = TaskUpdate(\n                    status=TaskStatus.NEXT_ACTION,\n                    due_date=decision.scheduled_date\n                )\n                return self.task_repo.update(task_id, update_data)\n\n            case InboxAction.SOMEDAY_MAYBE:\n                # \u3044\u3064\u304b\u3084\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u30bf\u30b9\u30af\n                update_data = TaskUpdate(status=TaskStatus.SOMEDAY_MAYBE)\n                return self.task_repo.update(task_id, update_data)\n\n    def get_next_actions_by_context(self, context_tags: list[str]) -&gt; list[TaskRead]:\n        \"\"\"\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5225\u306eNext Action\u53d6\u5f97\uff08GTD\u5b9f\u8df5\uff09\"\"\"\n        return self.task_repo.get_by_status_and_tags(\n            TaskStatus.NEXT_ACTION,\n            context_tags\n        )\n</code></pre>"},{"location":"dev/architecture-design/#3-repository","title":"3. Repository \u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u5206\u96e2","text":"<pre><code># logic/repositories/task.py - \u5b9f\u969b\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9f\u88c5\nclass TaskRepository(BaseRepository[Task, TaskCreate, TaskUpdate]):\n    \"\"\"\u30bf\u30b9\u30af\u306e\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3092\u62c5\u5f53\"\"\"\n\n    def get_by_status_and_tags(self, status: TaskStatus, tag_names: list[str]) -&gt; list[Task]:\n        \"\"\"\u30b9\u30c6\u30fc\u30bf\u30b9\u3068\u30bf\u30b0\u3067\u30bf\u30b9\u30af\u3092\u691c\u7d22\uff08GTD\u5b9f\u8df5\u7528\uff09\"\"\"\n        stmt = (\n            select(Task)\n            .where(Task.status == status)\n            .join(TaskTag)\n            .join(Tag)\n            .where(Tag.name.in_(tag_names))\n        )\n        return self.session.exec(stmt).all()\n\n    def get_overdue_tasks(self) -&gt; list[Task]:\n        \"\"\"\u671f\u9650\u5207\u308c\u30bf\u30b9\u30af\u306e\u53d6\u5f97\"\"\"\n        today = date.today()\n        stmt = select(Task).where(\n            and_(\n                Task.due_date &lt; today,\n                Task.status.in_([TaskStatus.NEXT_ACTION, TaskStatus.WAITING_FOR])\n            )\n        )\n        return self.session.exec(stmt).all()\n\n    def get_tasks_by_project(self, project_id: uuid.UUID) -&gt; list[Task]:\n        \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5225\u30bf\u30b9\u30af\u53d6\u5f97\"\"\"\n        stmt = select(Task).where(Task.project_id == project_id)\n        return self.session.exec(stmt).all()\n</code></pre>"},{"location":"dev/architecture-design/#application-layer","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\uff08Application Layer\uff09\u306e\u8a2d\u8a08","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306f\u3001\u30d3\u30e5\u30fc\u304b\u3089\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b8c\u5168\u306b\u5206\u96e2\u3057\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002</p>"},{"location":"dev/architecture-design/#1-application-service","title":"1. Application Service \u30d1\u30bf\u30fc\u30f3","text":"<pre><code># logic/application/task_application_service.py - \u5b9f\u969b\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9f\u88c5\nclass TaskApplicationService(BaseApplicationService):\n    \"\"\"View\u5c64\u304b\u3089Session\u7ba1\u7406\u3092\u5206\u96e2\u3057\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u8abf\u6574\"\"\"\n\n    def create_task(self, command: CreateTaskCommand) -&gt; TaskRead:\n        \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u8abf\u6574\"\"\"\n        with SqlModelUnitOfWork() as uow:\n            # \u30b5\u30fc\u30d3\u30b9\u30d5\u30a1\u30af\u30c8\u30ea\u3067DI\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u53d6\u5f97\n            service_factory = create_service_factory(uow.session)\n            task_service = service_factory.create_task_service()\n\n            # \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306e\u5b9f\u884c\n            task = task_service.create_task(command.to_create_model())\n\n            # \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30b3\u30df\u30c3\u30c8\u306f UnitOfWork \u304c\u7ba1\u7406\n            return task\n\n    def process_gtd_inbox_review(self, decisions: list[InboxDecision]) -&gt; list[TaskRead]:\n        \"\"\"GTD Inbox Review \u306e\u4e00\u62ec\u51e6\u7406\"\"\"\n        results = []\n\n        # \u5358\u4e00\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u8907\u6570\u30bf\u30b9\u30af\u3092\u51e6\u7406\n        with SqlModelUnitOfWork() as uow:\n            service_factory = create_service_factory(uow.session)\n            task_service = service_factory.create_task_service()\n\n            for decision in decisions:\n                try:\n                    result = task_service.process_inbox_item(\n                        decision.task_id,\n                        decision\n                    )\n                    results.append(result)\n                    logger.info(f\"Processed task {decision.task_id}: {decision.action}\")\n                except TaskServiceError as e:\n                    # \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u5168\u4f53\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n                    logger.error(f\"Failed to process {decision.task_id}: {e}\")\n                    raise\n\n        return results\n</code></pre>"},{"location":"dev/architecture-design/#2-commandquery","title":"2. Command/Query \u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5","text":"<pre><code># logic/commands/task_commands.py - \u30b3\u30de\u30f3\u30c9\u30d1\u30bf\u30fc\u30f3\n@dataclass\nclass CreateTaskCommand:\n    \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\"\"\"\n    title: str\n    description: str = \"\"\n    project_id: uuid.UUID | None = None\n    due_date: date | None = None\n\n    def to_create_model(self) -&gt; TaskCreate:\n        \"\"\"\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u5909\u63db\"\"\"\n        return TaskCreate(\n            title=self.title,\n            description=self.description,\n            project_id=self.project_id,\n            due_date=self.due_date\n        )\n\n# logic/queries/task_queries.py - \u30af\u30a8\u30ea\u30d1\u30bf\u30fc\u30f3\n@dataclass\nclass GetTasksByStatusQuery:\n    \"\"\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n    status: TaskStatus\n    limit: int = 100\n    offset: int = 0\n\nclass TaskQuery:\n    \"\"\"\u30bf\u30b9\u30af\u30af\u30a8\u30ea\u30b5\u30fc\u30d3\u30b9\"\"\"\n\n    def get_tasks_by_status(self, query: GetTasksByStatusQuery) -&gt; list[TaskRead]:\n        with SqlModelUnitOfWork() as uow:\n            repo = TaskRepository(Task, uow.session)\n            tasks = repo.get_by_status(query.status, query.limit, query.offset)\n            return [TaskRead.model_validate(task) for task in tasks]\n</code></pre>"},{"location":"dev/architecture-design/#3_2","title":"3. \u4f9d\u5b58\u6027\u6ce8\u5165\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3","text":"<pre><code># logic/container.py - DI \u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u88c5\nclass ServiceContainer:\n    \"\"\"\u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\uff08Dependency Injection\uff09\"\"\"\n\n    def __init__(self) -&gt; None:\n        self._task_app_service: TaskApplicationService | None = None\n        self._project_app_service: ProjectApplicationService | None = None\n        self._tag_app_service: TagApplicationService | None = None\n\n    def get_task_application_service(self) -&gt; TaskApplicationService:\n        \"\"\"\u30bf\u30b9\u30afApplication Service\u3092\u53d6\u5f97\uff08\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\uff09\"\"\"\n        if self._task_app_service is None:\n            self._task_app_service = TaskApplicationService()\n        return self._task_app_service\n\n# logic/factory.py - \u30d5\u30a1\u30af\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3\nclass ServiceFactory:\n    \"\"\"\u30b5\u30fc\u30d3\u30b9\u30d5\u30a1\u30af\u30c8\u30ea\uff08Session\u6ce8\u5165\uff09\"\"\"\n\n    def __init__(self, repository_factory: RepositoryFactory):\n        self.repository_factory = repository_factory\n\n    def create_task_service(self) -&gt; TaskService:\n        \"\"\"TaskService\u3092\u751f\u6210\"\"\"\n        task_repo = self.repository_factory.create_task_repository()\n        project_repo = self.repository_factory.create_project_repository()\n        return TaskService(task_repo, project_repo)\n\n# \u4f7f\u7528\u4f8b\ndef get_application_service_container() -&gt; ServiceContainer:\n    \"\"\"View\u5c64\u3067\u4f7f\u7528\u3059\u308bDI\u30b3\u30f3\u30c6\u30ca\u53d6\u5f97\"\"\"\n    return service_container  # \u30b0\u30ed\u30fc\u30d0\u30eb\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\n</code></pre>"},{"location":"dev/architecture-design/#4-unit-of-work","title":"4. Unit of Work \u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406","text":"<pre><code># logic/unit_of_work.py - \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u7ba1\u7406\nclass SqlModelUnitOfWork:\n    \"\"\"SQLModel\u7528\u306eUnit of Work\u30d1\u30bf\u30fc\u30f3\u5b9f\u88c5\"\"\"\n\n    def __init__(self):\n        self.session = Session(get_engine())\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if exc_type is None:\n            self.session.commit()  # \u6b63\u5e38\u7d42\u4e86\u6642\u306f\u30b3\u30df\u30c3\u30c8\n        else:\n            self.session.rollback()  # \u4f8b\u5916\u767a\u751f\u6642\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n        self.session.close()\n\n    def commit(self):\n        \"\"\"\u660e\u793a\u7684\u306a\u30b3\u30df\u30c3\u30c8\"\"\"\n        self.session.commit()\n\n    def rollback(self):\n        \"\"\"\u660e\u793a\u7684\u306a\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\"\"\"\n        self.session.rollback()\n</code></pre>"},{"location":"dev/architecture-design/#agent-agent-layer-ai","title":"Agent \u5c64\uff08Agent Layer\uff09\u3068 AI \u7d71\u5408","text":"<p>Agent \u5c64\u306f\u3001LangChain/LangGraph \u3092\u4f7f\u7528\u3057\u3066 LLM \u30d9\u30fc\u30b9\u306e\u81ea\u52d5\u5316\u3068\u8907\u96d1\u306a\u5224\u65ad\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p>"},{"location":"dev/architecture-design/#1-gtd_2","title":"1. GTD \u81ea\u52d5\u5316\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8","text":"<pre><code># agents/gtd_processor.py - GTD\u51e6\u7406\u306e\u81ea\u52d5\u5316\nclass GTDProcessorAgent:\n    \"\"\"GTD\u51e6\u7406\u3092\u81ea\u52d5\u5316\u3059\u308b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\"\"\"\n\n    def __init__(self):\n        self.llm = ChatGoogleGenerativeAI(model=\"gemini-pro\")\n        self.task_service_tool = TaskServiceTool()  # Services\u5c64\u306e\u30c4\u30fc\u30eb\u5316\n\n    def auto_categorize_inbox_item(self, task_description: str) -&gt; InboxDecision:\n        \"\"\"Inbox\u30a2\u30a4\u30c6\u30e0\u306e\u81ea\u52d5\u5206\u985e\"\"\"\n        prompt = f\"\"\"\n        \u4ee5\u4e0b\u306e\u30bf\u30b9\u30af\u3092GTD\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u5206\u985e\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n\n        \u30bf\u30b9\u30af: {task_description}\n\n        \u5206\u985e\u9078\u629e\u80a2:\n        1. DELETE - \u4e0d\u8981\u306a\u30bf\u30b9\u30af\n        2. DO_NOW - 2\u5206\u4ee5\u5185\u3067\u5b8c\u4e86\u53ef\u80fd\n        3. DELEGATE - \u4ed6\u8005\u306b\u59d4\u8b72\u3059\u3079\u304d\n        4. SCHEDULE - \u7279\u5b9a\u65e5\u6642\u306b\u5b9f\u884c\n        5. SOMEDAY_MAYBE - \u3044\u3064\u304b\u3084\u308b\u304b\u3082\u3057\u308c\u306a\u3044\n\n        \u7406\u7531\u3068\u5171\u306b\u56de\u7b54\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n        \"\"\"\n\n        response = self.llm.invoke(prompt)\n        return self._parse_categorization_response(response.content)\n\n# agents/task_automation.py - \u30bf\u30b9\u30af\u81ea\u52d5\u5316\nclass TaskAutomationAgent:\n    \"\"\"\u30bf\u30b9\u30af\u306e\u81ea\u52d5\u51e6\u7406\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\"\"\"\n\n    def suggest_next_actions(self, context: str, available_time: int) -&gt; list[TaskRead]:\n        \"\"\"\u73fe\u5728\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3068\u5229\u7528\u53ef\u80fd\u6642\u9593\u306b\u57fa\u3065\u304f\u63a8\u5968\u30a2\u30af\u30b7\u30e7\u30f3\"\"\"\n        # LangGraph\u3067\u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u88c5\n        workflow = StateGraph(TaskSuggestionState)\n\n        workflow.add_node(\"analyze_context\", self._analyze_context)\n        workflow.add_node(\"filter_by_time\", self._filter_by_available_time)\n        workflow.add_node(\"prioritize_tasks\", self._prioritize_tasks)\n\n        workflow.add_edge(\"analyze_context\", \"filter_by_time\")\n        workflow.add_edge(\"filter_by_time\", \"prioritize_tasks\")\n\n        app = workflow.compile()\n\n        initial_state = TaskSuggestionState(\n            context=context,\n            available_time=available_time\n        )\n\n        result = app.invoke(initial_state)\n        return result[\"suggested_tasks\"]\n</code></pre>"},{"location":"dev/architecture-design/#2-langgraph","title":"2. LangGraph \u306b\u3088\u308b\u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","text":"<pre><code># agents/workflows/weekly_review.py - \u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u306e\u81ea\u52d5\u5316\nclass WeeklyReviewWorkflow:\n    \"\"\"GTD\u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u306e\u81ea\u52d5\u5316\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\"\"\"\n\n    def create_review_workflow(self) -&gt; StateGraph:\n        \"\"\"\u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u69cb\u7bc9\"\"\"\n        workflow = StateGraph(WeeklyReviewState)\n\n        # \u30ce\u30fc\u30c9\u5b9a\u7fa9\n        workflow.add_node(\"collect_completed_tasks\", self._collect_completed_tasks)\n        workflow.add_node(\"review_project_progress\", self._review_project_progress)\n        workflow.add_node(\"update_someday_maybe\", self._update_someday_maybe)\n        workflow.add_node(\"plan_next_week\", self._plan_next_week)\n        workflow.add_node(\"generate_review_report\", self._generate_review_report)\n\n        # \u30a8\u30c3\u30b8\u5b9a\u7fa9\uff08\u5b9f\u884c\u9806\u5e8f\uff09\n        workflow.add_edge(START, \"collect_completed_tasks\")\n        workflow.add_edge(\"collect_completed_tasks\", \"review_project_progress\")\n        workflow.add_edge(\"review_project_progress\", \"update_someday_maybe\")\n        workflow.add_edge(\"update_someday_maybe\", \"plan_next_week\")\n        workflow.add_edge(\"plan_next_week\", \"generate_review_report\")\n        workflow.add_edge(\"generate_review_report\", END)\n\n        return workflow.compile()\n\n    def _collect_completed_tasks(self, state: WeeklyReviewState) -&gt; dict:\n        \"\"\"\u4eca\u9031\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u3092\u53ce\u96c6\"\"\"\n        task_service = self.service_container.get_task_application_service()\n        completed_tasks = task_service.get_completed_tasks_this_week()\n\n        return {\n            \"completed_tasks\": completed_tasks,\n            \"completion_stats\": self._calculate_completion_stats(completed_tasks)\n        }\n</code></pre>"},{"location":"dev/architecture-design/#3-agent-service","title":"3. Agent-Service \u9023\u643a\u30d1\u30bf\u30fc\u30f3","text":"<pre><code># agents/tools/task_service_tool.py - Services\u5c64\u306e\u30c4\u30fc\u30eb\u5316\nclass TaskServiceTool(BaseTool):\n    \"\"\"TaskService\u3092LangChain\u30c4\u30fc\u30eb\u3068\u3057\u3066\u516c\u958b\"\"\"\n\n    name = \"task_service\"\n    description = \"GTD\u30bf\u30b9\u30af\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\"\n\n    def _run(self, action: str, **kwargs) -&gt; str:\n        \"\"\"\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u5c64\u3092\u547c\u3073\u51fa\u3057\"\"\"\n        task_app_service = get_application_service_container().get_task_application_service()\n\n        match action:\n            case \"create_task\":\n                command = CreateTaskCommand(**kwargs)\n                task = task_app_service.create_task(command)\n                return f\"\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f: {task.title}\"\n\n            case \"get_next_actions\":\n                context = kwargs.get(\"context\", [])\n                tasks = task_app_service.get_next_actions_by_context(context)\n                return f\"Next Actions: {[task.title for task in tasks]}\"\n\n            case \"complete_task\":\n                task_id = kwargs[\"task_id\"]\n                task = task_app_service.complete_task(task_id)\n                return f\"\u30bf\u30b9\u30af\u3092\u5b8c\u4e86\u3057\u307e\u3057\u305f: {task.title}\"\n</code></pre> <ul> <li>\u8cac\u52d9: LLM \u3092\u6d3b\u7528\u3057\u305f\u81ea\u5f8b\u7684\u306a\u554f\u984c\u89e3\u6c7a\u3001GTD \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u81ea\u52d5\u5316\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u306e\u9023\u643a</li> <li>\u5b9f\u88c5: <code>LangChain 0.3.26</code>\u3068<code>LangGraph 0.4.9</code>\u3092\u4f7f\u7528\u3057\u305f\u72b6\u614b\u7ba1\u7406\u578b\u30ef\u30fc\u30af\u30d5\u30ed\u30fc</li> <li>\u9023\u643a: Services \u5c64\u3092\u30c4\u30fc\u30eb\u5316\u3057\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304b\u3089\u5229\u7528</li> <li>\u8a73\u7d30: Agent \u5c64 \u8a2d\u8a08\u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"dev/architecture-design/#_9","title":"\u8a2d\u8a08\u306e\u5229\u70b9","text":""},{"location":"dev/architecture-design/#1_1","title":"1. \u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247","text":"<ul> <li>\u5404\u30af\u30e9\u30b9\u304c\u4e00\u3064\u306e\u8cac\u4efb\u306e\u307f\u3092\u6301\u3064</li> <li>\u4fee\u6b63\u6642\u306e\u5f71\u97ff\u7bc4\u56f2\u304c\u9650\u5b9a\u3055\u308c\u308b</li> </ul>"},{"location":"dev/architecture-design/#2_1","title":"2. \u30c6\u30b9\u30c8\u3057\u3084\u3059\u3055","text":"<pre><code># \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5358\u72ec\u3067\u30c6\u30b9\u30c8\u53ef\u80fd\n## Views\u5c64\uff08View Layer\uff09- Flet UI\n\nViews\u5c64\u306f\u3001Flet\u3092\u4f7f\u7528\u3057\u3066\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306e\u30e2\u30c0\u30f3\u306aUI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n### 1. \u30d3\u30e5\u30fc\u306e\u968e\u5c64\u69cb\u9020\n\n```python\n# views/base.py - \u30d9\u30fc\u30b9\u30d3\u30e5\u30fc\u30af\u30e9\u30b9\nclass BaseView(ABC):\n    \"\"\"\u5168\u30d3\u30e5\u30fc\u306e\u57fa\u5e95\u30af\u30e9\u30b9\"\"\"\n\n    def __init__(self, page: ft.Page, service_container: ServiceContainer):\n        self.page = page\n        self.service_container = service_container\n        self._content: ft.Control | None = None\n\n    @abstractmethod\n    def build(self) -&gt; ft.Control:\n        \"\"\"\u30d3\u30e5\u30fc\u306eUI\u3092\u69cb\u7bc9\"\"\"\n        pass\n\n    @property\n    def content(self) -&gt; ft.Control:\n        \"\"\"\u30d3\u30e5\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u53d6\u5f97\uff08\u9045\u5ef6\u69cb\u7bc9\uff09\"\"\"\n        if self._content is None:\n            self._content = self.build()\n        return self._content\n\n    def refresh(self) -&gt; None:\n        \"\"\"\u30d3\u30e5\u30fc\u3092\u518d\u69cb\u7bc9\"\"\"\n        self._content = None\n        self.page.update()\n\n# views/main_view.py - \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\nclass MainView(BaseView):\n    \"\"\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\"\"\"\n\n    def __init__(self, page: ft.Page, service_container: ServiceContainer):\n        super().__init__(page, service_container)\n        self.task_list_view = TaskListView(page, service_container)\n        self.inbox_view = InboxView(page, service_container)\n        self.project_view = ProjectView(page, service_container)\n\n    def build(self) -&gt; ft.Control:\n        \"\"\"\u30e1\u30a4\u30f3\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u69cb\u7bc9\"\"\"\n        return ft.Container(\n            content=ft.Row([\n                # \u30b5\u30a4\u30c9\u30d0\u30fc\n                ft.Container(\n                    content=self._build_sidebar(),\n                    width=200,\n                    bgcolor=ft.colors.SURFACE_VARIANT\n                ),\n                # \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30ea\u30a2\n                ft.Container(\n                    content=self._build_main_content(),\n                    expand=True\n                )\n            ]),\n            expand=True\n        )\n\n    def _build_sidebar(self) -&gt; ft.Control:\n        \"\"\"\u30b5\u30a4\u30c9\u30d0\u30fc\u30e1\u30cb\u30e5\u30fc\u3092\u69cb\u7bc9\"\"\"\n        return ft.Column([\n            ft.TextButton(\"\ud83d\udce5 Inbox\", on_click=self._on_inbox_click),\n            ft.TextButton(\"\u26a1 Next Actions\", on_click=self._on_next_actions_click),\n            ft.TextButton(\"\ud83d\udccb Projects\", on_click=self._on_projects_click),\n            ft.TextButton(\"\ud83d\udd0d Contexts\", on_click=self._on_contexts_click),\n            ft.TextButton(\"\u23f0 Scheduled\", on_click=self._on_scheduled_click),\n            ft.TextButton(\"\ud83e\udd14 Someday/Maybe\", on_click=self._on_someday_click),\n        ])\n</code></pre>"},{"location":"dev/architecture-design/#2-gtd_1","title":"2. GTD \u7279\u5316\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":"<pre><code># views/components/task_component.py - \u30bf\u30b9\u30af\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\nclass TaskComponent(ft.UserControl):\n    \"\"\"GTD\u30bf\u30b9\u30af\u3092\u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n\n    def __init__(self, task: TaskRead, on_complete: Callable[[str], None] = None):\n        super().__init__()\n        self.task = task\n        self.on_complete = on_complete\n\n    def build(self) -&gt; ft.Control:\n        \"\"\"\u30bf\u30b9\u30af\u30ab\u30fc\u30c9\u306eUI\u3092\u69cb\u7bc9\"\"\"\n        # GTD\u5206\u985e\u306b\u3088\u308b\u8272\u5206\u3051\n        status_color = self._get_status_color(self.task.status)\n\n        return ft.Card(\n            content=ft.Container(\n                content=ft.Column([\n                    ft.Row([\n                        ft.Checkbox(\n                            value=self.task.status == TaskStatus.DONE,\n                            on_change=self._on_checkbox_change\n                        ),\n                        ft.Text(\n                            self.task.title,\n                            style=ft.TextStyle(\n                                decoration=ft.TextDecoration.LINE_THROUGH\n                                if self.task.status == TaskStatus.DONE\n                                else None\n                            ),\n                            expand=True\n                        ),\n                        self._build_status_chip()\n                    ]),\n                    if self.task.description:\n                        ft.Text(\n                            self.task.description,\n                            size=12,\n                            color=ft.colors.ON_SURFACE_VARIANT\n                        ),\n                    self._build_metadata_row()\n                ]),\n                padding=ft.padding.all(16)\n            ),\n            surface_tint_color=status_color\n        )\n\n    def _get_status_color(self, status: TaskStatus) -&gt; str:\n        \"\"\"GTD\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5fdc\u3058\u305f\u8272\u3092\u53d6\u5f97\"\"\"\n        color_map = {\n            TaskStatus.INBOX: ft.colors.ORANGE,\n            TaskStatus.NEXT_ACTION: ft.colors.GREEN,\n            TaskStatus.WAITING: ft.colors.YELLOW,\n            TaskStatus.SCHEDULED: ft.colors.BLUE,\n            TaskStatus.SOMEDAY_MAYBE: ft.colors.PURPLE,\n            TaskStatus.DONE: ft.colors.GREY,\n        }\n        return color_map.get(status, ft.colors.SURFACE)\n\n# views/components/quick_capture.py - \u30af\u30a4\u30c3\u30af\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\nclass QuickCaptureComponent(ft.UserControl):\n    \"\"\"GTD\u30af\u30a4\u30c3\u30af\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\uff08Inbox\u8ffd\u52a0\uff09\"\"\"\n\n    def __init__(self, task_service: TaskApplicationService):\n        super().__init__()\n        self.task_service = task_service\n        self.text_field = ft.TextField(\n            label=\"\u4f55\u3092\u3057\u307e\u3059\u304b\uff1f\",\n            hint_text=\"\u601d\u3044\u3064\u3044\u305f\u3053\u3068\u3092\u4f55\u3067\u3082\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\",\n            on_submit=self._on_submit,\n            expand=True\n        )\n\n    def build(self) -&gt; ft.Control:\n        return ft.Row([\n            self.text_field,\n            ft.IconButton(\n                icon=ft.icons.ADD,\n                tooltip=\"Inbox\u306b\u8ffd\u52a0\",\n                on_click=self._on_submit\n            )\n        ])\n\n    def _on_submit(self, e=None):\n        \"\"\"Inbox\u30a2\u30a4\u30c6\u30e0\u3092\u4f5c\u6210\"\"\"\n        if not self.text_field.value:\n            return\n\n        try:\n            command = CreateTaskCommand(\n                title=self.text_field.value,\n                status=TaskStatus.INBOX\n            )\n            self.task_service.create_task(command)\n\n            # \u6210\u529f\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\n            self.page.show_snack_bar(\n                ft.SnackBar(content=ft.Text(\"Inbox\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\"))\n            )\n            self.text_field.value = \"\"\n            self.text_field.update()\n\n        except Exception as e:\n            logger.exception(\"Inbox\u30a2\u30a4\u30c6\u30e0\u4f5c\u6210\u30a8\u30e9\u30fc\")\n            self.page.show_snack_bar(\n                ft.SnackBar(\n                    content=ft.Text(f\"\u30a8\u30e9\u30fc: {str(e)}\"),\n                    bgcolor=ft.colors.ERROR\n                )\n            )\n</code></pre>"},{"location":"dev/architecture-design/#3_3","title":"3. \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3","text":"<pre><code># router.py - \u30d3\u30e5\u30fc\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\nclass ViewRouter:\n    \"\"\"\u30d3\u30e5\u30fc\u9593\u306e\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406\"\"\"\n\n    def __init__(self, page: ft.Page, service_container: ServiceContainer):\n        self.page = page\n        self.service_container = service_container\n        self.views: dict[str, BaseView] = {}\n        self.current_view: str = \"main\"\n\n    def navigate_to(self, view_name: str, **kwargs) -&gt; None:\n        \"\"\"\u6307\u5b9a\u3055\u308c\u305f\u30d3\u30e5\u30fc\u306b\u9077\u79fb\"\"\"\n        if view_name not in self.views:\n            self.views[view_name] = self._create_view(view_name)\n\n        view = self.views[view_name]\n        self.page.clean()\n        self.page.add(view.content)\n        self.current_view = view_name\n        self.page.update()\n\n    def _create_view(self, view_name: str) -&gt; BaseView:\n        \"\"\"\u30d3\u30e5\u30fc\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\"\"\"\n        view_factories = {\n            \"main\": lambda: MainView(self.page, self.service_container),\n            \"inbox\": lambda: InboxView(self.page, self.service_container),\n            \"projects\": lambda: ProjectView(self.page, self.service_container),\n            \"contexts\": lambda: ContextView(self.page, self.service_container),\n        }\n\n        factory = view_factories.get(view_name)\n        if not factory:\n            raise ValueError(f\"Unknown view: {view_name}\")\n\n        return factory()\n</code></pre> <ul> <li>\u8cac\u52d9: \u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3001\u30e6\u30fc\u30b6\u30fc\u4f53\u9a13\u3001GTD \u7279\u5316 UI\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f4\u65b0</li> <li>\u5b9f\u88c5: <code>Flet 0.27.6</code>\u3092\u4f7f\u7528\u3057\u305f\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc UI</li> <li>\u30d1\u30bf\u30fc\u30f3: MVP \u30d1\u30bf\u30fc\u30f3\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30d9\u30fc\u30b9\u8a2d\u8a08\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0</li> <li>\u8a73\u7d30: Views \u5c64 \u8a2d\u8a08\u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"dev/architecture-design/#_10","title":"\u30c6\u30b9\u30c8\u6226\u7565","text":""},{"location":"dev/architecture-design/#1_2","title":"1. \u5358\u4f53\u30c6\u30b9\u30c8\u306e\u69cb\u9020","text":"<pre><code># tests/logic/services/test_task_service.py - \u30b5\u30fc\u30d3\u30b9\u5c64\u30c6\u30b9\u30c8\nclass TestTaskService:\n    \"\"\"TaskService \u306e\u30c6\u30b9\u30c8\"\"\"\n\n    def test_create_task_with_valid_data(self):\n        \"\"\"\u6b63\u5e38\u306a\u30bf\u30b9\u30af\u4f5c\u6210\u306e\u30c6\u30b9\u30c8\"\"\"\n        repository = MockTaskRepository()\n        service = TaskService(repository)\n\n        task_data = TaskCreate(\n            title=\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\",\n            description=\"\u8aac\u660e\"\n        )\n\n        result = service.create_task(task_data)\n\n        assert result.title == \"\u65b0\u3057\u3044\u30bf\u30b9\u30af\"\n        assert result.status == TaskStatus.INBOX\n        assert len(repository.tasks) == 1\n\n    def test_create_task_with_empty_title(self):\n        \"\"\"\u30bf\u30a4\u30c8\u30eb\u304c\u7a7a\u306e\u5834\u5408\u306e\u30c6\u30b9\u30c8\"\"\"\n        repository = MockTaskRepository()\n        service = TaskService(repository)\n\n        with pytest.raises(ValueError, match=\"\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u5fc5\u9808\u3067\u3059\"):\n            service.create_new_task(\"\")\n</code></pre>"},{"location":"dev/architecture-design/#2_2","title":"2. \u7d71\u5408\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5","text":"<pre><code># tests/integration/test_gtd_workflow.py - GTD\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u7d71\u5408\u30c6\u30b9\u30c8\nclass TestGTDWorkflow:\n    \"\"\"GTD\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53\u306e\u30c6\u30b9\u30c8\"\"\"\n\n    @pytest.fixture\n    def service_container(self):\n        \"\"\"\u30c6\u30b9\u30c8\u7528\u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\"\"\"\n        return create_test_service_container()\n\n    def test_inbox_to_next_action_workflow(self, service_container):\n        \"\"\"Inbox \u2192 Next Action \u306e\u5b8c\u5168\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\"\"\"\n        task_app_service = service_container.get_task_application_service()\n\n        # 1. Inbox\u30a2\u30a4\u30c6\u30e0\u4f5c\u6210\n        command = CreateTaskCommand(\n            title=\"\u91cd\u8981\u306a\u4f1a\u8b70\u306e\u6e96\u5099\",\n            status=TaskStatus.INBOX\n        )\n        inbox_task = task_app_service.create_task(command)\n\n        # 2. GTD\u51e6\u7406\uff08\u5206\u985e\uff09\n        decision = InboxDecision(\n            task_id=inbox_task.id,\n            action=InboxAction.MAKE_NEXT_ACTION,\n            context_id=None,\n            scheduled_date=None\n        )\n\n        # 3. Next Action\u306b\u5909\u63db\n        next_action = task_app_service.process_inbox_item(decision)\n\n        # 4. \u691c\u8a3c\n        assert next_action.status == TaskStatus.NEXT_ACTION\n        assert next_action.title == \"\u91cd\u8981\u306a\u4f1a\u8b70\u306e\u6e96\u5099\"\n</code></pre> <ul> <li>\u8cac\u52d9: \u54c1\u8cea\u4fdd\u8a3c\u3001\u30ea\u30b0\u30ec\u30c3\u30b7\u30e7\u30f3\u9632\u6b62\u3001\u4ed5\u69d8\u306e\u6587\u66f8\u5316</li> <li>\u5b9f\u88c5: <code>pytest</code>\u3092\u4f7f\u7528\u3057\u305f\u5305\u62ec\u7684\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8</li> <li>\u30ab\u30d0\u30ec\u30c3\u30b8: \u5358\u4f53\u30c6\u30b9\u30c8\u3001\u7d71\u5408\u30c6\u30b9\u30c8\u3001\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u30c6\u30b9\u30c8</li> </ul>"},{"location":"dev/architecture-design/#_11","title":"\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b","text":"<pre><code># main.py - \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\ndef main(page: ft.Page):\n    \"\"\"Flet\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3\u95a2\u6570\"\"\"\n    # \u4f9d\u5b58\u95a2\u4fc2\u306e\u7d44\u307f\u7acb\u3066\n    service_container = create_service_container()\n    router = ViewRouter(page, service_container)\n\n    # GTD\u7279\u5316\u306e\u30da\u30fc\u30b8\u8a2d\u5b9a\n    page.title = \"Kage - GTD Task Manager\"\n    page.theme_mode = ft.ThemeMode.SYSTEM\n    page.padding = 0\n\n    # \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\u3092\u8868\u793a\n    router.navigate_to(\"main\")\n\nif __name__ == \"__main__\":\n    ft.app(target=main)\n</code></pre>"},{"location":"dev/architecture-design/#ui-application-service","title":"UI \u5c64\u3067\u306f\u3001Application Service \u3092\u547c\u3073\u51fa\u3059\u3060\u3051","text":"<pre><code># views/components/task_form.py - \u30bf\u30b9\u30af\u4f5c\u6210\u30d5\u30a9\u30fc\u30e0\ndef on_add_task(self, e):\n    \"\"\"\u30bf\u30b9\u30af\u8ffd\u52a0\u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\"\"\"\n    # \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    if not self.title_field.value:\n        self._show_error(\"\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n        return\n\n    try:\n        # Application Service\u3092\u547c\u3073\u51fa\u3057\n        command = CreateTaskCommand(\n            title=self.title_field.value,\n            description=self.description_field.value,\n            status=TaskStatus.INBOX\n        )\n\n        task_app_service = self.service_container.get_task_application_service()\n        new_task = task_app_service.create_task(command)\n\n        # UI\u66f4\u65b0\n        self._clear_form()\n        self._refresh_task_list()\n        self._show_success(f\"\u30bf\u30b9\u30af\u300c{new_task.title}\u300d\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\")\n\n    except Exception as e:\n        logger.exception(\"\u30bf\u30b9\u30af\u4f5c\u6210\u30a8\u30e9\u30fc\")\n        self._show_error(f\"\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {str(e)}\")\n</code></pre>"},{"location":"dev/architecture-design/#_12","title":"\u307e\u3068\u3081","text":"<p>\u3053\u306e\u8a2d\u8a08\u30d1\u30bf\u30fc\u30f3\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\uff1a</p> <ul> <li>\u7406\u89e3\u3057\u3084\u3059\u3044: \u5404\u5c64\u306e\u8cac\u4efb\u304c\u660e\u78ba\u3067\u3001GTD \u306e\u6982\u5ff5\u3068\u4e00\u81f4</li> <li>\u4fee\u6b63\u3057\u3084\u3059\u3044: \u5f71\u97ff\u7bc4\u56f2\u304c\u9650\u5b9a\u3055\u308c\u3001\u5909\u66f4\u306e\u6ce2\u53ca\u3092\u6291\u5236</li> <li>\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044: \u5404\u5c64\u3092\u72ec\u7acb\u3057\u3066\u30c6\u30b9\u30c8\u53ef\u80fd</li> <li>\u62e1\u5f35\u3057\u3084\u3059\u3044: AI \u6a5f\u80fd\u3084\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u8ffd\u52a0\u304c\u5bb9\u6613</li> <li>\u518d\u5229\u7528\u3057\u3084\u3059\u3044: \u30b3\u30a2\u6a5f\u80fd\u306f\u4ed6\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3082\u5229\u7528\u53ef\u80fd</li> </ul> <p>\u6700\u521d\u306f\u8907\u96d1\u306b\u611f\u3058\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001GTD \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u8907\u96d1\u3055\u3092\u7ba1\u7406\u3057\u3001LLM \u3068\u306e\u7d71\u5408\u3092\u884c\u3046\u4e0a\u3067\u3001\u3053\u306e\u8a2d\u8a08\u306e\u4fa1\u5024\u3092\u5b9f\u611f\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002</p>"},{"location":"dev/architecture-design/#_13","title":"\u53c2\u8003\u8cc7\u6599","text":"<ul> <li>Clean Architecture</li> <li>Getting Things Done (GTD)</li> <li>Repository Pattern</li> <li>SQLModel Documentation</li> <li>Flet Documentation</li> <li>LangChain Documentation</li> <li>LangGraph Documentation</li> </ul>"},{"location":"dev/branch_naming/","title":"\u30d6\u30e9\u30f3\u30c1\u547d\u540d\u898f\u5247","text":"<p>\u6700\u5c0f\u9650\u3067\u5206\u304b\u308a\u3084\u3059\u304f\u3002<code>fix/\u5185\u5bb9</code> \u307f\u305f\u3044\u306a\u5f62\u3002</p>"},{"location":"dev/branch_naming/#_2","title":"\u57fa\u672c\u5f62","text":"<pre><code>&lt;type&gt;/&lt;slug&gt;\n</code></pre> <p><code>slug</code> \u306f\u82f1\u5c0f\u6587\u5b57 + \u6570\u5b57 + \u30cf\u30a4\u30d5\u30f3\u3002\u65e5\u672c\u8a9e\u53ef\u3060\u304c\u30b9\u30da\u30fc\u30b9\u306f <code>-</code> \u306b\u3002\u77ed\u304f\u3002</p>"},{"location":"dev/branch_naming/#type","title":"type \u4e00\u89a7","text":"type \u7528\u9014 feature \u65b0\u6a5f\u80fd fix \u30d0\u30b0\u4fee\u6b63 refactor \u6319\u52d5\u5909\u3048\u306a\u3044\u6574\u7406 perf \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6539\u5584 chore \u96d1\u30bf\u30b9\u30af / \u4f9d\u5b58\u66f4\u65b0 / \u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306b\u542b\u3081\u306a\u3044\u4f5c\u696d build \u30d3\u30eb\u30c9/\u4f9d\u5b58/\u8a2d\u5b9a\u5909\u66f4 ci CI \u5468\u308a docs \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 test \u30c6\u30b9\u30c8\u8ffd\u52a0/\u8abf\u6574 revert \u53d6\u308a\u6d88\u3057\u7528 spike \u691c\u8a3c\u7528 (\u77ed\u547d)"},{"location":"dev/branch_naming/#issue","title":"Issue \u756a\u53f7\u4f75\u7528 (\u4efb\u610f)","text":"<pre><code>&lt;type&gt;/&lt;issue-number&gt;-&lt;slug&gt;\n</code></pre> <p>\u4f8b: <code>fix/123-null-pointer</code>, <code>feature/45-task-filter</code></p>"},{"location":"dev/branch_naming/#_3","title":"\u7981\u6b62 / \u907f\u3051\u308b","text":"<ul> <li>\u5927\u6587\u5b57</li> <li>\u30b9\u30da\u30fc\u30b9 (\u2192 <code>-</code>)</li> <li>\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 <code>_</code></li> <li>\u5148\u982d / \u672b\u5c3e\u306e\u30cf\u30a4\u30d5\u30f3</li> <li>100 \u6587\u5b57\u8d85\u3048</li> <li>\u610f\u5473\u4e0d\u660e (<code>fix/tmp</code>, <code>feature/test</code> \u306a\u3069)</li> </ul>"},{"location":"dev/branch_naming/#_4","title":"\u826f\u3044\u4f8b","text":"<pre><code>fix/textarea-overflow\nfeature/task-tag-rel\ndocs/branch-naming\nrefactor/service-layer-split\nperf/query-cache\nchore/update-ruff\nci/add-windows-job\n</code></pre>"},{"location":"dev/branch_naming/#_5","title":"\u60aa\u3044\u4f8b","text":"<pre><code>Fix/Overflow        # \u5927\u6587\u5b57\nfix/\u30c6\u30b9\u30c8 \u4fee\u6b63      # \u30b9\u30da\u30fc\u30b9\nfeature_task_api    # \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\nfix/tmp             # \u610f\u5473\u4e0d\u660e\n</code></pre>"},{"location":"dev/branch_naming/#_6","title":"\u904b\u7528\u30d5\u30ed\u30fc (\u63a8\u5968)","text":"<ol> <li>main \u304b\u3089\u4f5c\u6210</li> <li>\u30b3\u30df\u30c3\u30c8 &amp; PR \u4f5c\u6210 (Draft \u53ef)</li> <li>\u30ec\u30d3\u30e5\u30fc &amp; squash merge</li> <li>\u30de\u30fc\u30b8\u5f8c\u30ed\u30fc\u30ab\u30eb\u3068\u30ea\u30e2\u30fc\u30c8\u306e\u30d6\u30e9\u30f3\u30c1\u524a\u9664</li> </ol>"},{"location":"dev/branch_naming/#_7","title":"\u88dc\u8db3","text":"<ul> <li>spike \u306f\u6210\u679c\u307e\u3068\u307e\u3063\u305f\u3089 feature / fix \u306b\u4f5c\u308a\u76f4\u3057</li> <li>revert/ \u30d6\u30e9\u30f3\u30c1\u306f GitHub \u306e \"Revert\" \u30dc\u30bf\u30f3\u5229\u7528\u6642\u306b\u3082\u5408\u308f\u305b\u308b</li> <li>\u8ff7\u3063\u305f\u3089 <code>fix/\u660e\u78ba\u306a\u77ed\u3044\u8aac\u660e</code> \u304b <code>chore/...</code> \u306b\u5bc4\u305b\u308b</li> </ul>"},{"location":"dev/configuration/","title":"\u8a2d\u5b9a\u30fb\u74b0\u5883\u5909\u6570\u30ac\u30a4\u30c9","text":"<p>\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f Kage \u306b\u304a\u3051\u308b\u8a2d\u5b9a\u7ba1\u7406\u3068\u74b0\u5883\u5909\u6570\u306e\u4ed5\u7d44\u307f\u3001\u304a\u3088\u3073\u62e1\u5f35\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"dev/configuration/#_2","title":"\u6982\u8981","text":"<p>Kage \u3067\u306f\u4ee5\u4e0b\u306e 3 \u30ec\u30a4\u30e4\u3067\u8a2d\u5b9a\u5024\u3092\u7d71\u5408\u3057\u3001\u512a\u5148\u9806\u4f4d\u3092\u4ed8\u3051\u3066\u89e3\u6c7a\u3057\u307e\u3059\u3002</p> <ol> <li>\u5b9f\u884c\u6642\u74b0\u5883\u5909\u6570 (<code>os.environ</code>) - \u6700\u512a\u5148\uff08CI \u3084\u4e00\u6642\u4e0a\u66f8\u304d\u306b\u4f7f\u7528\uff09</li> <li>\u30d1\u30fc\u30b9\u6e08\u307f <code>.env</code> / \u65e2\u5b9a\u5024 (<code>EnvSettings</code> Pydantic \u30e2\u30c7\u30eb)</li> <li>\u6c38\u7d9a YAML \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb (<code>config.yaml</code>) - \u30e6\u30fc\u30b6\u30fc\u7de8\u96c6\u7528\u306e\u4fdd\u5b58\u5c64</li> </ol> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2190 1. Runtime Env (os.environ)\n\u2502 DATABASE_URL=...    \u2502  # \u305d\u306e\u5834\u3067\u4e0a\u66f8\u304d\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u25bc \u30de\u30fc\u30b8\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2190 2. EnvSettings (.env + \u578b\u5909\u63db)\n\u2502 OPENAI_API_KEY=...  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u25bc \u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2190 3. config.yaml (ruamel.yaml, \u30b3\u30e1\u30f3\u30c8\u4fdd\u6301)\n\u2502 database:\n\u2502   url: sqlite:///... \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"dev/configuration/#_3","title":"\u76ee\u7684","text":"<ul> <li>\u30b3\u30e1\u30f3\u30c8\u4fdd\u6301\u53ef\u80fd\u306a YAML \u3067\u30e6\u30fc\u30b6\u30fc\u8a2d\u5b9a\u3092\u6c38\u7d9a\u5316</li> <li>\u578b\u5b89\u5168 (Pydantic v2) + \u5909\u66f4\u5bb9\u6613\u306a\u7de8\u96c6\u30ec\u30a4\u30e4</li> <li>\u74b0\u5883\u5909\u6570\u3092\u4e00\u5143\u7ba1\u7406\u3057\u3001\u6b20\u843d/\u672a\u8a2d\u5b9a\u3092\u691c\u51fa</li> <li>\u5b9f\u884c\u6642\u306e\u5373\u6642\u4e0a\u66f8\u304d\uff08\u30c6\u30b9\u30c8\u30fbCI\u30fb\u4e00\u6642\u30ab\u30b9\u30bf\u30e0\uff09</li> </ul>"},{"location":"dev/configuration/#_4","title":"\u4e3b\u8981\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u5f79\u5272 <code>EnvSettings</code> <code>.env</code> \u8aad\u8fbc\u3068\u578b\u4ed8\u304d\u30a2\u30af\u30bb\u30b9\u3001\u672a\u8a2d\u5b9a\u8b66\u544a <code>ENV_VARS</code> (\u30ec\u30b8\u30b9\u30c8\u30ea) \u5229\u7528\u3059\u308b\u74b0\u5883\u5909\u6570\u30e1\u30bf\u5b9a\u7fa9\uff08\u8aac\u660e/\u7a2e\u985e/\u5fc5\u9808\uff09 <code>ConfigManager</code> YAML \u8aad\u8fbc/\u4fdd\u5b58\u3001\u7de8\u96c6\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3001\u7d71\u5408\u89e3\u6c7a <code>edit()</code> \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 \u4e0d\u5909\u30e2\u30c7\u30eb\u3092\u7de8\u96c6\u53ef\u80fd\u30e2\u30c7\u30eb\u306b\u4e00\u6642\u5909\u63db\u3057 YAML \u3078\u6c38\u7d9a\u5316"},{"location":"dev/configuration/#_5","title":"\u74b0\u5883\u5909\u6570\u30ec\u30b8\u30b9\u30c8\u30ea","text":"<p><code>src/settings/models.py</code> \u5185 <code>ENV_VARS</code> \u306b <code>EnvVarDef</code> \u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <pre><code>EnvVarDef(name=\"OPENAI_API_KEY\", category=\"ai\", required=False, description=\"OpenAI API \u30ad\u30fc\")\n</code></pre> <p>\u8ffd\u52a0\u624b\u9806:</p> <ol> <li><code>ENV_VARS</code> \u306b <code>EnvVarDef</code> \u3092\u8ffd\u52a0</li> <li><code>EnvSettings</code> \u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u578b\u4ed8\u304d\u3067\u8ffd\u52a0\uff08\u5fc5\u8981\u306a\u3089\uff09</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u66f4\u65b0\uff08\u672c\u30d5\u30a1\u30a4\u30eb\uff09</li> </ol> <p><code>init_environment()</code> \u5b9f\u884c\u6642\u306e\u6319\u52d5:</p> <ul> <li><code>.env</code> \u304c\u7121\u3051\u308c\u3070\u30c6\u30f3\u30d7\u30ec\u751f\u6210\uff08\u30b3\u30e1\u30f3\u30c8\u4ed8\u304d\uff09</li> <li>\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u3042\u308b\u304c .env \u306b\u6b20\u3051\u3066\u3044\u308b\u30ad\u30fc\u3092\u8ffd\u8a18</li> <li>\u5fc5\u9808(required=True) \u304b\u3064\u672a\u8a2d\u5b9a\u5024\u3092\u30ed\u30b0\u8b66\u544a</li> </ul>"},{"location":"dev/configuration/#_6","title":"\u5b9a\u7fa9\u4e00\u89a7 (\u81ea\u52d5\u751f\u6210)","text":"\u30ad\u30fc \u578b \u30ab\u30c6\u30b4\u30ea \u30c7\u30d5\u30a9\u30eb\u30c8 \u30b3\u30e1\u30f3\u30c8 FLET_SECRET_KEY str flet GOOGLE_API_KEY str ai LANGSMITH_API_KEY str ai LANGSMITH_TRACING bool ai false false/true KAGE_USE_LLM_ONE_LINER bool ai false false/true HUGGINGFACEHUB_API_TOKEN str ai DATABASE_URL str db"},{"location":"dev/configuration/#_7","title":"\u8a2d\u5b9a\u5024\u306e\u89e3\u6c7a\u512a\u5148\u9806\u4f4d","text":"<p><code>ConfigManager.database_url</code> \u306a\u3069\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u306f\u4ee5\u4e0b\u306e\u9806\u3067\u89e3\u6c7a:</p> <ol> <li><code>os.environ.get(\"DATABASE_URL\")</code></li> <li><code>EnvSettings.get().database_url</code>\uff08<code>.env</code> \u7531\u6765\u306e\u578b\u6e08\u5024\uff09</li> <li>YAML (<code>config.yaml</code>) \u5185\u306e\u4fdd\u5b58\u5024</li> </ol> <p>\u30c6\u30b9\u30c8\u3067 monkeypatch \u3057\u305f\u74b0\u5883\u5909\u6570\u3082\u5373\u6642\u53cd\u6620\u3055\u308c\u307e\u3059\uff08<code>EnvSettings</code> \u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u306a\u3044\u8a2d\u8a08\uff09\u3002</p>"},{"location":"dev/configuration/#_8","title":"\u7de8\u96c6\u30d5\u30ed\u30fc","text":"<p>\u30e9\u30f3\u30bf\u30a4\u30e0\u5229\u7528\u306f\u4e0d\u5909 (frozen) Pydantic \u30e2\u30c7\u30eb\u3002\u7de8\u96c6\u6642\u306f\u4e00\u6642\u7684\u306b\u300c\u7de8\u96c6\u7528\u30e2\u30c7\u30eb\u300d\u3078\u5909\u63db\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u7d42\u4e86\u3067\u5dee\u5206\u3092 YAML \u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002</p> <pre><code>from settings.manager import config_manager\n\nwith config_manager.edit() as cfg:\n    cfg.app.theme = \"dark\"\n    cfg.database.url = \"postgresql+psycopg://user:pass@host/db\"\n# \u2190 \u3053\u3053\u3067\u81ea\u52d5\u4fdd\u5b58 &amp; \u4e0d\u5909\u30e2\u30c7\u30eb\u3078\u623b\u308b\n</code></pre>"},{"location":"dev/configuration/#_9","title":"\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7279\u6027","text":"<ul> <li>\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u4f8b\u5916\u767a\u751f\u6642\u306f\u4fdd\u5b58\u3055\u308c\u307e\u305b\u3093</li> <li>\u30cd\u30b9\u30c8\u7de8\u96c6\u306f\u6700\u521d\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u96c6\u7d04\uff08\u6df1\u3055\u30ab\u30a6\u30f3\u30c8\uff09</li> <li>\u5dee\u5206\u8a08\u7b97\u3067\u6700\u5c0f\u9650\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f8\u63db</li> </ul>"},{"location":"dev/configuration/#yaml","title":"YAML \u6c38\u7d9a\u5316","text":"<ul> <li>\u30e9\u30a4\u30d6\u30e9\u30ea: <code>ruamel.yaml</code>\uff08\u30b3\u30e1\u30f3\u30c8\u4fdd\u6301\uff09</li> <li>\u30d1\u30b9: <code>CONFIG_PATH</code> (<code>src/config.py</code>)</li> <li>\u672a\u5b58\u5728\u6642\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u751f\u6210</li> </ul>"},{"location":"dev/configuration/#configyaml","title":"\u751f\u6210\u3055\u308c\u308b\u521d\u671f config.yaml (\u629c\u7c8b / \u81ea\u52d5\u751f\u6210)","text":"<pre><code>window:\n  size:\n    - 1280\n    - 720\n  position:\n    - 100\n    - 100\nuser:\n  last_login_user:\n  theme: light\ndatabase:\n  url: sqlite:///storage/data/tasks.db\n</code></pre>"},{"location":"dev/configuration/#_10","title":"\u3088\u304f\u3042\u308b\u8ffd\u52a0\u30b7\u30ca\u30ea\u30aa","text":"\u30b7\u30ca\u30ea\u30aa \u624b\u9806\u6982\u8981 OpenAI API \u30ad\u30fc\u8ffd\u52a0 <code>.env</code> \u306b\u5024\u3092\u8a2d\u5b9a\uff08<code>OPENAI_API_KEY=sk-...</code>\uff09 DB \u63a5\u7d9a\u3092 Postgres \u306b\u5207\u66ff <code>DATABASE_URL</code> \u3092\u74b0\u5883\u5909\u6570\u307e\u305f\u306f <code>.env</code> \u3067\u8a2d\u5b9a UI \u30c6\u30fc\u30de\u5909\u66f4 <code>with config_manager.edit(): cfg.app.theme = \"dark\"</code> \u65b0\u3057\u3044\u74b0\u5883\u5909\u6570 <code>ENV_VARS</code> + <code>EnvSettings</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u8ffd\u52a0 + doc \u8ffd\u8a18"},{"location":"dev/configuration/#_11","title":"\u30c6\u30b9\u30c8\u6226\u7565\u6982\u8981","text":"<ul> <li><code>.env</code> \u306e\u6b20\u843d\u30ad\u30fc\u88dc\u5b8c: <code>init_environment</code> \u30c6\u30b9\u30c8</li> <li>\u512a\u5148\u9806\u4f4d: monkeypatch \u3067 <code>os.environ</code> \u3092\u4e0a\u66f8\u304d \u2192 \u5373\u6642\u53cd\u6620\u691c\u8a3c</li> <li>\u7de8\u96c6\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8: before/after \u3092\u6bd4\u8f03\u3057 immutability \u3092\u78ba\u8a8d</li> <li>\u7a7a\u6587\u5b57\u30d6\u30fc\u30eb \u2192 None \u5909\u63db: \u30d0\u30ea\u30c7\u30fc\u30bf\u30c6\u30b9\u30c8</li> </ul>"},{"location":"dev/configuration/#_12","title":"\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ul> <li>\u4e00\u6642\u7684\u306a\u4e0a\u66f8\u304d\u306f\u74b0\u5883\u5909\u6570\u3067\u884c\u3044\u3001\u6c38\u7d9a\u5909\u66f4\u306f\u7de8\u96c6\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u884c\u3046</li> <li>\u5fc5\u9808\u30ad\u30fc\u306f CI \u3067\u7a7a\u30c1\u30a7\u30c3\u30af\uff08\u5c06\u6765\u7684\u306b\u8ffd\u52a0\u4e88\u5b9a\uff09</li> <li>\u76f4\u63a5 <code>os.getenv</code> \u3092\u4f7f\u7528\u305b\u305a <code>ConfigManager</code>/<code>EnvSettings</code> \u7d4c\u7531\u306b\u7d71\u4e00</li> </ul>"},{"location":"dev/configuration/#_13","title":"\u4eca\u5f8c\u306e\u6539\u5584\u5019\u88dc","text":"<ul> <li><code>EnvSettings.reload()</code> \u306e\u8ffd\u52a0\uff08\u660e\u793a\u518d\u8aad\u8fbc\uff09</li> <li><code>.env.example</code> \u306e\u81ea\u52d5\u540c\u671f\u751f\u6210</li> <li>\u8a2d\u5b9a UI (Flet) \u306e\u63d0\u4f9b</li> <li>\u672a\u4f7f\u7528\u8a2d\u5b9a\u691c\u51fa\u30b9\u30af\u30ea\u30d7\u30c8</li> </ul> <p>\u6700\u7d42\u66f4\u65b0: 2025-08-31</p>"},{"location":"dev/contributing_docs/","title":"Kage \u3078\u306e\u8ca2\u732e","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u8ca2\u732e\u306b\u8208\u5473\u3092\u6301\u3063\u3066\u3044\u305f\u3060\u304d\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002 \u30d0\u30b0\u5831\u544a\u3001\u6a5f\u80fd\u63d0\u6848\u3001\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u3001\u3042\u3089\u3086\u308b\u5f62\u306e\u8ca2\u732e\u3092\u6b53\u8fce\u3057\u307e\u3059\u3002</p>"},{"location":"dev/contributing_docs/#_1","title":"\u958b\u767a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","text":"<ol> <li> <p>Issue \u306e\u78ba\u8a8d: \u307e\u305a\u3001Issue Tracker \u3092\u78ba\u8a8d\u3057\u3001\u540c\u69d8\u306e Issue \u304c\u306a\u3044\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u306a\u3051\u308c\u3070\u65b0\u3057\u3044 Issue \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30d5\u30a9\u30fc\u30af: \u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30d5\u30a9\u30fc\u30af\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30d6\u30e9\u30f3\u30c1\u306e\u4f5c\u6210: \u65b0\u3057\u3044\u30d6\u30e9\u30f3\u30c1\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d6\u30e9\u30f3\u30c1\u540d\u306f\u30d6\u30e9\u30f3\u30c1\u547d\u540d\u898f\u5247\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> </ol> <pre><code># \u4f8b: \u65b0\u6a5f\u80fd\u306e\u5834\u5408\ngit checkout -b feature/new-task-button\n\n# \u4f8b: \u30d0\u30b0\u4fee\u6b63\u306e\u5834\u5408\ngit checkout -b fix/textarea-overflow\n\n# \u4f8b: \u30a4\u30b7\u30e5\u30fc\u756a\u53f7\u3092\u542b\u3081\u308b\u5834\u5408\ngit checkout -b feature/123-task-filter\n</code></pre> <ol> <li>poethepoet \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb: \u30b0\u30ed\u30fc\u30d0\u30eb\u306b poethepoet \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff08\u672a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u5834\u5408\uff09\u3002</li> </ol> <pre><code># poethepoet\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv tool install poethepoet\n</code></pre> <ol> <li>\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7: poethepoet \u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3092\u4f7f\u7528\u3057\u305f\u521d\u56de\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</li> </ol> <pre><code># \u521d\u56de\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08\u4f9d\u5b58\u95a2\u4fc2\u540c\u671f + DB\u66f4\u65b0\uff09\npoe setup\n</code></pre> <ol> <li> <p>\u30b3\u30fc\u30c9\u306e\u5909\u66f4: \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u306b\u5f93\u3063\u3066\u3001\u30b3\u30fc\u30c9\u306e\u8ffd\u52a0\u30fb\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002</p> </li> <li> <p>\u30c6\u30b9\u30c8\u3068\u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af: \u5909\u66f4\u306b\u3088\u3063\u3066\u65e2\u5b58\u306e\u6a5f\u80fd\u304c\u58ca\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> </li> </ol> <pre><code># \u54c1\u8cea\u30c1\u30a7\u30c3\u30af\uff08lint + format-check + type-check\uff09\npoe check\n\n# \u81ea\u52d5\u4fee\u6b63\uff08lint-fix + format\uff09\npoe fix\n\n# \u30c6\u30b9\u30c8\u5b9f\u884c\npoe test\n</code></pre> <ol> <li>\u958b\u767a\u4e2d\u306e\u52d5\u4f5c\u78ba\u8a8d: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3057\u3066\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</li> </ol> <pre><code># \u958b\u767a\u30e2\u30fc\u30c9\uff08\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\uff09\npoe app-dev\n</code></pre> <ol> <li> <p>\u30b3\u30df\u30c3\u30c8: \u5909\u66f4\u5185\u5bb9\u3092\u30b3\u30df\u30c3\u30c8\u3057\u307e\u3059\u3002\u30b3\u30df\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5206\u304b\u308a\u3084\u3059\u304f\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> <li> <p>\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u4f5c\u6210: \u30d5\u30a9\u30fc\u30af\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u3001\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e <code>main</code> \u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5f93\u3044\u3001\u5909\u66f4\u5185\u5bb9\u3092\u8aac\u660e\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> </ol> <p>\u8a73\u7d30\u306a\u30bf\u30b9\u30af\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\u306f\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"dev/contributing_docs/#_2","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04","text":"<ul> <li>\u9759\u7684\u89e3\u6790: <code>ruff</code> \u3092\u4f7f\u7528\u3057\u305f\u9759\u7684\u89e3\u6790\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u9069\u7528\u3057\u307e\u3059\u3002<code>pre-commit</code>\u30d5\u30c3\u30af\u304c\u81ea\u52d5\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002</li> <li>\u547d\u540d\u898f\u5247:</li> <li>\u30af\u30e9\u30b9\u540d: <code>PascalCase</code></li> <li>\u95a2\u6570\u30fb\u5909\u6570\u540d: <code>snake_case</code></li> <li>Docstring: \u30af\u30e9\u30b9\u3084\u516c\u958b\u95a2\u6570\u306b\u306f\u3001Google \u30b9\u30bf\u30a4\u30eb\u306e docstring \u3092\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044\u3002</li> </ul> <pre><code>def my_function(param1: int, param2: str) -&gt; bool:\n    \"\"\"\u95a2\u6570\u306e\u6982\u8981\u8aac\u660e.\n\n    Args:\n        param1: \u5f15\u65701\u306e\u8aac\u660e.\n        param2: \u5f15\u65702\u306e\u8aac\u660e.\n\n    Returns:\n        \u623b\u308a\u5024\u306e\u8aac\u660e.\n    \"\"\"\n    # ...\n</code></pre> <ul> <li>\u578b\u30d2\u30f3\u30c8: \u3059\u3079\u3066\u306e\u95a2\u6570\u30fb\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u623b\u308a\u5024\u306b\u578b\u30d2\u30f3\u30c8\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002</li> <li>\u30b3\u30e1\u30f3\u30c8: \u8907\u96d1\u306a\u30ed\u30b8\u30c3\u30af\u3084\u91cd\u8981\u306a\u51e6\u7406\u306b\u306f\u3001\u65e5\u672c\u8a9e\u3067\u7c21\u6f54\u306a\u30b3\u30e1\u30f3\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044\u3002</li> </ul>"},{"location":"dev/contributing_docs/#_3","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u898f\u7d04","text":"<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f MkDocs + Material \u3092\u4f7f\u7528\u3057\u3066\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/contributing_docs/#_4","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u69cb\u9020","text":"<ul> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306f <code>docs/</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u914d\u7f6e</li> <li>\u958b\u767a\u8005\u5411\u3051\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f <code>docs/dev/</code> \u4ee5\u4e0b\u306b\u914d\u7f6e</li> <li>\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306f <code>docs/images/</code> \u4ee5\u4e0b\u306b\u914d\u7f6e</li> </ul>"},{"location":"dev/contributing_docs/#markdown","title":"Markdown \u8a18\u8ff0\u898f\u5247","text":"<ul> <li>\u5185\u90e8\u30ea\u30f3\u30af: \u4ed6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3078\u306e\u30ea\u30f3\u30af\u306f\u76f8\u5bfe\u30d1\u30b9\u3067\u8a18\u8ff0   <pre><code>[\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9](dev/setup.md)\n</code></pre></li> <li>\u753b\u50cf: \u753b\u50cf\u3078\u306e\u30ea\u30f3\u30af\u306f\u76f8\u5bfe\u30d1\u30b9\u3067\u8a18\u8ff0\u3057\u3001\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b   <pre><code>![\u753b\u50cf\u306e\u8aac\u660e](../images/image-name.png)\n_\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3_\n</code></pre></li> <li>\u898b\u51fa\u3057: \u968e\u5c64\u69cb\u9020\u3092\u610f\u8b58\u3057\u3001\u9069\u5207\u306b\u30ec\u30d9\u30eb\u5206\u3051\u3059\u308b</li> <li>\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af: \u8a00\u8a9e\u6307\u5b9a\u3092\u3057\u3066\u8aad\u307f\u3084\u3059\u304f\u8a18\u8ff0   <pre><code># Python \u30b3\u30fc\u30c9\u306e\u4f8b\ndef example():\n    pass\n</code></pre></li> </ul>"},{"location":"dev/contributing_docs/#_5","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30c6\u30b9\u30c8","text":"<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u306f\u3001\u5fc5\u305a\u30ed\u30fc\u30ab\u30eb\u3067\u30d3\u30eb\u30c9\u3068\u30d7\u30ec\u30d3\u30e5\u30fc\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># \u30ed\u30fc\u30ab\u30eb\u30d7\u30ec\u30d3\u30e5\u30fc\uff08\u63a8\u5968\uff09\npoe docs-serve\n\n# \u30d3\u30eb\u30c9\u30c6\u30b9\u30c8\npoe docs-build\n\n# \u5f93\u6765\u306e\u30b3\u30de\u30f3\u30c9\nuv run mkdocs serve\nuv run mkdocs build --strict\n</code></pre>"},{"location":"dev/contributing_docs/#_6","title":"\u30ea\u30f3\u30af\u30c1\u30a7\u30c3\u30af","text":"<ul> <li>\u5185\u90e8\u30ea\u30f3\u30af\u304c\u6b63\u3057\u304f\u6a5f\u80fd\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b</li> <li>\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u3001\u9069\u5207\u306b\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b</li> <li>\u30d3\u30eb\u30c9\u6642\u306b\u30a8\u30e9\u30fc\u3084\u8b66\u544a\u304c\u51fa\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b</li> </ul> <p>\u3054\u5354\u529b\u306b\u611f\u8b1d\u3057\u307e\u3059\uff01</p>"},{"location":"dev/migrations/","title":"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u65b9\u6cd5","text":""},{"location":"dev/migrations/#_2","title":"\u57fa\u672c\u7684\u306a\u30b3\u30de\u30f3\u30c9","text":"<pre><code># \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u9069\u7528\n# \u3053\u3053\u3067\u306f\u3001\u6700\u65b0\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u7528\u3059\u308b\u30b3\u30de\u30f3\u30c9\n# \u57fa\u672c\u7684\u306b\u6700\u521d\u306b\u884c\u3046\u3053\u3068\nuv run alembic upgrade head\n\n# \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9\n## \u3053\u3053\u3067\u306f\u30011\u3064\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u623b\u3059\u30b3\u30de\u30f3\u30c9\nuv run alembic downgrade -1\n\n# \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5c65\u6b74\u3092\u8868\u793a\nuv run alembic history\n\n# \u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u7528\n## \u3053\u3053\u3067\u306f\u3001\u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3ID\u3092\u6307\u5b9a\u3057\u3066\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u7528\nuv run alembic upgrade &lt;version_id&gt;\n\n# \u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9\n## \u3053\u3053\u3067\u306f\u3001\u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3ID\u3092\u6307\u5b9a\u3057\u3066\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9\nuv run alembic downgrade &lt;version_id&gt;\n\n# \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u78ba\u8a8d\n## \u3053\u3053\u3067\u306f\u3001\u73fe\u5728\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u30b3\u30de\u30f3\u30c9\n\nuv run alembic current\n</code></pre>"},{"location":"dev/migrations/#_3","title":"\u30e2\u30c7\u30eb\u306e\u8ffd\u52a0\u65b9\u6cd5","text":"<pre><code># src/models/task.py\n\n# \u30e2\u30c7\u30eb(\u4f8b)\nclass Project(SQLModel, table=True):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30e2\u30c7\u30eb\n\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u60c5\u5831\u3092\u7ba1\u7406\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3002\n\n    Attributes:\n        id (int | None): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8ID\n        name (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\n        created_at (datetime): \u4f5c\u6210\u65e5\u6642\n    \"\"\"\n\n    id: int | None = Field(default=None, primary_key=True)\n    name: str\n    created_at: datetime = Field(default_factory=datetime.now)\n</code></pre> <pre><code># src/models/migrations/env.py\nfrom src.models.task import Task, Project # \u3053\u3053\u3067\u30e2\u30c7\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\n# \u30e2\u30c7\u30eb\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u8a2d\u5b9a\ntarget_metadata = [\n    Task.metadata,\n    Project.metadata, # \u4ed6\u306e\u30e2\u30c7\u30eb\u3082\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8ffd\u52a0\n]\n</code></pre>"},{"location":"dev/migrations/#_4","title":"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210","text":"<pre><code># \u65b0\u3057\u3044\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\nuv run alembic revision --autogenerate -m \"add project table\"\n</code></pre>"},{"location":"dev/setup/","title":"\u74b0\u5883\u69cb\u7bc9\u30ac\u30a4\u30c9","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001Kage \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u74b0\u5883\u69cb\u7bc9\u624b\u9806\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"dev/setup/#_2","title":"\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8","text":"<p>\u7d4c\u9a13\u8c4a\u5bcc\u306a\u958b\u767a\u8005\u5411\u3051\u306e\u6700\u77ed\u624b\u9806\uff1a</p> <pre><code># 1. uv\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08Windows PowerShell\uff09\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n\n# 2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30ed\u30fc\u30f3\u3068\u74b0\u5883\u69cb\u7bc9\ngit clone git@github.com:KTC-Security-Circle/Kage.git\ncd Kage\nuv sync\nuv run alembic upgrade head\nuv run pre-commit install\n\n# 3. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\nuv run flet run -rd\n</code></pre>"},{"location":"dev/setup/#_3","title":"\u524d\u63d0\u6761\u4ef6","text":""},{"location":"dev/setup/#_4","title":"\u5fc5\u9808\u8981\u4ef6","text":"<ul> <li>OS: Windows 10/11\uff08\u63a8\u5968\uff09</li> <li>Python: 3.12 \u4ee5\u4e0a\uff08Python 3.12.5 \u63a8\u5968\uff09</li> <li>\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc: uv 0.7.3 \u4ee5\u4e0a\uff08\u73fe\u5728 0.7.3 \u3067\u30c6\u30b9\u30c8\u6e08\u307f\uff09</li> </ul>"},{"location":"dev/setup/#_5","title":"\u63a8\u5968\u30c4\u30fc\u30eb","text":"<ul> <li>\u30a8\u30c7\u30a3\u30bf: Visual Studio Code</li> <li>Python \u62e1\u5f35\u6a5f\u80fd</li> <li>Pylance \u62e1\u5f35\u6a5f\u80fd</li> <li>Git: \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u7528</li> </ul>"},{"location":"dev/setup/#uv","title":"uv \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":""},{"location":"dev/setup/#windows-uv","title":"Windows \u3067\u306e uv \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u6700\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f PowerShell \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\uff1a</p> <pre><code># PowerShell\u3067\u5b9f\u884c\uff08\u7ba1\u7406\u8005\u6a29\u9650\u4e0d\u8981\uff09\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre>"},{"location":"dev/setup/#_6","title":"\u305d\u306e\u4ed6\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5","text":"<pre><code># pipx\u3092\u4f7f\u7528\uff08Python\u74b0\u5883\u304c\u65e2\u306b\u3042\u308b\u5834\u5408\uff09\npipx install uv\n\n# pip\u3092\u4f7f\u7528\uff08\u975e\u63a8\u5968\uff09\npip install uv\n\n# WinGet\u3092\u4f7f\u7528\nwinget install --id=astral-sh.uv -e\n</code></pre>"},{"location":"dev/setup/#_7","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u78ba\u8a8d","text":"<pre><code>uv --version\n# \u51fa\u529b\u4f8b: uv 0.7.3 (3c413f74b 2025-05-07)\n</code></pre>"},{"location":"dev/setup/#1","title":"1. \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3","text":"<pre><code>git clone git@github.com:KTC-Security-Circle/Kage.git\ncd Kage\n</code></pre>"},{"location":"dev/setup/#2-python-poethepoet","title":"2. Python \u306e\u7ba1\u7406\u3068 poethepoet \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>uv \u306f\u81ea\u52d5\u7684\u306b Python \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7ba1\u7406\u3067\u304d\u307e\u3059\uff1a</p> <pre><code># \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5fc5\u8981\u306aPython\uff083.12\u4ee5\u4e0a\uff09\u3092\u81ea\u52d5\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv python install\n\n# \u5229\u7528\u53ef\u80fd\u306aPython\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\nuv python list\n\n# \u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09\nuv python install 3.12\n</code></pre> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u306b poethepoet \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u3001<code>uv run</code>\u3092\u4ed8\u3051\u305a\u306b\u76f4\u63a5<code>poe</code>\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a</p> <pre><code># poethepoet\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv tool install poethepoet\n</code></pre>"},{"location":"dev/setup/#3","title":"3. \u4eee\u60f3\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":""},{"location":"dev/setup/#poethepoet","title":"poethepoet \u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3092\u4f7f\u7528\uff08\u63a8\u5968\uff09","text":"<pre><code># \u521d\u56de\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08\u4f9d\u5b58\u95a2\u4fc2\u540c\u671f + DB\u66f4\u65b0\uff09\npoe setup\n</code></pre>"},{"location":"dev/setup/#_8","title":"\u624b\u52d5\u3067\u306e\u74b0\u5883\u69cb\u7bc9","text":"<pre><code># \u4eee\u60f3\u74b0\u5883\u306e\u4f5c\u6210\u3068\u4f9d\u5b58\u95a2\u4fc2\u306e\u4e00\u62ec\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv sync\n</code></pre> <p>\u6ce8\u610f: <code>uv sync</code>\u306f\u4ee5\u4e0b\u3092\u81ea\u52d5\u7684\u306b\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <ul> <li>\u4eee\u60f3\u74b0\u5883\u306e\u4f5c\u6210\uff08<code>.venv</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\uff09</li> <li>\u672c\u756a\u74b0\u5883\u7528\u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</li> <li>\u958b\u767a\u74b0\u5883\u7528\u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08<code>[tool.uv.dev-dependencies]</code>\uff09</li> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u3092 editable mode \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</li> </ul>"},{"location":"dev/setup/#_9","title":"\u4f9d\u5b58\u95a2\u4fc2\u30c4\u30ea\u30fc\u306e\u78ba\u8a8d","text":"<pre><code># \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u4f9d\u5b58\u95a2\u4fc2\u3092\u78ba\u8a8d\nuv tree\n</code></pre> <p>\u73fe\u5728\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u4ee5\u4e0b\u306e\u4e3b\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>Flet: 0.27.6\uff08UI \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff09</li> <li>LangChain/LangGraph: AI/Agent \u6a5f\u80fd</li> <li>SQLModel: ORM</li> <li>Alembic: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3</li> <li>\u958b\u767a\u30c4\u30fc\u30eb: Ruff, Pyright, pytest, pre-commit</li> </ul>"},{"location":"dev/setup/#pip","title":"\u30ec\u30ac\u30b7\u30fc pip \u3067\u306e\u74b0\u5883\u69cb\u7bc9\uff08\u975e\u63a8\u5968\uff09","text":"<p>\u901a\u5e38\u306e\u958b\u767a\u3067\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff1a</p> <pre><code>python -m venv venv\nvenv\\Scripts\\activate  # Windows\npip install .\n</code></pre>"},{"location":"dev/setup/#4","title":"4. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u521d\u671f\u5316","text":"<pre><code># \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\nuv run alembic upgrade head\n</code></pre>"},{"location":"dev/setup/#5-pre-commit","title":"5. pre-commit \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>uv run pre-commit install\n</code></pre>"},{"location":"dev/setup/#6","title":"6. \u74b0\u5883\u69cb\u7bc9\u306e\u78ba\u8a8d","text":"<p>\u3059\u3079\u3066\u306e\u8a2d\u5b9a\u304c\u6b63\u3057\u304f\u5b8c\u4e86\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\uff1a</p> <pre><code># \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6574\u5408\u6027\u30c1\u30a7\u30c3\u30af\nuv run poe check\n\n# \u307e\u305f\u306f\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u78ba\u8a8d\nuv run ruff format src        # \u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nuv run ruff check src --fix   # \u30ea\u30f3\u30c8\u30fb\u81ea\u52d5\u4fee\u6b63\nuv run pyright src           # \u578b\u30c1\u30a7\u30c3\u30af\n</code></pre>"},{"location":"dev/setup/#7","title":"7. \u30c6\u30b9\u30c8\u306e\u5b9f\u884c","text":"<p>\u5909\u66f4\u304c\u4ed6\u306e\u6a5f\u80fd\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p>"},{"location":"dev/setup/#poethepoet_1","title":"poethepoet \u3092\u4f7f\u7528\u3057\u305f\u5b9f\u884c\uff08\u63a8\u5968\uff09","text":"<pre><code># \u5168\u30c6\u30b9\u30c8\u5b9f\u884c\npoe test\n\n# \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u307f\npoe test-unit\n\n# \u30ab\u30d0\u30ec\u30c3\u30b8\u4ed8\u304d\u30c6\u30b9\u30c8\npoe test-cov\n</code></pre>"},{"location":"dev/setup/#_10","title":"\u5f93\u6765\u306e\u30c6\u30b9\u30c8\u5b9f\u884c\u65b9\u6cd5","text":"<pre><code># \u5168\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\nuv run pytest\n\n# \u30ab\u30d0\u30ec\u30c3\u30b8\u4ed8\u304d\u30c6\u30b9\u30c8\u5b9f\u884c\nuv run pytest --cov=src --cov-report=html\n\n# \u7279\u5b9a\u306e\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u5b9f\u884c\nuv run pytest tests/test_specific.py\n</code></pre>"},{"location":"dev/setup/#8","title":"8. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c","text":""},{"location":"dev/setup/#poethepoet_2","title":"poethepoet \u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u5b9f\u884c\uff08\u63a8\u5968\uff09","text":"<pre><code># \u901a\u5e38\u5b9f\u884c\npoe app-run\n\n# \u958b\u767a\u30e2\u30fc\u30c9\uff08\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\uff09\npoe app-dev\n\n# Web\u30d6\u30e9\u30a6\u30b6\u3067\u5b9f\u884c\npoe app-web\n\n# Web\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u767a\u30e2\u30fc\u30c9\npoe app-web-dev\n</code></pre> <p>\u8a73\u7d30\u306a\u30bf\u30b9\u30af\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\u306f\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"dev/setup/#_11","title":"\u5f93\u6765\u306e\u30a2\u30d7\u30ea\u5b9f\u884c\u65b9\u6cd5","text":"<pre><code># \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u3068\u3057\u3066\u8d77\u52d5\nuv run flet run\n\n# \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u4ed8\u304d\u3067\u8d77\u52d5\uff08\u958b\u767a\u6642\u63a8\u5968\uff09\nuv run flet run -rd\n\n# Web\u30a2\u30d7\u30ea\u3068\u3057\u3066\u8d77\u52d5\nuv run flet run --web\nuv run flet run --web --port 8550  # \u30dd\u30fc\u30c8\u6307\u5b9a\n\n# \u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u8d77\u52d5\nuv run flet run src/main.py\n</code></pre>"},{"location":"dev/setup/#_12","title":"\u8d77\u52d5\u65b9\u6cd5\u306e\u8a73\u7d30","text":"<ul> <li>\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30e2\u30fc\u30c9: \u30cd\u30a4\u30c6\u30a3\u30d6 Windows \u30a2\u30d7\u30ea\u3068\u3057\u3066\u8d77\u52d5</li> <li>\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9: \u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u6642\u306b\u81ea\u52d5\u3067\u518d\u8aad\u307f\u8fbc\u307f</li> <li>Web \u30e2\u30fc\u30c9: \u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\uff08\u30d5\u30e9\u30b0\u306a\u3057\u306e\u5834\u5408\u306f\u30e9\u30f3\u30c0\u30e0\u30dd\u30fc\u30c8\uff09</li> </ul>"},{"location":"dev/setup/#vs-code","title":"VS Code \u30bf\u30b9\u30af\u3092\u4f7f\u7528\u3057\u305f\u8d77\u52d5","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u4ee5\u4e0b\u306e VS Code \u30bf\u30b9\u30af\u304c\u8a2d\u5b9a\u6e08\u307f\u3067\u3059\uff1a</p> <pre><code># \u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3067\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nCtrl+Shift+P \u2192 \"Tasks: Run Task\" \u2192 \"setup project\"\n</code></pre> <p>\u5229\u7528\u53ef\u80fd\u306a\u30bf\u30b9\u30af\uff1a</p> <ul> <li><code>uv sync</code>: \u4f9d\u5b58\u95a2\u4fc2\u306e\u540c\u671f</li> <li><code>alembic upgrade</code>: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3</li> <li><code>setup project</code>: \u4e0a\u8a18 2 \u3064\u306e\u9806\u6b21\u5b9f\u884c</li> </ul>"},{"location":"dev/setup/#_13","title":"\u958b\u767a\u74b0\u5883\u306e\u8a2d\u5b9a","text":""},{"location":"dev/setup/#ide","title":"\u63a8\u5968\u3055\u308c\u308b\u30a8\u30c7\u30a3\u30bf/IDE","text":""},{"location":"dev/setup/#visual-studio-code","title":"Visual Studio Code\uff08\u63a8\u5968\uff09","text":"<p>\u5fc5\u9808\u62e1\u5f35\u6a5f\u80fd\uff1a</p> <ul> <li>Python (<code>ms-python.python</code>)</li> <li>Pylance (<code>ms-python.vscode-pylance</code>)</li> </ul> <p>\u63a8\u5968\u62e1\u5f35\u6a5f\u80fd\uff1a</p> <ul> <li>Ruff (<code>charliermarsh.ruff</code>)</li> </ul>"},{"location":"dev/setup/#_14","title":"\u30c7\u30d0\u30c3\u30b0\u8a2d\u5b9a","text":"<p>Visual Studio Code \u3067\u306e\u30c7\u30d0\u30c3\u30b0\u8a2d\u5b9a\u4f8b\uff08<code>.vscode/launch.json</code>\uff09:</p> <pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Python: Kage\",\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"program\": \"${workspaceFolder}/src/main.py\",\n      \"console\": \"integratedTerminal\",\n      \"python\": \"${workspaceFolder}/.venv/Scripts/python.exe\"\n    },\n    {\n      \"name\": \"Python: Kage (Web)\",\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"program\": \"${workspaceFolder}/src/main.py\",\n      \"args\": [\"--web\"],\n      \"console\": \"integratedTerminal\",\n      \"python\": \"${workspaceFolder}/.venv/Scripts/python.exe\"\n    }\n  ]\n}\n</code></pre>"},{"location":"dev/setup/#_15","title":"\u958b\u767a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","text":""},{"location":"dev/setup/#_16","title":"\u30d6\u30e9\u30f3\u30c1\u4f5c\u6210\u3068\u30b3\u30fc\u30c9\u5909\u66f4","text":"<p>\u958b\u767a\u3092\u59cb\u3081\u308b\u524d\u306b\u3001\u9069\u5207\u306a\u30d6\u30e9\u30f3\u30c1\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code># \u30d6\u30e9\u30f3\u30c1\u547d\u540d\u898f\u5247\u306b\u5f93\u3063\u3066\u30d6\u30e9\u30f3\u30c1\u3092\u4f5c\u6210\n# \u8a73\u7d30\u306f: docs/branch_naming.md \u3092\u53c2\u7167\ngit checkout -b feature/new-task-filter\ngit checkout -b fix/123-null-pointer\ngit checkout -b chore/update-deps\n</code></pre> <p>\u30d6\u30e9\u30f3\u30c1\u547d\u540d\u898f\u5247:</p> <ul> <li><code>&lt;type&gt;/&lt;slug&gt;</code> \u307e\u305f\u306f <code>&lt;type&gt;/&lt;issue-number&gt;-&lt;slug&gt;</code> \u306e\u5f62\u5f0f</li> <li>type: <code>feature</code>, <code>fix</code>, <code>chore</code>, <code>docs</code>, <code>refactor</code> \u306a\u3069</li> <li>\u8a73\u7d30\u306a\u898f\u5247\u306f \u30d6\u30e9\u30f3\u30c1\u547d\u540d\u898f\u5247 \u3092\u53c2\u7167</li> </ul>"},{"location":"dev/setup/#_17","title":"\u65e5\u5e38\u7684\u306a\u958b\u767a\u4f5c\u696d","text":"<pre><code># \u65b0\u3057\u3044\u4f9d\u5b58\u95a2\u4fc2\u306e\u8ffd\u52a0\nuv add \u30d1\u30c3\u30b1\u30fc\u30b8\u540d\n\n# \u958b\u767a\u7528\u4f9d\u5b58\u95a2\u4fc2\u306e\u8ffd\u52a0\nuv add --dev \u30d1\u30c3\u30b1\u30fc\u30b8\u540d\n\n# \u4f9d\u5b58\u95a2\u4fc2\u306e\u524a\u9664\nuv remove \u30d1\u30c3\u30b1\u30fc\u30b8\u540d\n\n# \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\nuv lock\n\n# \u74b0\u5883\u306e\u518d\u540c\u671f\nuv sync\n</code></pre>"},{"location":"dev/setup/#_18","title":"\u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af","text":"<pre><code># \u3059\u3079\u3066\u306e\u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u884c\nuv run poe check\n\n# \u500b\u5225\u5b9f\u884c\nuv run ruff format src        # \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nuv run ruff check src --fix   # \u30ea\u30f3\u30c8\uff08\u81ea\u52d5\u4fee\u6b63\u4ed8\u304d\uff09\nuv run pyright src           # \u578b\u30c1\u30a7\u30c3\u30af\n</code></pre>"},{"location":"dev/setup/#_19","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":""},{"location":"dev/setup/#_20","title":"\u3088\u304f\u3042\u308b\u554f\u984c\u3068\u89e3\u6c7a\u7b56","text":""},{"location":"dev/setup/#1-uv","title":"1. uv \u304c\u898b\u3064\u304b\u3089\u306a\u3044\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: <code>'uv' is not recognized as an internal or external command</code></p> <p>\u89e3\u6c7a\u7b56:</p> <pre><code># uv\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\nwhere uv\n\n# PATH\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u74b0\u5883\u5909\u6570\u306e\u78ba\u8a8d\necho $env:PATH  # PowerShell\n</code></pre>"},{"location":"dev/setup/#2-python","title":"2. Python \u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u554f\u984c","text":"<p>\u75c7\u72b6: <code>Python 3.12 or higher is required</code></p> <p>\u89e3\u6c7a\u7b56:</p> <pre><code># uv\u3067Python\u3092\u7ba1\u7406\nuv python install 3.12\nuv python pin 3.12\n\n# \u73fe\u5728\u306ePython\u30d0\u30fc\u30b8\u30e7\u30f3\u78ba\u8a8d\nuv run python --version\n</code></pre>"},{"location":"dev/setup/#3_1","title":"3. \u4f9d\u5b58\u95a2\u4fc2\u306e\u7af6\u5408","text":"<p>\u75c7\u72b6: \u4f9d\u5b58\u95a2\u4fc2\u89e3\u6c7a\u30a8\u30e9\u30fc\u3084\u53e4\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8b66\u544a</p> <p>\u89e3\u6c7a\u7b56:</p> <pre><code># \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u518d\u751f\u6210\nrm uv.lock\nuv sync\n\n# \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30af\u30ea\u30a2\nuv cache clean\n</code></pre>"},{"location":"dev/setup/#4-pre-commit","title":"4. pre-commit \u30d5\u30c3\u30af\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30b3\u30df\u30c3\u30c8\u6642\u306b pre-commit \u30d5\u30c3\u30af\u304c\u5931\u6557</p> <p>\u89e3\u6c7a\u7b56:</p> <pre><code># pre-commit\u3092\u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv run pre-commit uninstall\nuv run pre-commit install\n\n# \u5168\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066pre-commit\u3092\u5b9f\u884c\nuv run pre-commit run --all-files\n</code></pre>"},{"location":"dev/setup/#5-flet","title":"5. Flet \u30a2\u30d7\u30ea\u306e\u8d77\u52d5\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: <code>flet: command not found</code> \u3084 Flet \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30a8\u30e9\u30fc</p> <p>\u89e3\u6c7a\u7b56:</p> <pre><code># uv\u3092\u4f7f\u7528\u3057\u3066Flet\u3092\u5b9f\u884c\nuv run flet run src/main.py\n\n# Flet\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u624b\u52d5\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nuv run python -c \"import flet as ft; ft.app(lambda page: None)\"\n</code></pre>"},{"location":"dev/setup/#6_1","title":"6. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u95a2\u9023\u306e\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: SQLite \u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3001\u307e\u305f\u306f\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc</p> <p>\u89e3\u6c7a\u7b56:</p> <pre><code># \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u78ba\u8a8d\nls storage/data/\n\n# \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u6cc1\u78ba\u8a8d\nuv run alembic current\n\n# \u5f37\u5236\u7684\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\nuv run alembic upgrade head\n</code></pre>"},{"location":"dev/setup/#_21","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316","text":""},{"location":"dev/setup/#uv_1","title":"uv \u306e\u9ad8\u901f\u5316\u8a2d\u5b9a","text":"<pre><code># uv\u306e\u4e26\u5217\u51e6\u7406\u3092\u6700\u5927\u5316\nexport UV_CONCURRENT_DOWNLOADS=10\nexport UV_CONCURRENT_BUILDS=4\n\n# \u307e\u305f\u306f .uvrc \u30d5\u30a1\u30a4\u30eb\u306b\u8a2d\u5b9a\necho \"concurrent-downloads = 10\" &gt; .uvrc\necho \"concurrent-builds = 4\" &gt;&gt; .uvrc\n</code></pre>"},{"location":"dev/setup/#_22","title":"\u7ba1\u7406\u8005\u5411\u3051\u306e\u8ffd\u52a0\u60c5\u5831","text":""},{"location":"dev/setup/#_23","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210","text":"<pre><code>Kage/\n\u251c\u2500\u2500 .vscode/              # VS Code\u8a2d\u5b9a\n\u2502   \u251c\u2500\u2500 tasks.json       # \u30bf\u30b9\u30af\u5b9a\u7fa9\n\u2502   \u251c\u2500\u2500 settings.json    # \u30a8\u30c7\u30a3\u30bf\u8a2d\u5b9a\n\u2502   \u2514\u2500\u2500 extensions.json  # \u63a8\u5968\u62e1\u5f35\u6a5f\u80fd\n\u251c\u2500\u2500 docs/                # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u251c\u2500\u2500 src/                 # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u2502   \u251c\u2500\u2500 agents/         # AI/Agent\u30e2\u30b8\u30e5\u30fc\u30eb\n\u2502   \u251c\u2500\u2500 logic/          # \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\n\u2502   \u251c\u2500\u2500 models/         # \u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\u2502   \u251c\u2500\u2500 views/          # UI\u5c64\n\u2502   \u2514\u2500\u2500 main.py         # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\n\u251c\u2500\u2500 tests/              # \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u251c\u2500\u2500 storage/            # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30fb\u30d5\u30a1\u30a4\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\n\u251c\u2500\u2500 pyproject.toml      # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u30fb\u4f9d\u5b58\u95a2\u4fc2\n\u251c\u2500\u2500 uv.lock            # \u4f9d\u5b58\u95a2\u4fc2\u306e\u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\n\u2514\u2500\u2500 alembic.ini        # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\n</code></pre>"},{"location":"dev/setup/#_24","title":"\u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406","text":""},{"location":"dev/setup/#_25","title":"\u672c\u756a\u74b0\u5883\u30c7\u30d7\u30ed\u30a4\u7528","text":"<pre><code># \u672c\u756a\u74b0\u5883\u7528\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u307f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv sync --no-dev\n\n# requirements.txt\u306e\u751f\u6210\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09\nuv export --no-dev -o requirements.txt\n</code></pre>"},{"location":"dev/setup/#_26","title":"\u65b0\u3057\u3044\u4f9d\u5b58\u95a2\u4fc2\u306e\u8ffd\u52a0","text":"<pre><code># \u672c\u756a\u4f9d\u5b58\u95a2\u4fc2\nuv add \u65b0\u3057\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\n\n# \u958b\u767a\u4f9d\u5b58\u95a2\u4fc2\nuv add --dev \u65b0\u3057\u3044\u958b\u767a\u30c4\u30fc\u30eb\n\n# \u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u4f9d\u5b58\u95a2\u4fc2\nuv add --optional feature \u65b0\u3057\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\n</code></pre>"},{"location":"dev/setup/#cicd","title":"CI/CD \u3068\u306e\u7d71\u5408","text":""},{"location":"dev/setup/#github-actions","title":"GitHub Actions \u3067\u306e\u8a2d\u5b9a\u4f8b","text":"<pre><code># .github/workflows/test.yml\nname: Test\non: [push, pull_request]\njobs:\n  test:\n    runs-on: windows-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: astral-sh/setup-uv@v1\n        with:\n          version: \"0.7.3\"\n      - run: uv sync\n      - run: uv run pytest\n      - run: uv run poe check\n</code></pre>"},{"location":"dev/setup/#_27","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d3\u30eb\u30c9\u624b\u9806","text":""},{"location":"dev/setup/#_28","title":"\u958b\u767a\u7248\u30d3\u30eb\u30c9","text":"<pre><code># \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\nuv run flet pack src/main.py\n\n# \u914d\u5e03\u53ef\u80fd\u306aexe\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\nuv run flet pack src/main.py --distpath ./dist --name Kage\n</code></pre>"},{"location":"dev/setup/#github-actions_1","title":"GitHub Actions \u3067\u306e\u81ea\u52d5\u30d3\u30eb\u30c9","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f<code>.github/workflows/build_windows.yml</code>\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\uff1a</p> <ul> <li>\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30d7\u30c3\u30b7\u30e5\u6642\u306e\u81ea\u52d5\u30c6\u30b9\u30c8</li> <li>\u30ea\u30ea\u30fc\u30b9\u30bf\u30b0\u4f5c\u6210\u6642\u306e\u81ea\u52d5\u30d3\u30eb\u30c9\u30fb\u30c7\u30d7\u30ed\u30a4</li> <li>Windows \u7528\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210</li> </ul> <p>\u624b\u52d5\u30d3\u30eb\u30c9\u30c8\u30ea\u30ac\u30fc:</p> <ol> <li>GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306e \"Actions\" \u30bf\u30d6\u306b\u79fb\u52d5</li> <li>\"Build Windows\" \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u9078\u629e</li> <li>\"Run workflow\" \u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af</li> </ol>"},{"location":"dev/setup/#_29","title":"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8003\u616e\u4e8b\u9805","text":""},{"location":"dev/setup/#_30","title":"\u958b\u767a\u6642\u306e\u6ce8\u610f\u70b9","text":"<pre><code># \u6a5f\u5bc6\u60c5\u5831\u306e\u74b0\u5883\u5909\u6570\u7ba1\u7406\ncp .env.example .env\n# .env\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\uff08Git\u306b\u30b3\u30df\u30c3\u30c8\u3057\u306a\u3044\uff09\n\n# pre-commit\u30d5\u30c3\u30af\u3067\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30a7\u30c3\u30af\nuv run pre-commit run --all-files\n</code></pre>"},{"location":"dev/setup/#_31","title":"\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30fb\u5fa9\u5143","text":""},{"location":"dev/setup/#_32","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d0\u30c3\u30af\u30a2\u30c3\u30d7","text":"<pre><code># SQLite\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\ncp storage/data/kage.db storage/data/backup_$(date +%Y%m%d).db\n\n# \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\ntar -czf config_backup.tar.gz .env pyproject.toml alembic.ini\n</code></pre>"},{"location":"dev/setup/#_33","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u66f4\u65b0\u5c65\u6b74","text":"<ul> <li>2025 \u5e74 8 \u6708 6 \u65e5: uv \u306e\u6700\u65b0\u60c5\u5831\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210\u306b\u57fa\u3065\u3044\u3066\u5168\u9762\u6539\u8a02</li> <li>uv 0.7.3 \u5bfe\u5fdc: \u6700\u65b0\u306e uv \u30b3\u30de\u30f3\u30c9\u3068\u6a5f\u80fd\u306b\u5bfe\u5fdc</li> <li>Flet 0.27.6 \u5bfe\u5fdc: \u6700\u65b0\u306e Flet \u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8d77\u52d5\u65b9\u6cd5\u3092\u53cd\u6620</li> <li>\u958b\u767a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc: VS Code \u7d71\u5408\u3068\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u306e\u8aac\u660e\u3092\u8ffd\u52a0</li> </ul>"},{"location":"dev/task_runner/","title":"Kage \u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30ac\u30a4\u30c9","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f poethepoet \u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u958b\u767a\u30fb\u30c6\u30b9\u30c8\u30fb\u30d3\u30eb\u30c9\u306a\u3069\u306e\u4f5c\u696d\u3092\u52b9\u7387\u5316\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"dev/task_runner/#_1","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30fb\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":""},{"location":"dev/task_runner/#poethepoet","title":"poethepoet \u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u63a8\u5968\uff09","text":"<p>poethepoet \u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u3001<code>uv run</code>\u3092\u4ed8\u3051\u305a\u306b\u76f4\u63a5<code>poe</code>\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a</p> <pre><code># poethepoet\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nuv tool install poethepoet\n\n# \u4f9d\u5b58\u95a2\u4fc2\u306e\u540c\u671f\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u521d\u671f\u5316\npoe setup\n</code></pre>"},{"location":"dev/task_runner/#_2","title":"\u30ed\u30fc\u30ab\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306e\u4f7f\u7528\uff08\u4ee3\u66ff\u65b9\u6cd5\uff09","text":"<p>\u3082\u3057\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\uff1a</p> <pre><code># \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306bpoethepoet\u3092\u8ffd\u52a0\nuv add poethepoet --dev\n\n# \u30bf\u30b9\u30af\u5b9f\u884c\uff08\u3053\u306e\u5834\u5408\u306fuv run\u304c\u5fc5\u8981\uff09\nuv run poe setup\n</code></pre>"},{"location":"dev/task_runner/#_3","title":"\u57fa\u672c\u7684\u306a\u4f7f\u7528\u65b9\u6cd5","text":"<pre><code># \u5229\u7528\u53ef\u80fd\u306a\u30bf\u30b9\u30af\u306e\u4e00\u89a7\u8868\u793a\npoe --help\n\n# \u7279\u5b9a\u306e\u30bf\u30b9\u30af\u306e\u5b9f\u884c\npoe &lt;task-name&gt;\n</code></pre>"},{"location":"dev/task_runner/#_4","title":"\ud83d\udccb \u5229\u7528\u53ef\u80fd\u306a\u30bf\u30b9\u30af\u4e00\u89a7","text":""},{"location":"dev/task_runner/#_5","title":"\ud83d\ude80 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe app-run</code> \u901a\u5e38\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u3068\u3057\u3066\u8d77\u52d5 <code>poe app-dev</code> \u958b\u767a\u30e2\u30fc\u30c9\uff08\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 + \u518d\u5e30\u76e3\u8996\uff09 <code>poe app-web</code> Web \u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30d7\u30ea\u3092\u8d77\u52d5 <code>poe app-web-dev</code> Web \u30d6\u30e9\u30a6\u30b6\u3067\u958b\u767a\u30e2\u30fc\u30c9\u8d77\u52d5 <code>poe app-debug</code> \u8a73\u7d30\u30ed\u30b0\u51fa\u529b\u30e2\u30fc\u30c9\u3067\u8d77\u52d5"},{"location":"dev/task_runner/#_6","title":"\u2699\ufe0f \u958b\u767a\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe setup</code> \u521d\u56de\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\uff08\u4f9d\u5b58\u95a2\u4fc2\u540c\u671f + DB \u66f4\u65b0\uff09 <code>poe sync</code> \u4f9d\u5b58\u95a2\u4fc2\u306e\u540c\u671f"},{"location":"dev/task_runner/#_7","title":"\ud83d\uddc4\ufe0f \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe db-upgrade</code> \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c <code>poe db-downgrade</code> 1 \u3064\u524d\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u30c0\u30a6\u30f3\u30b0\u30ec\u30fc\u30c9 <code>poe db-history</code> \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5c65\u6b74\u306e\u8868\u793a <code>poe db-current</code> \u73fe\u5728\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u78ba\u8a8d"},{"location":"dev/task_runner/#_8","title":"\ud83d\udd0d \u30b3\u30fc\u30c9\u54c1\u8cea\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe lint</code> ruff \u306b\u3088\u308b\u9759\u7684\u89e3\u6790 <code>poe lint-fix</code> \u81ea\u52d5\u4fee\u6b63\u53ef\u80fd\u306a\u554f\u984c\u3092\u4fee\u6b63 <code>poe format</code> \u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 <code>poe format-check</code> \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c1\u30a7\u30c3\u30af\uff08\u4fee\u6b63\u306a\u3057\uff09 <code>poe type-check</code> \u578b\u30c1\u30a7\u30c3\u30af\uff08Pyright\uff09"},{"location":"dev/task_runner/#_9","title":"\ud83c\udfaf \u8907\u5408\u30b3\u30de\u30f3\u30c9","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe check</code> \u54c1\u8cea\u30c1\u30a7\u30c3\u30af\u4e00\u62ec\u5b9f\u884c\uff08lint + format-check + type-check\uff09 <code>poe fix</code> \u81ea\u52d5\u4fee\u6b63\u4e00\u62ec\u5b9f\u884c\uff08lint-fix + format\uff09"},{"location":"dev/task_runner/#_10","title":"\ud83e\uddea \u30c6\u30b9\u30c8\u5b9f\u884c","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe test</code> \u5168\u30c6\u30b9\u30c8\u306e\u5b9f\u884c <code>poe test-unit</code> \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u307f\u5b9f\u884c <code>poe test-integration</code> \u7d71\u5408\u30c6\u30b9\u30c8\u306e\u307f\u5b9f\u884c <code>poe test-cov</code> \u30ab\u30d0\u30ec\u30c3\u30b8\u4ed8\u304d\u30c6\u30b9\u30c8\u5b9f\u884c"},{"location":"dev/task_runner/#_11","title":"\ud83d\udce6 \u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe deps-list</code> \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e00\u89a7 <code>poe deps-tree</code> \u4f9d\u5b58\u95a2\u4fc2\u30c4\u30ea\u30fc\u306e\u8868\u793a <code>poe deps-outdated</code> \u53e4\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u78ba\u8a8d"},{"location":"dev/task_runner/#_12","title":"\ud83c\udfd7\ufe0f \u30d3\u30eb\u30c9\u30fb\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe build-web</code> \u9759\u7684 Web \u30b5\u30a4\u30c8\u3068\u3057\u3066\u30d3\u30eb\u30c9 <code>poe build-desktop</code> Windows \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u3068\u3057\u3066\u30d3\u30eb\u30c9 <code>poe pack-desktop</code> \u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30d0\u30f3\u30c9\u30eb\u4f5c\u6210"},{"location":"dev/task_runner/#_13","title":"\ud83e\uddf9 \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe clean</code> uv \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30af\u30ea\u30a2 <code>poe clean-pyc</code> .pyc \u30d5\u30a1\u30a4\u30eb\u306e\u524a\u9664 <code>poe clean-all</code> \u5168\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u306e\u5b9f\u884c"},{"location":"dev/task_runner/#_14","title":"\ud83d\udcc4 \u30ed\u30b0\u7ba1\u7406","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>poe logs-app</code> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b0\u306e\u6700\u65b0 50 \u884c\u8868\u793a <code>poe logs-agents</code> \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u30ed\u30b0\u306e\u6700\u65b0 50 \u884c\u8868\u793a <code>poe logs-clear</code> \u5168\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u524a\u9664"},{"location":"dev/task_runner/#_15","title":"\ud83d\udca1 \u958b\u767a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u4f8b","text":""},{"location":"dev/task_runner/#_16","title":"\u521d\u56de\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<pre><code># \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30af\u30ed\u30fc\u30f3\u5f8c\npoe setup\n</code></pre>"},{"location":"dev/task_runner/#_17","title":"\u65e5\u5e38\u306e\u958b\u767a\u4f5c\u696d","text":"<pre><code># \u958b\u767a\u30e2\u30fc\u30c9\u3067\u30a2\u30d7\u30ea\u8d77\u52d5\npoe app-dev\n\n# \u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\npoe check\n\n# \u554f\u984c\u306e\u81ea\u52d5\u4fee\u6b63\npoe fix\n\n# \u30c6\u30b9\u30c8\u5b9f\u884c\npoe test\n</code></pre>"},{"location":"dev/task_runner/#_18","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c","text":"<pre><code># \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\npoe db-upgrade\n\n# \u73fe\u5728\u306e\u72b6\u614b\u78ba\u8a8d\npoe db-current\n</code></pre>"},{"location":"dev/task_runner/#_19","title":"\u30c7\u30d7\u30ed\u30a4\u524d\u306e\u30c1\u30a7\u30c3\u30af","text":"<pre><code># \u5168\u4f53\u7684\u306a\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\npoe check\n\n# \u30c6\u30b9\u30c8\u5b9f\u884c\npoe test\n\n# Web\u30a2\u30d7\u30ea\u3068\u3057\u3066\u30d3\u30eb\u30c9\npoe build-web\n</code></pre>"},{"location":"dev/task_runner/#_20","title":"\u2753 \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":""},{"location":"dev/task_runner/#_21","title":"\u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408","text":"<pre><code># \u5229\u7528\u53ef\u80fd\u306a\u30bf\u30b9\u30af\u3092\u78ba\u8a8d\npoe --help\n</code></pre>"},{"location":"dev/task_runner/#_22","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u554f\u984c","text":"<pre><code># \u4f9d\u5b58\u95a2\u4fc2\u3092\u518d\u540c\u671f\npoe sync\n</code></pre>"},{"location":"dev/task_runner/#_23","title":"\u30ed\u30b0\u306e\u78ba\u8a8d","text":"<pre><code># \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b0\u3092\u78ba\u8a8d\npoe logs-app\n\n# \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u30ed\u30b0\u3092\u78ba\u8a8d\npoe logs-agents\n</code></pre>"},{"location":"dev/task_runner/#_24","title":"\u2699\ufe0f \u30ab\u30b9\u30bf\u30e0\u30bf\u30b9\u30af\u306e\u8ffd\u52a0","text":"<p>\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u3001<code>pyproject.toml</code>\u306e<code>[tool.poe.tasks]</code>\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\uff1a</p> <pre><code>[tool.poe.tasks]\nmy-custom-task = \"echo 'Hello, World!'\"\n</code></pre> <p>\u8a73\u7d30\u306a\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f poethepoet \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"dev/views_guide/","title":"Views \u306e\u66f8\u304d\u65b9\u30ac\u30a4\u30c9","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001Kage \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u304a\u3051\u308b View \u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002Python \u521d\u5b66\u8005\u304c\u30e1\u30f3\u30d0\u30fc\u306b\u5165\u3063\u305f\u969b\u306b\u8aad\u3093\u3067\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u304b\u3089\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5\u307e\u3067\u4f53\u7cfb\u7684\u306b\u89e3\u8aac\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#view","title":"View \u30ec\u30a4\u30e4\u30fc\u3068\u306f","text":"<p>View \u30ec\u30a4\u30e4\u30fc\u306f MVC \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u300cV\u300d\u306b\u76f8\u5f53\u3059\u308b\u90e8\u5206\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08UI\uff09\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001Flet \u30e9\u30a4\u30d6\u30e9\u30ea\u3067 GUI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u3001View \u30ec\u30a4\u30e4\u30fc\u304c\u753b\u9762\u306e\u8868\u793a\u3068\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#_1","title":"\u5f79\u5272\u3068\u8cac\u52d9","text":"<ul> <li>\u8868\u793a\uff08Display\uff09: \u30c7\u30fc\u30bf\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b</li> <li>\u76f8\u4e92\u4f5c\u7528\uff08Interaction\uff09: \u30e6\u30fc\u30b6\u30fc\u306e\u64cd\u4f5c\uff08\u30af\u30ea\u30c3\u30af\u3001\u5165\u529b\uff09\u306b\u5bfe\u5fdc\u3059\u308b</li> <li>\u30ec\u30a4\u30a2\u30a6\u30c8\uff08Layout\uff09: UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u914d\u7f6e\u3068\u69cb\u6210\u3092\u7ba1\u7406\u3059\u308b</li> </ul>"},{"location":"dev/views_guide/#_2","title":"\u4ed6\u306e\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u95a2\u4fc2","text":"<p>```plain text \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502     Views       \u2502 \u2190 UI\u306e\u8868\u793a\u3068\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502   Application   \u2502 \u2190 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u8abf\u6574\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502     Logic       \u2502 \u2190 \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3001\u30c9\u30e1\u30a4\u30f3\u30b5\u30fc\u30d3\u30b9 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502     Models      \u2502 \u2190 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 <pre><code>**Views \u5c64\u306e\u8cac\u52d9**\uff1a\n\n- **UI \u8868\u793a**: Flet \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u3063\u305f\u753b\u9762\u63cf\u753b\n- **\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3**: \u30af\u30ea\u30c3\u30af\u3001\u5165\u529b\u3001\u9078\u629e\u7b49\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\n- **\u72b6\u614b\u7ba1\u7406**: UI \u56fa\u6709\u306e\u72b6\u614b\uff08\u9078\u629e\u72b6\u614b\u3001\u8868\u793a\u30d5\u30a3\u30eb\u30bf\u30fc\u7b49\uff09\n- **\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3**: \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u5074\u306e\u5165\u529b\u691c\u8a3c\n\n**Application \u5c64\u3068\u306e\u9023\u643a**\uff1a\n\n- Application Service \u3092\u901a\u3058\u3066\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u547c\u3073\u51fa\u3057\n- \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3068\u30e6\u30fc\u30b6\u30fc\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\n- \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306e\u610f\u8b58\uff08Application Service \u5074\u3067\u7ba1\u7406\uff09\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n\n```plain text\nsrc/views/\n\u251c\u2500\u2500 __init__.py           # \u30d3\u30e5\u30fc\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5b9a\u7fa9\n\u251c\u2500\u2500 layout.py             # \u5171\u901a\u30ec\u30a4\u30a2\u30a6\u30c8\uff08\u30d8\u30c3\u30c0\u30fc\u7b49\uff09\n\u251c\u2500\u2500 shared/               # \u5171\u6709\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 base_view.py      # \u30d9\u30fc\u30b9\u30d3\u30e5\u30fc\u30af\u30e9\u30b9\n\u2502   \u251c\u2500\u2500 app_bar.py        # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30fc\n\u2502   \u2514\u2500\u2500 error_handling_mixin.py  # \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0Mixin\n\u251c\u2500\u2500 home/                 # \u30db\u30fc\u30e0\u753b\u9762\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 view.py           # \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\n\u2514\u2500\u2500 task/                 # \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 view.py           # \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\uff08TaskView\uff09\n    \u2514\u2500\u2500 components/       # \u30bf\u30b9\u30af\u95a2\u9023\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 task_dialog.py         # \u30bf\u30b9\u30af\u4f5c\u6210/\u7de8\u96c6\u30c0\u30a4\u30a2\u30ed\u30b0\n        \u251c\u2500\u2500 tasks_board.py         # \u30bf\u30b9\u30af\u30dc\u30fc\u30c9\n        \u251c\u2500\u2500 quick_actions.py       # \u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\n        \u2514\u2500\u2500 projects_placeholder.py # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30a8\u30ea\u30a2\n</code></pre></p>"},{"location":"dev/views_guide/#_3","title":"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306e\u8003\u3048\u65b9","text":"<ol> <li>\u6a5f\u80fd\u3054\u3068\u306e\u5206\u5272: <code>home/</code>, <code>task/</code> \u306e\u3088\u3046\u306b\u6a5f\u80fd\u3054\u3068\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5206\u3051\u308b</li> <li>\u5171\u901a\u8981\u7d20\u306e\u5206\u96e2: <code>shared/</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u518d\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u914d\u7f6e</li> <li>\u5f79\u5272\u306b\u3088\u308b\u5206\u96e2: <code>view.py</code> (\u30e1\u30a4\u30f3\u30d3\u30e5\u30fc) \u3068 <code>components/</code> (\u500b\u5225\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8) \u306b\u5206\u3051\u308b</li> <li>Clean Architecture: <code>BaseView</code> \u3068 <code>ErrorHandlingMixin</code> \u306b\u3088\u308a\u30ec\u30a4\u30e4\u30fc\u5206\u96e2\u3092\u5b9f\u73fe</li> </ol>"},{"location":"dev/views_guide/#applicationservice","title":"ApplicationService \u5c64\u3068\u306e\u9023\u643a","text":"<p>Views \u5c64\u3067\u306f\u3001\u76f4\u63a5 Logic \u5c64\uff08\u30c9\u30e1\u30a4\u30f3\u30b5\u30fc\u30d3\u30b9\uff09\u3092\u547c\u3073\u51fa\u3059\u306e\u3067\u306f\u306a\u304f\u3001Application Service \u5c64\u3092\u7d4c\u7531\u3057\u3066\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3068\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306e\u8cac\u4efb\u304c Application Service \u5074\u306b\u79fb\u308a\u3001View \u5c64\u306f UI \u8868\u793a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#1-application-service","title":"1. Application Service \u306e\u53d6\u5f97\u3068\u6ce8\u5165","text":"<pre><code># views/task/view.py - \u5b9f\u969b\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9f\u88c5\u4f8b\nfrom logic.application.task_application_service import TaskApplicationService\n\nclass TaskView(BaseView, ErrorHandlingMixin):\n    \"\"\"\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\"\"\"\n\n    def __init__(self, page: ft.Page) -&gt; None:\n        super().__init__(page)\n\n        # Application Service Container\u304b\u3089\u53d6\u5f97\n        self._task_app_service: TaskApplicationService = self.container.get_task_application_service()\n</code></pre>"},{"location":"dev/views_guide/#2-crud","title":"2. CRUD \u64cd\u4f5c\u306e\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3","text":"<pre><code># \u30bf\u30b9\u30af\u4f5c\u6210\u306e\u4f8b\ndef _on_task_created(self, command: CreateTaskCommand) -&gt; None:\n    \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u6642\u306e\u51e6\u7406\"\"\"\n    try:\n        # Application Service\u3092\u901a\u3058\u3066\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c\n        new_task = self._task_app_service.create_task(command)\n\n        # \u6210\u529f\u6642\u306eUI\u66f4\u65b0\n        self._refresh_tasks()\n        self._show_success_message(f\"\u30bf\u30b9\u30af '{new_task.title}' \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\")\n\n    except TaskServiceError as e:\n        # \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u30a8\u30e9\u30fc\u306e\u51e6\u7406\n        self._show_error_message(f\"\u30bf\u30b9\u30af\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n        logger.error(f\"Task creation failed: {e}\")\n\n    except Exception as e:\n        # \u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc\u306e\u51e6\u7406\n        self._show_error_message(\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\")\n        logger.exception(f\"Unexpected error in task creation: {e}\")\n\n# \u30bf\u30b9\u30af\u66f4\u65b0\u306e\u4f8b\ndef _on_task_status_change(self, task_id: str, new_status: TaskStatus) -&gt; None:\n    \"\"\"\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u6642\u306e\u51e6\u7406\"\"\"\n    try:\n        command = UpdateTaskStatusCommand(task_id=task_id, status=new_status)\n        updated_task = self._task_app_service.update_task_status(command)\n\n        # \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0UI\u66f4\u65b0\n        self.tasks_board.update_task_status(task_id, new_status)\n        self._show_success_message(f\"\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u3092 {new_status.value} \u306b\u5909\u66f4\u3057\u307e\u3057\u305f\")\n\n    except TaskServiceError as e:\n        self._show_error_message(f\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n        # UI\u72b6\u614b\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n        self.tasks_board.revert_task_status(task_id)\n</code></pre>"},{"location":"dev/views_guide/#3","title":"3. \u30b3\u30de\u30f3\u30c9/\u30af\u30a8\u30ea\u30d1\u30bf\u30fc\u30f3\u306e\u6d3b\u7528","text":"<pre><code># Command\uff08\u72b6\u614b\u5909\u66f4\uff09\u3068Query\uff08\u72b6\u614b\u53d6\u5f97\uff09\u3092\u660e\u78ba\u306b\u5206\u96e2\n\n# Command\u4f8b - \u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u64cd\u4f5c\ndef _handle_quick_action(self, action: QuickActionCommand) -&gt; None:\n    \"\"\"\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u5b9f\u884c\"\"\"\n    try:\n        result = self._task_app_service.execute_quick_action(action)\n        self._refresh_tasks()  # UI\u66f4\u65b0\n        self._show_success_message(f\"{action.action_name} \u3092\u5b9f\u884c\u3057\u307e\u3057\u305f\")\n\n    except Exception as e:\n        self._show_error_message(f\"\u30a2\u30af\u30b7\u30e7\u30f3\u5b9f\u884c\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n\n# Query\u4f8b - \u30c7\u30fc\u30bf\u53d6\u5f97\u306e\u307f\ndef _load_tasks_by_status(self, status: TaskStatus) -&gt; list[TaskRead]:\n    \"\"\"\u6307\u5b9a\u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u30bf\u30b9\u30af\u3092\u53d6\u5f97\"\"\"\n    try:\n        query = GetTasksByStatusQuery(status=status)\n        return self._task_app_service.get_tasks_by_status(query)\n\n    except Exception as e:\n        logger.error(f\"Failed to load tasks with status {status}: {e}\")\n        self._show_error_message(\"\u30bf\u30b9\u30af\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f\")\n        return []\n</code></pre>"},{"location":"dev/views_guide/#4-gtd","title":"4. GTD \u7279\u5316\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5b9f\u88c5","text":"<pre><code># GTD Inbox Review\u306e\u4e00\u62ec\u51e6\u7406\u4f8b\ndef _process_inbox_review(self, decisions: list[InboxDecision]) -&gt; None:\n    \"\"\"Inbox Review - GTD\u56fa\u6709\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\"\"\"\n    try:\n        # Application Service\u304c\u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u7ba1\u7406\n        results = self._task_app_service.process_gtd_inbox_review(decisions)\n\n        # UI\u5074\u306f\u7d50\u679c\u306e\u8868\u793a\u306b\u5c02\u5ff5\n        processed_count = len(results)\n        self._show_success_message(f\"{processed_count}\u4ef6\u306e\u30bf\u30b9\u30af\u3092\u51e6\u7406\u3057\u307e\u3057\u305f\")\n\n        # \u30dc\u30fc\u30c9\u5168\u4f53\u3092\u66f4\u65b0\n        self._refresh_tasks()\n\n    except GTDWorkflowError as e:\n        self._show_error_message(f\"Inbox Review\u51e6\u7406\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n\n# \u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\ndef _start_weekly_review(self) -&gt; None:\n    \"\"\"GTD\u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u306e\u958b\u59cb\"\"\"\n    try:\n        review_data = self._task_app_service.prepare_weekly_review()\n\n        # \u5c02\u7528\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u3092\u8868\u793a\n        self._open_weekly_review_dialog(review_data)\n\n    except Exception as e:\n        self._show_error_message(f\"\u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u306e\u6e96\u5099\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n</code></pre>"},{"location":"dev/views_guide/#gtd-ui","title":"GTD \u7279\u5316 UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u8a2d\u8a08","text":"<p>GTD\uff08Getting Things Done\uff09\u306e\u6982\u5ff5\u3092\u53cd\u6620\u3057\u305f\u5c02\u7528 UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a2d\u8a08\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#1-taskstatus","title":"1. TaskStatus \u306b\u57fa\u3065\u304f\u8996\u899a\u7684\u5206\u985e","text":"<pre><code># views/task/components/task_card.py - GTD\u56fa\u6709\u306e\u30bf\u30b9\u30af\u30ab\u30fc\u30c9\nclass GTDTaskCard(ft.Container):\n    \"\"\"GTD\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5fdc\u3058\u305f\u8996\u899a\u7684\u8868\u73fe\u3092\u63d0\u4f9b\u3059\u308b\u30ab\u30fc\u30c9\"\"\"\n\n    def __init__(self, task: TaskRead, on_click: Callable[[TaskRead], None]):\n        super().__init__()\n        self.task = task\n        self.on_click = on_click\n\n        # GTD\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5fdc\u3058\u305f\u8272\u3068\u30a2\u30a4\u30b3\u30f3\u3092\u8a2d\u5b9a\n        self._setup_gtd_appearance()\n\n    def _setup_gtd_appearance(self) -&gt; None:\n        \"\"\"GTD\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5fdc\u3058\u305f\u5916\u89b3\u8a2d\u5b9a\"\"\"\n        status_config = {\n            TaskStatus.INBOX: {\n                \"color\": ft.colors.ORANGE_100,\n                \"border_color\": ft.colors.ORANGE_400,\n                \"icon\": ft.icons.INBOX,\n                \"label\": \"\ud83d\udce5 Inbox\"\n            },\n            TaskStatus.NEXT_ACTION: {\n                \"color\": ft.colors.GREEN_100,\n                \"border_color\": ft.colors.GREEN_400,\n                \"icon\": ft.icons.TRENDING_FLAT,\n                \"label\": \"\u26a1 Next Action\"\n            },\n            TaskStatus.WAITING: {\n                \"color\": ft.colors.YELLOW_100,\n                \"border_color\": ft.colors.YELLOW_400,\n                \"icon\": ft.icons.SCHEDULE,\n                \"label\": \"\u23f3 Waiting For\"\n            },\n            TaskStatus.SCHEDULED: {\n                \"color\": ft.colors.BLUE_100,\n                \"border_color\": ft.colors.BLUE_400,\n                \"icon\": ft.icons.EVENT,\n                \"label\": \"\ud83d\udcc5 Scheduled\"\n            },\n            TaskStatus.SOMEDAY_MAYBE: {\n                \"color\": ft.colors.PURPLE_100,\n                \"border_color\": ft.colors.PURPLE_400,\n                \"icon\": ft.icons.LIGHTBULB_OUTLINE,\n                \"label\": \"\ud83e\udd14 Someday/Maybe\"\n            },\n            TaskStatus.DONE: {\n                \"color\": ft.colors.GREY_100,\n                \"border_color\": ft.colors.GREY_400,\n                \"icon\": ft.icons.CHECK_CIRCLE,\n                \"label\": \"\u2705 Done\"\n            }\n        }\n\n        config = status_config.get(self.task.status, status_config[TaskStatus.INBOX])\n\n        # \u30ab\u30fc\u30c9\u5916\u89b3\u306e\u8a2d\u5b9a\n        self.bgcolor = config[\"color\"]\n        self.border = ft.border.all(1, config[\"border_color\"])\n        self.border_radius = 8\n        self.padding = 12\n</code></pre>"},{"location":"dev/views_guide/#2-context-ui","title":"2. Context\uff08\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\uff09\u30d9\u30fc\u30b9\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 UI","text":"<pre><code># views/shared/context_filter.py - GTD\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30eb\u30bf\u30fc\nclass ContextFilter(ft.Row):\n    \"\"\"GTD\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\uff08@\u96fb\u8a71\u3001@\u5916\u51fa\u7b49\uff09\u306b\u3088\u308b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0UI\"\"\"\n\n    def __init__(self, on_context_change: Callable[[list[str]], None]):\n        super().__init__()\n        self.on_context_change = on_context_change\n        self.selected_contexts: set[str] = set()\n\n        # GTD\u6a19\u6e96\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u5b9a\u7fa9\n        self.gtd_contexts = [\n            (\"@\u96fb\u8a71\", ft.icons.PHONE, ft.colors.BLUE),\n            (\"@\u5916\u51fa\", ft.icons.DIRECTIONS_CAR, ft.colors.GREEN),\n            (\"@PC\", ft.icons.COMPUTER, ft.colors.PURPLE),\n            (\"@\u5bb6\", ft.icons.HOME, ft.colors.ORANGE),\n            (\"@\u8cb7\u3044\u7269\", ft.icons.SHOPPING_CART, ft.colors.RED),\n            (\"@\u5f85\u6a5f\", ft.icons.SCHEDULE, ft.colors.YELLOW),\n        ]\n\n        self._build_context_chips()\n\n    def _build_context_chips(self) -&gt; None:\n        \"\"\"\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c1\u30c3\u30d7\u3092\u69cb\u7bc9\"\"\"\n        context_chips = []\n\n        for context, icon, color in self.gtd_contexts:\n            chip = ft.FilterChip(\n                label=ft.Text(context),\n                leading=ft.Icon(icon),\n                selected=context in self.selected_contexts,\n                on_select=lambda e, ctx=context: self._on_context_toggle(ctx, e.data),\n                bgcolor=color if context in self.selected_contexts else None\n            )\n            context_chips.append(chip)\n\n        self.controls = [\n            ft.Text(\"\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8:\", weight=ft.FontWeight.BOLD),\n            ft.Wrap(context_chips, spacing=8)\n        ]\n</code></pre>"},{"location":"dev/views_guide/#3-2-minute-rule-2","title":"3. 2-Minute Rule (2 \u5206\u30eb\u30fc\u30eb) \u30b5\u30dd\u30fc\u30c8","text":"<pre><code># views/task/components/quick_actions.py - \u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\nclass QuickActionButton(ft.ElevatedButton):\n    \"\"\"GTD 2\u5206\u30eb\u30fc\u30eb\u306b\u57fa\u3065\u304f\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\"\"\"\n\n    def __init__(self, action: QuickActionCommand, on_click: Callable):\n        super().__init__()\n        self.action = action\n\n        # \u30a2\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7\u306b\u5fdc\u3058\u305f\u8868\u793a\u8a2d\u5b9a\n        self._setup_action_appearance()\n        self.on_click = lambda _: on_click(action)\n\n    def _setup_action_appearance(self) -&gt; None:\n        \"\"\"\u30a2\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7\u306b\u5fdc\u3058\u305f\u5916\u89b3\u8a2d\u5b9a\"\"\"\n        action_configs = {\n            \"DO_NOW\": {  # 2\u5206\u4ee5\u5185\u3067\u5b8c\u4e86\n                \"text\": \"\u4eca\u3059\u3050\u5b9f\u884c\",\n                \"icon\": ft.icons.FLASH_ON,\n                \"color\": ft.colors.GREEN,\n                \"tooltip\": \"2\u5206\u4ee5\u5185\u3067\u5b8c\u4e86\u3067\u304d\u308b\u30bf\u30b9\u30af\u3092\u3059\u3050\u306b\u5b9f\u884c\"\n            },\n            \"DEFER\": {  # \u5f8c\u3067\u5b9f\u884c\n                \"text\": \"\u5f8c\u3067\u5b9f\u884c\",\n                \"icon\": ft.icons.SCHEDULE,\n                \"color\": ft.colors.BLUE,\n                \"tooltip\": \"Next Action\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\"\n            },\n            \"DELEGATE\": {  # \u59d4\u8b72\n                \"text\": \"\u59d4\u8b72\",\n                \"icon\": ft.icons.PERSON_ADD,\n                \"color\": ft.colors.ORANGE,\n                \"tooltip\": \"\u4ed6\u306e\u4eba\u306b\u59d4\u8b72\"\n            },\n            \"DELETE\": {  # \u524a\u9664\n                \"text\": \"\u524a\u9664\",\n                \"icon\": ft.icons.DELETE,\n                \"color\": ft.colors.RED,\n                \"tooltip\": \"\u4e0d\u8981\u306a\u30bf\u30b9\u30af\u3092\u524a\u9664\"\n            }\n        }\n\n        config = action_configs.get(self.action.action_type, action_configs[\"DEFER\"])\n\n        self.text = config[\"text\"]\n        self.icon = config[\"icon\"]\n        self.bgcolor = config[\"color\"]\n        self.tooltip = config[\"tooltip\"]\n        self.style = ft.ButtonStyle(color=ft.colors.WHITE)\n</code></pre>"},{"location":"dev/views_guide/#4-project","title":"4. Project \u968e\u5c64\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":"<pre><code># views/task/components/project_tree.py - \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u968e\u5c64\u8868\u793a\nclass ProjectTreeView(ft.Container):\n    \"\"\"GTD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u968e\u5c64\u8868\u793a\"\"\"\n\n    def __init__(self, projects: list[ProjectRead], on_project_select: Callable):\n        super().__init__()\n        self.projects = projects\n        self.on_project_select = on_project_select\n\n        self._build_project_tree()\n\n    def _build_project_tree(self) -&gt; None:\n        \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u968e\u5c64\u30c4\u30ea\u30fc\u3092\u69cb\u7bc9\"\"\"\n        tree_items = []\n\n        # \u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5148\u982d\u306b\u8868\u793a\n        active_projects = [p for p in self.projects if p.status == ProjectStatus.ACTIVE]\n        waiting_projects = [p for p in self.projects if p.status == ProjectStatus.WAITING]\n        someday_projects = [p for p in self.projects if p.status == ProjectStatus.SOMEDAY_MAYBE]\n\n        if active_projects:\n            tree_items.append(self._create_project_section(\"\ud83d\ude80 \u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\", active_projects))\n\n        if waiting_projects:\n            tree_items.append(self._create_project_section(\"\u23f3 \u5f85\u6a5f\u4e2d\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\", waiting_projects))\n\n        if someday_projects:\n            tree_items.append(self._create_project_section(\"\ud83e\udd14 \u3044\u3064\u304b/\u591a\u5206\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\", someday_projects))\n\n        self.content = ft.Column(tree_items, spacing=16)\n\n    def _create_project_section(self, title: str, projects: list[ProjectRead]) -&gt; ft.ExpansionTile:\n        \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\"\"\"\n        project_tiles = []\n\n        for project in projects:\n            # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u9032\u6357\u72b6\u6cc1\u3092\u8a08\u7b97\n            progress = self._calculate_project_progress(project)\n\n            tile = ft.ListTile(\n                leading=ft.Icon(ft.icons.FOLDER, color=ft.colors.BLUE_400),\n                title=ft.Text(project.title, weight=ft.FontWeight.BOLD),\n                subtitle=ft.Text(f\"\u9032\u6357: {progress:.0%} | \u30bf\u30b9\u30af\u6570: {len(project.tasks)}\"),\n                trailing=ft.LinearProgressBar(value=progress, width=100),\n                on_click=lambda e, p=project: self.on_project_select(p)\n            )\n            project_tiles.append(tile)\n\n        return ft.ExpansionTile(\n            title=ft.Text(title, weight=ft.FontWeight.BOLD),\n            controls=project_tiles,\n            initially_expanded=title.startswith(\"\ud83d\ude80\")  # \u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u521d\u671f\u5c55\u958b\n        )\n</code></pre>"},{"location":"dev/views_guide/#_4","title":"\u95a2\u6570\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1","text":"<p>\u95a2\u6570\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u5358\u7d14\u306a\u6a5f\u80fd\u3084\u518d\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#_5","title":"\u7279\u5fb4","text":"<ul> <li>\u30b7\u30f3\u30d7\u30eb: \u7406\u89e3\u3057\u3084\u3059\u304f\u3001\u66f8\u304d\u3084\u3059\u3044</li> <li>\u8efd\u91cf: \u72b6\u614b\u7ba1\u7406\u304c\u4e0d\u8981\u306a\u5834\u5408\u306b\u6700\u9069</li> <li>\u518d\u5229\u7528\u6027: \u7d14\u7c8b\u95a2\u6570\u3068\u3057\u3066\u8a2d\u8a08\u3057\u3084\u3059\u3044</li> </ul>"},{"location":"dev/views_guide/#_6","title":"\u5b9f\u88c5\u4f8b","text":"<pre><code>import flet as ft\nfrom typing import Callable\n\ndef create_welcome_message() -&gt; ft.Container:\n    \"\"\"\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u6210.\n\n    Returns:\n        \u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u306eContainer\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    \"\"\"\n    return ft.Container(\n        content=ft.Text(\n            \"\u30bf\u30b9\u30af\u7ba1\u7406\u3067\u3082\u3063\u3068\u52b9\u7387\u7684\u306b\uff01\",\n            size=18,\n            color=ft.colors.GREY_700,\n        ),\n        alignment=ft.alignment.center,\n    )\n\ndef create_action_button(\n    text: str,\n    icon: str,\n    on_click: Callable,\n    width: int = 200\n) -&gt; ft.ElevatedButton:\n    \"\"\"\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u3092\u4f5c\u6210.\n\n    Args:\n        text: \u30dc\u30bf\u30f3\u306e\u30c6\u30ad\u30b9\u30c8\n        icon: \u30a2\u30a4\u30b3\u30f3\u540d\n        on_click: \u30af\u30ea\u30c3\u30af\u6642\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\n        width: \u30dc\u30bf\u30f3\u306e\u5e45\n\n    Returns:\n        \u8a2d\u5b9a\u3055\u308c\u305fElevatedButton\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    \"\"\"\n    return ft.ElevatedButton(\n        text=text,\n        icon=icon,\n        width=width,\n        height=50,\n        style=ft.ButtonStyle(\n            bgcolor=ft.colors.BLUE_600,\n            color=ft.colors.WHITE,\n        ),\n        on_click=on_click,\n    )\n</code></pre>"},{"location":"dev/views_guide/#_7","title":"\u4f7f\u7528\u5834\u9762","text":"<ul> <li>\u5358\u7d14\u306a UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8</li> <li>\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u8868\u793a\u8981\u7d20</li> <li>\u8907\u6570\u306e\u753b\u9762\u3067\u518d\u5229\u7528\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8</li> <li>\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570</li> </ul>"},{"location":"dev/views_guide/#_8","title":"\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1","text":"<p>\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u8907\u96d1\u306a\u72b6\u614b\u7ba1\u7406\u3084\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u7ba1\u7406\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#_9","title":"\u7279\u5fb4","text":"<ul> <li>\u72b6\u614b\u7ba1\u7406: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3067\u72b6\u614b\u3092\u4fdd\u6301\u3067\u304d\u308b</li> <li>\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb: \u521d\u671f\u5316\u3001\u66f4\u65b0\u3001\u7834\u68c4\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3067\u304d\u308b</li> <li>\u30ab\u30d7\u30bb\u30eb\u5316: \u95a2\u9023\u3059\u308b\u6a5f\u80fd\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3067\u304d\u308b</li> </ul>"},{"location":"dev/views_guide/#_10","title":"\u5b9f\u88c5\u4f8b","text":"<pre><code>import flet as ft\nfrom typing import Callable, Optional\nfrom models.task import Task\n\nclass TaskCreateForm(ft.Column):\n    \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u30d5\u30a9\u30fc\u30e0\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\n    \u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u30d5\u30a9\u30fc\u30e0UI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n    \"\"\"\n\n    def __init__(\n        self,\n        page: ft.Page,\n        on_task_created: Optional[Callable[[Task], None]] = None\n    ) -&gt; None:\n        \"\"\"TaskCreateForm\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\n        Args:\n            page: Flet\u306e\u30da\u30fc\u30b8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n            on_task_created: \u30bf\u30b9\u30af\u4f5c\u6210\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n        \"\"\"\n        super().__init__()\n        self._page = page\n        self.on_task_created = on_task_created\n\n        # \u30d5\u30a9\u30fc\u30e0\u8981\u7d20\u306e\u521d\u671f\u5316\n        self._initialize_components()\n\n        # \u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u69cb\u7bc9\n        self._build_layout()\n\n    def _initialize_components(self) -&gt; None:\n        \"\"\"\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\"\"\"\n        self.title_field = ft.TextField(\n            label=\"\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\",\n            hint_text=\"\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\",\n            max_length=100,\n            width=400,\n        )\n\n        self.description_field = ft.TextField(\n            label=\"\u8aac\u660e\uff08\u4efb\u610f\uff09\",\n            multiline=True,\n            max_lines=3,\n            width=400,\n        )\n\n        self.create_button = ft.ElevatedButton(\n            text=\"\u30bf\u30b9\u30af\u3092\u4f5c\u6210\",\n            icon=ft.icons.ADD,\n            on_click=self._on_create_clicked,\n        )\n\n    def _build_layout(self) -&gt; None:\n        \"\"\"\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u69cb\u7bc9\"\"\"\n        self.controls = [\n            ft.Text(\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\", style=ft.TextThemeStyle.HEADLINE_SMALL),\n            self.title_field,\n            self.description_field,\n            self.create_button,\n        ]\n\n    def _on_create_clicked(self, _: ft.ControlEvent) -&gt; None:\n        \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u6642\u306e\u51e6\u7406\"\"\"\n        # \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n        if not self.title_field.value:\n            self._show_error(\"\u30bf\u30a4\u30c8\u30eb\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n            return\n\n        # \u30bf\u30b9\u30af\u4f5c\u6210\u30ed\u30b8\u30c3\u30af\n        # ... \u5b9f\u88c5 ...\n\n        # \u30d5\u30a9\u30fc\u30e0\u30af\u30ea\u30a2\n        self._clear_form()\n\n    def _clear_form(self) -&gt; None:\n        \"\"\"\u30d5\u30a9\u30fc\u30e0\u3092\u30af\u30ea\u30a2\"\"\"\n        self.title_field.value = \"\"\n        self.description_field.value = \"\"\n        self.update()\n\n    def _show_error(self, message: str) -&gt; None:\n        \"\"\"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\"\"\"\n        self._page.open(ft.SnackBar(content=ft.Text(message)))\n</code></pre>"},{"location":"dev/views_guide/#_11","title":"\u4f7f\u7528\u5834\u9762","text":"<ul> <li>\u8907\u96d1\u306a\u72b6\u614b\u7ba1\u7406\u304c\u5fc5\u8981\u306a\u5834\u5408</li> <li>\u30d5\u30a9\u30fc\u30e0\u3084\u30ea\u30b9\u30c8\u306a\u3069\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8</li> <li>\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u7ba1\u7406\u304c\u91cd\u8981\u306a\u5834\u5408</li> <li>\u8907\u6570\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u72b6\u614b\u3092\u5171\u6709\u3059\u308b\u5834\u5408</li> </ul>"},{"location":"dev/views_guide/#_12","title":"\u3069\u3061\u3089\u3092\u9078\u3076\u3079\u304d\u304b","text":""},{"location":"dev/views_guide/#_13","title":"\u5224\u65ad\u57fa\u6e96","text":"\u9805\u76ee \u95a2\u6570\u30d9\u30fc\u30b9 \u30af\u30e9\u30b9\u30d9\u30fc\u30b9 \u72b6\u614b\u7ba1\u7406 \u4e0d\u8981 \u5fc5\u8981 \u8907\u96d1\u3055 \u30b7\u30f3\u30d7\u30eb \u8907\u96d1 \u518d\u5229\u7528\u6027 \u9ad8\u3044 \u4e2d\u7a0b\u5ea6 \u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3 \u5c11\u306a\u3044 \u591a\u3044 \u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb \u5358\u7d14 \u8907\u96d1"},{"location":"dev/views_guide/#_14","title":"\u5177\u4f53\u7684\u306a\u9078\u629e\u6307\u91dd","text":""},{"location":"dev/views_guide/#_15","title":"\u95a2\u6570\u30d9\u30fc\u30b9\u3092\u9078\u3076\u5834\u5408","text":"<ul> <li>\u5358\u7d14\u306a\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8</li> <li>\u72b6\u614b\u3092\u6301\u305f\u306a\u3044 UI \u8981\u7d20</li> <li>\u7d14\u7c8b\u306a\u8868\u793a\u6a5f\u80fd\u306e\u307f</li> <li>\u8907\u6570\u753b\u9762\u3067\u518d\u5229\u7528\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8</li> </ul> <pre><code># \u2705 \u95a2\u6570\u30d9\u30fc\u30b9\u304c\u9069\u3057\u3066\u3044\u308b\u4f8b\ndef create_loading_spinner() -&gt; ft.ProgressRing:\n    return ft.ProgressRing()\n\ndef create_divider() -&gt; ft.Divider:\n    return ft.Divider(height=1, color=ft.colors.GREY_300)\n</code></pre>"},{"location":"dev/views_guide/#_16","title":"\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u3092\u9078\u3076\u5834\u5408","text":"<ul> <li>\u30d5\u30a9\u30fc\u30e0\u5165\u529b</li> <li>\u30ea\u30b9\u30c8\u8868\u793a\uff08\u52d5\u7684\u306a\u8ffd\u52a0\u30fb\u524a\u9664\uff09</li> <li>\u72b6\u614b\u306e\u5909\u66f4\u304c\u5fc5\u8981</li> <li>\u8907\u6570\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u5fc5\u8981</li> </ul> <pre><code># \u2705 \u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u304c\u9069\u3057\u3066\u3044\u308b\u4f8b\nclass TaskList(ft.Column):\n    \"\"\"\u8907\u6570\u306e\u30bf\u30b9\u30af\u3092\u7ba1\u7406\u3059\u308b\u30ea\u30b9\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n    pass\n\nclass LoginForm(ft.Column):\n    \"\"\"\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n    pass\n</code></pre>"},{"location":"dev/views_guide/#service-container","title":"\u4f9d\u5b58\u6027\u6ce8\u5165\u3068 Service Container \u4f7f\u7528","text":"<p>Views \u5c64\u3067 Application Service \u3092\u4f7f\u7528\u3059\u308b\u969b\u306f\u3001Service Container \u30d1\u30bf\u30fc\u30f3\u3092\u6d3b\u7528\u3057\u3066\u4f9d\u5b58\u6027\u6ce8\u5165\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30bf\u30d3\u30ea\u30c6\u30a3\u3068\u4fdd\u5b88\u6027\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#1-service-container","title":"1. Service Container \u306e\u57fa\u672c\u7684\u306a\u4f7f\u7528\u65b9\u6cd5","text":"<pre><code># views/task/view.py - Service Container\u4f7f\u7528\u4f8b\nclass TaskView(BaseView):\n    \"\"\"Service Container\u3092\u4f7f\u7528\u3057\u305f\u30bf\u30b9\u30af\u30d3\u30e5\u30fc\"\"\"\n\n    def __init__(self, page: ft.Page) -&gt; None:\n        super().__init__(page)\n\n        # BaseView\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bcontainer\u304b\u3089\u5fc5\u8981\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u53d6\u5f97\n        self._task_service = self.container.get_task_application_service()\n        self._project_service = self.container.get_project_application_service()\n        self._tag_service = self.container.get_tag_application_service()\n</code></pre>"},{"location":"dev/views_guide/#2","title":"2. \u4f9d\u5b58\u6027\u306e\u660e\u793a\u7684\u306a\u7ba1\u7406","text":"<pre><code># views/shared/service_aware_view.py - \u30b5\u30fc\u30d3\u30b9\u5bfe\u5fdc\u30d9\u30fc\u30b9\u30d3\u30e5\u30fc\nclass ServiceAwareView(BaseView):\n    \"\"\"Application Service\u306b\u4f9d\u5b58\u3059\u308b\u30d3\u30e5\u30fc\u306e\u57fa\u5e95\u30af\u30e9\u30b9\"\"\"\n\n    def __init__(\n        self,\n        page: ft.Page,\n        container: ApplicationServiceContainer | None = None\n    ) -&gt; None:\n        # BaseView\u3092\u521d\u671f\u5316\uff08container\u306f\u81ea\u52d5\u7684\u306b\u8a2d\u5b9a\u3055\u308c\u308b\uff09\n        super().__init__(page)\n\n        # \u30c6\u30b9\u30c8\u6642\u306b\u306f\u30e2\u30c3\u30af\u30b3\u30f3\u30c6\u30ca\u3067\u4e0a\u66f8\u304d\u53ef\u80fd\n        if container is not None:\n            self.container = container\n\n        # \u5fc5\u8981\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u521d\u671f\u5316\u6642\u306b\u53d6\u5f97\n        self._initialize_services()\n\n    def _initialize_services(self) -&gt; None:\n        \"\"\"\u5fc5\u8981\u306aApplication Service\u3092\u521d\u671f\u5316\"\"\"\n        self._task_service = self.container.get_task_application_service()\n        # \u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3082\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u53d6\u5f97\n</code></pre>"},{"location":"dev/views_guide/#3_1","title":"3. \u968e\u5c64\u7684\u306a\u4f9d\u5b58\u6027\u7ba1\u7406","text":"<pre><code># views/task/components/task_dialog.py - \u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3078\u306e\u4f9d\u5b58\u6027\u4f1d\u64ad\nclass TaskDialog(ft.AlertDialog):\n    \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u30fb\u7de8\u96c6\u30c0\u30a4\u30a2\u30ed\u30b0\"\"\"\n\n    def __init__(\n        self,\n        page: ft.Page,\n        task_service: TaskApplicationService,  # \u89aa\u304b\u3089\u6ce8\u5165\n        on_task_created: Callable[[TaskRead], None] | None = None\n    ) -&gt; None:\n        super().__init__()\n        self._page = page\n        self._task_service = task_service  # \u6ce8\u5165\u3055\u308c\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u7528\n        self.on_task_created = on_task_created\n\n        self._build_dialog()\n\n    def _on_save_clicked(self, _: ft.ControlEvent) -&gt; None:\n        \"\"\"\u4fdd\u5b58\u51e6\u7406\uff08\u6ce8\u5165\u3055\u308c\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u7528\uff09\"\"\"\n        try:\n            command = CreateTaskCommand(\n                title=self.title_field.value,\n                description=self.description_field.value\n            )\n\n            # \u6ce8\u5165\u3055\u308c\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u7528\n            new_task = self._task_service.create_task(command)\n\n            if self.on_task_created:\n                self.on_task_created(new_task)\n\n            self._close_dialog()\n\n        except Exception as e:\n            self._show_error(f\"\u30bf\u30b9\u30af\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n\n# \u89aa\u30d3\u30e5\u30fc\u3067\u306e\u4f7f\u7528\u4f8b\nclass TaskView(ServiceAwareView):\n    def _initialize_components(self) -&gt; None:\n        # \u30b5\u30fc\u30d3\u30b9\u3092\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6ce8\u5165\n        self.task_dialog = TaskDialog(\n            page=self._page,\n            task_service=self._task_service,  # \u4f9d\u5b58\u6027\u3092\u6ce8\u5165\n            on_task_created=self._on_task_created\n        )\n</code></pre>"},{"location":"dev/views_guide/#4","title":"4. \u30c6\u30b9\u30c8\u7528\u306e\u30e2\u30c3\u30af\u6ce8\u5165","text":"<pre><code># tests/views/test_task_view.py - \u30c6\u30b9\u30c8\u7528\u30e2\u30c3\u30af\u6ce8\u5165\u4f8b\nclass MockApplicationServiceContainer:\n    \"\"\"\u30c6\u30b9\u30c8\u7528\u306e\u30e2\u30c3\u30af\u30b3\u30f3\u30c6\u30ca\"\"\"\n\n    def __init__(self):\n        self.mock_task_service = Mock(spec=TaskApplicationService)\n\n    def get_task_application_service(self) -&gt; TaskApplicationService:\n        return self.mock_task_service\n\ndef test_task_creation():\n    \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u306e\u30c6\u30b9\u30c8\"\"\"\n    # \u30e2\u30c3\u30af\u30b3\u30f3\u30c6\u30ca\u3092\u6e96\u5099\n    mock_container = MockApplicationServiceContainer()\n    mock_container.mock_task_service.create_task.return_value = TaskRead(\n        id=\"test-id\",\n        title=\"Test Task\",\n        status=TaskStatus.INBOX\n    )\n\n    # \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30d3\u30e5\u30fc\u306b\u30e2\u30c3\u30af\u3092\u6ce8\u5165\n    page = Mock(spec=ft.Page)\n    view = TaskView(page=page, container=mock_container)\n\n    # \u30c6\u30b9\u30c8\u5b9f\u884c\n    command = CreateTaskCommand(title=\"Test Task\")\n    view._on_task_created(command)\n\n    # \u30e2\u30c3\u30af\u304c\u6b63\u3057\u304f\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\n    mock_container.mock_task_service.create_task.assert_called_once_with(command)\n</code></pre>"},{"location":"dev/views_guide/#_17","title":"\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f4\u65b0\u3068\u30a4\u30d9\u30f3\u30c8\u51e6\u7406","text":"<p>GTD \u30bf\u30b9\u30af\u7ba1\u7406\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u72b6\u614b\u5909\u66f4\u3084\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u9032\u6357\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067 UI \u306b\u53cd\u6620\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"dev/views_guide/#1-observer","title":"1. Observer \u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u72b6\u614b\u540c\u671f","text":"<pre><code># views/shared/observable_view.py - \u89b3\u5bdf\u53ef\u80fd\u306a\u30d3\u30e5\u30fc\nclass ObservableView(ServiceAwareView):\n    \"\"\"\u72b6\u614b\u5909\u66f4\u3092\u89b3\u5bdf\u3059\u308b\u30d3\u30e5\u30fc\u306e\u57fa\u5e95\u30af\u30e9\u30b9\"\"\"\n\n    def __init__(self, page: ft.Page, container: ApplicationServiceContainer | None = None):\n        super().__init__(page, container)\n        self._observers: list[Callable] = []\n\n    def add_observer(self, callback: Callable) -&gt; None:\n        \"\"\"\u72b6\u614b\u5909\u66f4\u306e\u89b3\u5bdf\u8005\u3092\u8ffd\u52a0\"\"\"\n        self._observers.append(callback)\n\n    def _notify_observers(self, event_type: str, data: dict) -&gt; None:\n        \"\"\"\u89b3\u5bdf\u8005\u306b\u5909\u66f4\u3092\u901a\u77e5\"\"\"\n        for callback in self._observers:\n            try:\n                callback(event_type, data)\n            except Exception as e:\n                logger.error(f\"Observer notification failed: {e}\")\n\n# \u5b9f\u88c5\u4f8b\nclass TaskView(ObservableView):\n    def _on_task_status_changed(self, task_id: str, new_status: TaskStatus) -&gt; None:\n        \"\"\"\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u6642\u306e\u51e6\u7406\"\"\"\n        try:\n            # Application Service\u7d4c\u7531\u3067\u66f4\u65b0\n            command = UpdateTaskStatusCommand(task_id=task_id, status=new_status)\n            updated_task = self._task_service.update_task_status(command)\n\n            # UI\u66f4\u65b0\n            self._update_task_in_board(updated_task)\n\n            # \u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5909\u66f4\u3092\u901a\u77e5\n            self._notify_observers(\"task_status_changed\", {\n                \"task_id\": task_id,\n                \"old_status\": self.tasks_board.get_task_status(task_id),\n                \"new_status\": new_status\n            })\n\n        except Exception as e:\n            self._show_error(f\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n            # UI\u72b6\u614b\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n            self._revert_task_status(task_id)\n</code></pre>"},{"location":"dev/views_guide/#2-ui","title":"2. \u697d\u89b3\u7684 UI \u66f4\u65b0\u30d1\u30bf\u30fc\u30f3","text":"<pre><code># views/task/components/tasks_board.py - \u697d\u89b3\u7684\u66f4\u65b0\nclass TasksBoard(ft.Container):\n    \"\"\"\u697d\u89b3\u7684\u66f4\u65b0\u3092\u5b9f\u88c5\u3057\u305f\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\"\"\"\n\n    def move_task_optimistic(\n        self,\n        task_id: str,\n        target_status: TaskStatus,\n        revert_callback: Callable[[], None]\n    ) -&gt; None:\n        \"\"\"\u697d\u89b3\u7684\u306b\u30bf\u30b9\u30af\u3092\u79fb\u52d5\uff08\u5373\u5ea7\u306bUI\u66f4\u65b0\uff09\"\"\"\n\n        # 1. \u5373\u5ea7\u306bUI\u3092\u66f4\u65b0\uff08\u697d\u89b3\u7684\u66f4\u65b0\uff09\n        task_card = self._find_task_card(task_id)\n        old_status = task_card.task.status\n\n        # UI\u304b\u3089\u30bf\u30b9\u30af\u3092\u79fb\u52d5\n        self._move_task_card_immediately(task_card, target_status)\n\n        # 2. \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u66f4\u65b0\u3092\u975e\u540c\u671f\u3067\u5b9f\u884c\n        async def update_backend():\n            try:\n                command = UpdateTaskStatusCommand(task_id=task_id, status=target_status)\n                await self._task_service.update_task_status_async(command)\n\n                # \u6210\u529f\u6642\u306e\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\n                self._show_success_feedback(f\"\u30bf\u30b9\u30af\u3092 {target_status.value} \u306b\u79fb\u52d5\u3057\u307e\u3057\u305f\")\n\n            except Exception as e:\n                # \u5931\u6557\u6642\u306fUI\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n                logger.error(f\"Task status update failed: {e}\")\n                self._move_task_card_immediately(task_card, old_status)\n                revert_callback()\n                self._show_error(f\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n\n        # \u975e\u540c\u671f\u5b9f\u884c\n        asyncio.create_task(update_backend())\n</code></pre>"},{"location":"dev/views_guide/#3_2","title":"3. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u9032\u6357\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u53cd\u6620","text":"<pre><code># views/task/components/project_progress.py - \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u9032\u6357\u30d0\u30fc\nclass ProjectProgressBar(ft.Container):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u9032\u6357\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8868\u793a\"\"\"\n\n    def __init__(self, project: ProjectRead):\n        super().__init__()\n        self.project = project\n        self._build_progress_bar()\n\n        # \u30bf\u30b9\u30af\u5909\u66f4\u306e\u76e3\u8996\n        self._setup_task_monitoring()\n\n    def _setup_task_monitoring(self) -&gt; None:\n        \"\"\"\u30bf\u30b9\u30af\u5909\u66f4\u306e\u76e3\u8996\u8a2d\u5b9a\"\"\"\n        # \u30a4\u30d9\u30f3\u30c8\u30d0\u30b9\u307e\u305f\u306fObserver\u30d1\u30bf\u30fc\u30f3\u3067\u30bf\u30b9\u30af\u5909\u66f4\u3092\u76e3\u8996\n        task_event_bus.subscribe(\"task_status_changed\", self._on_task_changed)\n\n    def _on_task_changed(self, event_data: dict) -&gt; None:\n        \"\"\"\u30bf\u30b9\u30af\u5909\u66f4\u6642\u306e\u9032\u6357\u66f4\u65b0\"\"\"\n        task_id = event_data.get(\"task_id\")\n\n        # \u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30b9\u30af\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\n        if task_id in [task.id for task in self.project.tasks]:\n            # \u9032\u6357\u3092\u518d\u8a08\u7b97\u3057\u3066UI\u66f4\u65b0\n            self._update_progress()\n\n    def _update_progress(self) -&gt; None:\n        \"\"\"\u9032\u6357\u30d0\u30fc\u306e\u66f4\u65b0\"\"\"\n        completed_tasks = len([t for t in self.project.tasks if t.status == TaskStatus.DONE])\n        total_tasks = len(self.project.tasks)\n\n        if total_tasks &gt; 0:\n            progress = completed_tasks / total_tasks\n            self.progress_bar.value = progress\n            self.progress_text.value = f\"{completed_tasks}/{total_tasks} \u5b8c\u4e86 ({progress:.0%})\"\n        else:\n            self.progress_bar.value = 0\n            self.progress_text.value = \"\u30bf\u30b9\u30af\u306a\u3057\"\n\n        self.update()\n</code></pre>"},{"location":"dev/views_guide/#_18","title":"\u5b9f\u88c5\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":""},{"location":"dev/views_guide/#_19","title":"\u95a2\u6570\u30d9\u30fc\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"<pre><code>\"\"\"\u6a5f\u80fd\u540d\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb.\"\"\"\n\nimport flet as ft\nfrom typing import Callable, Optional\n\ndef create_component_name(\n    param1: str,\n    param2: Optional[str] = None,\n    on_click: Optional[Callable] = None\n) -&gt; ft.Control:\n    \"\"\"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8aac\u660e.\n\n    Args:\n        param1: \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aac\u660e\n        param2: \u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aac\u660e\n        on_click: \u30af\u30ea\u30c3\u30af\u6642\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\n\n    Returns:\n        \u4f5c\u6210\u3055\u308c\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    \"\"\"\n    return ft.Container(\n        content=ft.Text(param1),\n        on_click=on_click,\n    )\n\ndef create_another_component() -&gt; ft.Control:\n    \"\"\"\u5225\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8aac\u660e.\n\n    Returns:\n        \u4f5c\u6210\u3055\u308c\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    \"\"\"\n    # \u5b9f\u88c5\n    pass\n</code></pre>"},{"location":"dev/views_guide/#_20","title":"\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"<pre><code>\"\"\"\u6a5f\u80fd\u540d\u306e\u30d3\u30e5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb.\"\"\"\n\nfrom __future__ import annotations\nfrom typing import TYPE_CHECKING, Callable, Optional\n\nimport flet as ft\n\nif TYPE_CHECKING:\n    from models.example import ExampleModel\n\nclass ComponentName(ft.Column):  # \u307e\u305f\u306fft.Container, ft.Row\u7b49\n    \"\"\"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8aac\u660e\n\n    \u8a73\u7d30\u306a\u8aac\u660e\u3092\u3053\u3053\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n    \"\"\"\n\n    def __init__(\n        self,\n        page: ft.Page,\n        param1: str,\n        on_event: Optional[Callable] = None\n    ) -&gt; None:\n        \"\"\"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\n        Args:\n            page: Flet\u306e\u30da\u30fc\u30b8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n            param1: \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aac\u660e\n            on_event: \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\n        \"\"\"\n        super().__init__()\n        self._page = page\n        self.param1 = param1\n        self.on_event = on_event\n\n        # \u8a2d\u5b9a\n        self.spacing = 10\n        self.expand = True\n\n        # \u521d\u671f\u5316\n        self._initialize_components()\n        self._build_layout()\n\n    def _initialize_components(self) -&gt; None:\n        \"\"\"\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\"\"\"\n        self.some_field = ft.TextField(\n            label=\"\u30e9\u30d9\u30eb\",\n            hint_text=\"\u30d2\u30f3\u30c8\",\n        )\n\n        self.some_button = ft.ElevatedButton(\n            text=\"\u30dc\u30bf\u30f3\",\n            on_click=self._on_button_clicked,\n        )\n\n    def _build_layout(self) -&gt; None:\n        \"\"\"\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u69cb\u7bc9\"\"\"\n        self.controls = [\n            ft.Text(\"\u30bf\u30a4\u30c8\u30eb\", style=ft.TextThemeStyle.HEADLINE_SMALL),\n            self.some_field,\n            self.some_button,\n        ]\n\n    def _on_button_clicked(self, _: ft.ControlEvent) -&gt; None:\n        \"\"\"\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u6642\u306e\u51e6\u7406\"\"\"\n        # \u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3092\u5b9f\u88c5\n        if self.on_event:\n            self.on_event()\n\n    def update_data(self, new_data: str) -&gt; None:\n        \"\"\"\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u516c\u958b\u30e1\u30bd\u30c3\u30c9\n\n        Args:\n            new_data: \u65b0\u3057\u3044\u30c7\u30fc\u30bf\n        \"\"\"\n        self.some_field.value = new_data\n        self.update()\n\ndef create_component_view(page: ft.Page) -&gt; ft.Container:\n    \"\"\"\u30d3\u30e5\u30fc\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\n\n    Args:\n        page: Flet\u306e\u30da\u30fc\u30b8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n    Returns:\n        \u4f5c\u6210\u3055\u308c\u305f\u30d3\u30e5\u30fc\u306e\u30b3\u30f3\u30c6\u30ca\n    \"\"\"\n    return ft.Container(\n        content=ComponentName(page, \"example\"),\n        expand=True,\n        padding=20,\n    )\n</code></pre>"},{"location":"dev/views_guide/#_21","title":"\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"dev/views_guide/#1","title":"1. \u547d\u540d\u898f\u5247","text":""},{"location":"dev/views_guide/#_22","title":"\u30d5\u30a1\u30a4\u30eb\u540d","text":"<ul> <li><code>view.py</code>: \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\u30d5\u30a1\u30a4\u30eb</li> <li><code>components.py</code>: \u500b\u5225\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb</li> <li><code>snake_case</code>\u3067\u547d\u540d</li> </ul>"},{"location":"dev/views_guide/#_23","title":"\u30af\u30e9\u30b9\u540d","text":"<ul> <li><code>PascalCase</code>\u3067\u547d\u540d</li> <li>\u660e\u78ba\u3067\u8aac\u660e\u7684\u306a\u540d\u524d\u3092\u4f7f\u7528</li> <li>\u4f8b: <code>TaskCreateForm</code>, <code>UserProfileCard</code></li> </ul>"},{"location":"dev/views_guide/#_24","title":"\u95a2\u6570\u540d","text":"<ul> <li><code>snake_case</code>\u3067\u547d\u540d</li> <li><code>create_</code> \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u308b</li> <li>\u4f8b: <code>create_task_button()</code>, <code>create_user_list()</code></li> </ul>"},{"location":"dev/views_guide/#2_1","title":"2. \u30b3\u30fc\u30c9\u306e\u69cb\u9020\u5316","text":""},{"location":"dev/views_guide/#import","title":"import \u9806\u5e8f","text":"<pre><code>\"\"\"\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8aac\u660e.\"\"\"\n\nfrom __future__ import annotations\nfrom typing import TYPE_CHECKING, Callable, Optional\n\nimport flet as ft\n\nfrom logic.task import TaskService\nfrom models.task import Task\n\nif TYPE_CHECKING:\n    from models.user import User\n</code></pre>"},{"location":"dev/views_guide/#_25","title":"\u30af\u30e9\u30b9\u306e\u69cb\u9020","text":"<pre><code>class ExampleComponent(ft.Column):\n    \"\"\"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8aac\u660e\"\"\"\n\n    def __init__(self, ...):\n        \"\"\"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\"\"\"\n        # 1. super().__init__()\n        # 2. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u8a2d\u5b9a\n        # 3. \u521d\u671f\u5316\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\n\n    def _initialize_components(self) -&gt; None:\n        \"\"\"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\"\"\"\n\n    def _build_layout(self) -&gt; None:\n        \"\"\"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8: \u30ec\u30a4\u30a2\u30a6\u30c8\u69cb\u7bc9\"\"\"\n\n    def _on_event_happened(self, _: ft.ControlEvent) -&gt; None:\n        \"\"\"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8: \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n\n    def update_something(self, data: str) -&gt; None:\n        \"\"\"\u30d1\u30d6\u30ea\u30c3\u30af: \u5916\u90e8\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u64cd\u4f5c\"\"\"\n</code></pre>"},{"location":"dev/views_guide/#3_3","title":"3. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0","text":"<pre><code>def _on_save_clicked(self, _: ft.ControlEvent) -&gt; None:\n    \"\"\"\u4fdd\u5b58\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u6642\u306e\u51e6\u7406\"\"\"\n    try:\n        # \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n        if not self._validate_input():\n            return\n\n        # \u5b9f\u969b\u306e\u51e6\u7406\n        result = self.service.save_data(self.input_field.value)\n\n        # \u6210\u529f\u6642\u306e\u51e6\u7406\n        self._show_success_message()\n\n    except ValueError as e:\n        self._show_error(f\"\u5165\u529b\u30a8\u30e9\u30fc: {e}\")\n    except Exception as e:\n        self._show_error(f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\")\n\ndef _validate_input(self) -&gt; bool:\n    \"\"\"\u5165\u529b\u5024\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\"\"\"\n    if not self.input_field.value:\n        self._show_error(\"\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n        return False\n    return True\n\ndef _show_error(self, message: str) -&gt; None:\n    \"\"\"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\"\"\"\n    self._page.open(ft.SnackBar(\n        content=ft.Text(message, color=ft.colors.WHITE),\n        bgcolor=ft.colors.RED_400,\n    ))\n\ndef _show_success_message(self) -&gt; None:\n    \"\"\"\u6210\u529f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\"\"\"\n    self._page.open(ft.SnackBar(\n        content=ft.Text(\"\u4fdd\u5b58\u3057\u307e\u3057\u305f\", color=ft.colors.WHITE),\n        bgcolor=ft.colors.GREEN_400,\n    ))\n</code></pre>"},{"location":"dev/views_guide/#4_1","title":"4. \u72b6\u614b\u7ba1\u7406","text":"<pre><code>class TaskList(ft.Column):\n    \"\"\"\u30bf\u30b9\u30af\u30ea\u30b9\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n\n    def __init__(self, page: ft.Page) -&gt; None:\n        super().__init__()\n        self._page = page\n\n        # \u72b6\u614b\u3092\u660e\u78ba\u306b\u5b9a\u7fa9\n        self.tasks: list[Task] = []\n        self.current_filter: str = \"all\"\n        self.is_loading: bool = False\n\n        self._initialize_components()\n\n    def load_tasks(self) -&gt; None:\n        \"\"\"\u30bf\u30b9\u30af\u3092\u8aad\u307f\u8fbc\u307f\"\"\"\n        self.is_loading = True\n        self._update_loading_state()\n\n        try:\n            self.tasks = self.service.get_all_tasks()\n            self._update_task_list()\n        finally:\n            self.is_loading = False\n            self._update_loading_state()\n\n    def _update_loading_state(self) -&gt; None:\n        \"\"\"\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u72b6\u614b\u306e\u8868\u793a\u3092\u66f4\u65b0\"\"\"\n        self.loading_indicator.visible = self.is_loading\n        self.task_container.visible = not self.is_loading\n        self.update()\n</code></pre>"},{"location":"dev/views_guide/#5","title":"5. \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u51e6\u7406","text":"<pre><code>class ParentComponent(ft.Column):\n    \"\"\"\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n\n    def __init__(self, page: ft.Page) -&gt; None:\n        super().__init__()\n        self._page = page\n\n        # \u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6e21\u3059\n        self.child_form = ChildForm(\n            page=page,\n            on_data_changed=self._on_child_data_changed,\n        )\n\n    def _on_child_data_changed(self, new_data: str) -&gt; None:\n        \"\"\"\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u306e\u30c7\u30fc\u30bf\u5909\u66f4\u901a\u77e5\"\"\"\n        # \u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u306e\u51e6\u7406\n        self._update_display(new_data)\n\nclass ChildForm(ft.Column):\n    \"\"\"\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n\n    def __init__(\n        self,\n        page: ft.Page,\n        on_data_changed: Optional[Callable[[str], None]] = None\n    ) -&gt; None:\n        super().__init__()\n        self._page = page\n        self.on_data_changed = on_data_changed\n\n    def _on_submit(self, _: ft.ControlEvent) -&gt; None:\n        \"\"\"\u30c7\u30fc\u30bf\u9001\u4fe1\u6642\u306e\u51e6\u7406\"\"\"\n        # \u30c7\u30fc\u30bf\u51e6\u7406\n        processed_data = self._process_data()\n\n        # \u89aa\u306b\u901a\u77e5\n        if self.on_data_changed:\n            self.on_data_changed(processed_data)\n</code></pre>"},{"location":"dev/views_guide/#_26","title":"\u3088\u304f\u3042\u308b\u9593\u9055\u3044\u3068\u305d\u306e\u89e3\u6c7a\u7b56","text":""},{"location":"dev/views_guide/#1_1","title":"1. \u72b6\u614b\u7ba1\u7406\u306e\u554f\u984c","text":""},{"location":"dev/views_guide/#_27","title":"\u274c \u9593\u9055\u3063\u305f\u4f8b","text":"<pre><code># \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f7f\u7528\uff08\u907f\u3051\u308b\u3079\u304d\uff09\ncurrent_user = None\n\ndef create_user_profile():\n    global current_user\n    # \u554f\u984c: \u30b0\u30ed\u30fc\u30d0\u30eb\u72b6\u614b\u306f\u7ba1\u7406\u304c\u56f0\u96e3\n</code></pre>"},{"location":"dev/views_guide/#_28","title":"\u2705 \u6b63\u3057\u3044\u4f8b","text":"<pre><code>class UserProfile(ft.Column):\n    def __init__(self, page: ft.Page, user: User) -&gt; None:\n        super().__init__()\n        self._page = page\n        self.user = user  # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068\u3057\u3066\u7ba1\u7406\n</code></pre>"},{"location":"dev/views_guide/#2_2","title":"2. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u554f\u984c","text":""},{"location":"dev/views_guide/#_29","title":"\u274c \u9593\u9055\u3063\u305f\u4f8b","text":"<pre><code>def _on_save_clicked(self, _: ft.ControlEvent) -&gt; None:\n    # \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306a\u3057\n    result = self.service.save_data(self.input_field.value)\n    self._show_success()\n</code></pre>"},{"location":"dev/views_guide/#_30","title":"\u2705 \u6b63\u3057\u3044\u4f8b","text":"<pre><code>def _on_save_clicked(self, _: ft.ControlEvent) -&gt; None:\n    try:\n        if not self._validate_input():\n            return\n        result = self.service.save_data(self.input_field.value)\n        self._show_success()\n    except Exception as e:\n        self._show_error(f\"\u4fdd\u5b58\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {e}\")\n</code></pre>"},{"location":"dev/views_guide/#3_4","title":"3. \u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u554f\u984c","text":""},{"location":"dev/views_guide/#_31","title":"\u274c \u9593\u9055\u3063\u305f\u4f8b","text":"<pre><code>def __init__(self, page: ft.Page) -&gt; None:\n    super().__init__()\n    # \u5168\u3066\u306e\u8981\u7d20\u3092__init__\u306b\u8a70\u3081\u8fbc\u3080\uff08\u8aad\u307f\u306b\u304f\u3044\uff09\n    self.controls = [\n        ft.Text(\"\u30bf\u30a4\u30c8\u30eb\"),\n        ft.TextField(label=\"\u5165\u529b\"),\n        ft.ElevatedButton(\"\u4fdd\u5b58\", on_click=self._save),\n        # ... \u9577\u3044\u30ea\u30b9\u30c8\n    ]\n</code></pre>"},{"location":"dev/views_guide/#_32","title":"\u2705 \u6b63\u3057\u3044\u4f8b","text":"<pre><code>def __init__(self, page: ft.Page) -&gt; None:\n    super().__init__()\n    self._page = page\n    self._initialize_components()\n    self._build_layout()\n\ndef _initialize_components(self) -&gt; None:\n    self.title_text = ft.Text(\"\u30bf\u30a4\u30c8\u30eb\")\n    self.input_field = ft.TextField(label=\"\u5165\u529b\")\n    self.save_button = ft.ElevatedButton(\"\u4fdd\u5b58\", on_click=self._save)\n\ndef _build_layout(self) -&gt; None:\n    self.controls = [\n        self.title_text,\n        self.input_field,\n        self.save_button,\n    ]\n</code></pre>"},{"location":"dev/views_guide/#4-import","title":"4. import \u306e\u554f\u984c","text":""},{"location":"dev/views_guide/#_33","title":"\u274c \u9593\u9055\u3063\u305f\u4f8b","text":"<pre><code># \u5faa\u74b0\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\nfrom models.task import Task\nfrom models.user import User  # User\u30e2\u30c7\u30eb\u5185\u3067Task\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u5834\u5408\n</code></pre>"},{"location":"dev/views_guide/#_34","title":"\u2705 \u6b63\u3057\u3044\u4f8b","text":"<pre><code>from __future__ import annotations\nfrom typing import TYPE_CHECKING\n\nif TYPE_CHECKING:\n    from models.user import User  # \u578b\u30c1\u30a7\u30c3\u30af\u6642\u306e\u307f\u30a4\u30f3\u30dd\u30fc\u30c8\n</code></pre>"},{"location":"dev/views_guide/#5_1","title":"5. \u547d\u540d\u306e\u554f\u984c","text":""},{"location":"dev/views_guide/#_35","title":"\u274c \u9593\u9055\u3063\u305f\u4f8b","text":"<pre><code>class TaskForm(ft.Column):  # \u3042\u3044\u307e\u3044\u306a\u547d\u540d\n    def click(self, _):     # \u4f55\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u306e\u304b\u4e0d\u660e\n        pass\n\ndef make_task():            # \u4f55\u3092\u4f5c\u308b\u306e\u304b\u4e0d\u660e\n    pass\n</code></pre>"},{"location":"dev/views_guide/#_36","title":"\u2705 \u6b63\u3057\u3044\u4f8b","text":"<pre><code>class TaskCreateForm(ft.Column):  # \u660e\u78ba\u306a\u547d\u540d\n    def _on_create_button_clicked(self, _):  # \u5177\u4f53\u7684\u306a\u64cd\u4f5c\n        pass\n\ndef create_task_list_item():  # \u5177\u4f53\u7684\u306a\u623b\u308a\u5024\n    pass\n</code></pre>"},{"location":"dev/views_guide/#_37","title":"\u307e\u3068\u3081","text":"<p>View \u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5\u3067\u306f\u4ee5\u4e0b\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u610f\u8b58\u3057\u3066\u304f\u3060\u3055\u3044\uff1a</p>"},{"location":"dev/views_guide/#_38","title":"\u57fa\u672c\u8a2d\u8a08\u539f\u5247","text":"<ol> <li>Clean Architecture \u6e96\u62e0: Application Service \u5c64\u3092\u901a\u3058\u3066\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306b\u30a2\u30af\u30bb\u30b9</li> <li>\u9069\u5207\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u9078\u629e: \u95a2\u6570\u30d9\u30fc\u30b9\u304b\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u304b\u3092\u9069\u5207\u306b\u9078\u3076</li> <li>\u660e\u78ba\u306a\u8cac\u52d9\u306e\u5206\u96e2: UI \u8868\u793a\u3068\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b8c\u5168\u306b\u5206\u96e2</li> </ol>"},{"location":"dev/views_guide/#gtd","title":"GTD \u56fa\u6709\u306e\u8a2d\u8a08","text":"<ol> <li>GTD \u6982\u5ff5\u306e\u8996\u899a\u5316: TaskStatus\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u968e\u5c64\u306e\u9069\u5207\u306a\u8868\u73fe</li> <li>\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5bfe\u5fdc: Inbox Review\u3001\u9031\u6b21\u30ec\u30d3\u30e5\u30fc\u7b49\u306e GTD \u30d7\u30ed\u30bb\u30b9\u3092 UI \u5316</li> <li>2 \u5206\u30eb\u30fc\u30eb\u30b5\u30dd\u30fc\u30c8: \u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3088\u308b\u5373\u5ea7\u306e\u5224\u65ad\u30fb\u5b9f\u884c</li> </ol>"},{"location":"dev/views_guide/#_39","title":"\u6280\u8853\u7684\u54c1\u8cea","text":"<ol> <li>\u4f9d\u5b58\u6027\u6ce8\u5165: Service Container \u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u30c6\u30b9\u30bf\u30d6\u30eb\u306a\u8a2d\u8a08</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0: \u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30a8\u30e9\u30fc\u8868\u793a\u3068\u30ea\u30ab\u30d0\u30ea\u30fc</li> <li>\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u66f4\u65b0: \u697d\u89b3\u7684 UI \u66f4\u65b0\u306b\u3088\u308b\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u306a\u4f53\u9a13</li> <li>\u30c6\u30b9\u30bf\u30d3\u30ea\u30c6\u30a3: MVP\ud328\ud134\u3068\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5206\u96e2\u306b\u3088\u308b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u5bfe\u5fdc</li> </ol>"},{"location":"dev/views_guide/#_40","title":"\u958b\u767a\u52b9\u7387","text":"<ol> <li>\u518d\u5229\u7528\u6027: \u5171\u901a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068 Mixin \u306e\u6d3b\u7528</li> <li>\u4fdd\u5b88\u6027: \u660e\u78ba\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u3068\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04</li> <li>\u62e1\u5f35\u6027: \u65b0\u6a5f\u80fd\u8ffd\u52a0\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u67d4\u8edf\u306a\u8a2d\u8a08</li> </ol> <p>\u3053\u308c\u3089\u306e\u6307\u91dd\u306b\u5f93\u3046\u3053\u3068\u3067\u3001GTD \u306e\u601d\u60f3\u3092\u9069\u5207\u306b\u53cd\u6620\u3057\u3001\u4fdd\u5b88\u6027\u304c\u9ad8\u304f\u7406\u89e3\u3057\u3084\u3059\u3044 View \u30ec\u30a4\u30e4\u30fc\u3092\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\u7279\u306b\u3001Application Service \u5c64\u3068\u306e\u9069\u5207\u306a\u9023\u643a\u306b\u3088\u308a\u3001Views \u5c64\u306f UI \u8868\u793a\u306b\u5c02\u5ff5\u3067\u304d\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306e\u8907\u96d1\u3055\u304b\u3089\u5206\u96e2\u3055\u308c\u305f\u8a2d\u8a08\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"dev/cli/","title":"CLI \u30af\u30a4\u30c3\u30af\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>Kage \u306e CLI \u306f Typer \u30d9\u30fc\u30b9\u3067 <code>poe cli &lt;group&gt; &lt;command&gt;</code> \u5f62\u5f0f\u3067\u5229\u7528\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u4e3b\u8981\u306a\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981\u3067\u3059\u3002</p>"},{"location":"dev/cli/#_1","title":"\u30b0\u30eb\u30fc\u30d7\u4e00\u89a7","text":"\u30b0\u30eb\u30fc\u30d7 \u76ee\u7684 \u4e3b\u306a\u64cd\u4f5c <code>task</code> \u30bf\u30b9\u30af\u7ba1\u7406 \u4f5c\u6210 / \u4e00\u89a7 / \u53d6\u5f97 / \u66f4\u65b0 / \u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4 / \u524a\u9664 / \u7d71\u8a08 <code>task-tag</code> \u30bf\u30b9\u30af\u3068\u30bf\u30b0\u95a2\u9023 \u4ed8\u4e0e / \u89e3\u9664 / \u4e00\u89a7 / \u5b58\u5728\u78ba\u8a8d / \u4e00\u62ec\u89e3\u9664 <code>memo</code> \u30e1\u30e2\u7ba1\u7406 \u4f5c\u6210 / \u66f4\u65b0 / \u524a\u9664 / \u53d6\u5f97 / \u4e00\u89a7 / \u691c\u7d22 <code>tag</code> \u30bf\u30b0\u7ba1\u7406 \u4f5c\u6210 / \u4e00\u89a7 / \u53d6\u5f97 / \u691c\u7d22 / \u66f4\u65b0 / \u524a\u9664 <code>project</code> \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406 \u4f5c\u6210 / \u4e00\u89a7 / \u53d6\u5f97 / \u691c\u7d22 / \u66f4\u65b0 / \u524a\u9664"},{"location":"dev/cli/#_2","title":"\u3088\u304f\u4f7f\u3046\u4f8b","text":"<pre><code># \u30bf\u30b9\u30af\u4e00\u89a7 (INBOX)\npoe cli task list\n\n# \u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u4e00\u89a7\npoe cli task list --all\n\n# \u30bf\u30b9\u30af\u4f5c\u6210\npoe cli task create --title \"Write docs\" --desc \"CLI pages\" --due 2025-09-30\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u691c\u7d22\npoe cli project search refactor\n\n# \u30bf\u30b0\u691c\u7d22\npoe cli tag search urgent\n</code></pre> <p>\u8a73\u7d30: Task \u30b3\u30de\u30f3\u30c9 / Task-Tag \u30b3\u30de\u30f3\u30c9 / Memo \u30b3\u30de\u30f3\u30c9 / Tag \u30b3\u30de\u30f3\u30c9 / Project \u30b3\u30de\u30f3\u30c9 / \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 / \u958b\u767a\u8005\u5411\u3051</p>"},{"location":"dev/cli/agent/","title":"Agent \u30b3\u30de\u30f3\u30c9","text":"<p><code>agent</code> \u30b0\u30eb\u30fc\u30d7\u306f OneLiner (\u4e00\u8a00\u30b3\u30e1\u30f3\u30c8) \u3092\u751f\u6210\u3057\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30bf\u30b9\u30af\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3059\u3002</p>"},{"location":"dev/cli/agent/#_1","title":"\u6982\u8981","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e \u4e3b\u306a\u30aa\u30d7\u30b7\u30e7\u30f3 <code>run</code> \u4e00\u8a00\u30b3\u30e1\u30f3\u30c8\u751f\u6210\u3057\u3066\u8868\u793a <code>--provider</code>, <code>--model</code>, <code>-i/--interactive</code> <code>save-task</code> \u751f\u6210\u3057\u305f\u4e00\u8a00\u3092\u30bf\u30b9\u30af\u3078\u4fdd\u5b58 <code>--status</code>, <code>--provider</code>, <code>--model</code>, <code>-i</code>"},{"location":"dev/cli/agent/#_2","title":"\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc / \u30e2\u30c7\u30eb\u6307\u5b9a","text":"<p><code>--provider</code>:</p> <ul> <li><code>fake</code>: \u30e2\u30c3\u30af\u5fdc\u7b54 (\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0d\u8981)</li> <li><code>google</code>: Gemini API (\u74b0\u5883\u5909\u6570 <code>GOOGLE_API_KEY</code> \u5fc5\u9808)</li> <li><code>openvino</code>: \u30ed\u30fc\u30ab\u30eb OpenVINO \u5b9f\u884c (HuggingFace \u30e2\u30c7\u30eb\u3092\u4e8b\u524d\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9)</li> </ul> <p><code>--model</code> \u306e\u6307\u5b9a\u30eb\u30fc\u30eb:</p> <ul> <li><code>openvino</code> \u306e\u5834\u5408: Enum \u540d (\u4f8b: <code>QWEN_3_8B_INT4</code>) \u304b Enum \u306e\u5024 (<code>OpenVINO/Qwen3-8B-int4-cw-ov</code>)</li> <li><code>google</code> \u306e\u5834\u5408: \u4efb\u610f\u306e Gemini \u30e2\u30c7\u30eb\u6587\u5b57\u5217 (\u4f8b: <code>gemini-1.5-flash-latest</code>)</li> <li><code>fake</code> \u306e\u5834\u5408: \u6307\u5b9a\u4e0d\u8981 (\u7121\u8996\u3055\u308c\u308b)</li> <li><code>--model</code> \u306e\u307f\u6307\u5b9a\u3057\u305f\u3068\u304d: OpenVINO Enum \u540d/\u5024\u306b\u4e00\u81f4\u3059\u308c\u3070 <code>openvino</code> \u63a8\u5b9a\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070 <code>google</code> \u3068\u3057\u3066\u6271\u3046</li> </ul>"},{"location":"dev/cli/agent/#_3","title":"\u30c7\u30d5\u30a9\u30eb\u30c8\u5024 / \u521d\u671f\u6319\u52d5","text":"\u9805\u76ee \u65e2\u5b9a\u5024 \u8aac\u660e provider (\u672a\u6307\u5b9a) CLI \u3067\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u8a2d\u5b9a (config) \u306b\u59d4\u8b72\u3002\u8a2d\u5b9a\u672a\u5b9a\u7fa9\u306a\u3089\u5185\u90e8\u306e OneLinerService \u5b9f\u88c5\u304c\u5b89\u5168\u30d1\u30b9 (FAKE \u306a\u3069) \u3092\u5229\u7528\u3002 model (\u672a\u6307\u5b9a) provider=google \u6642\u306f\u8a2d\u5b9a\u5074 one_liner \u30e2\u30c7\u30eb\u3002provider=openvino \u3067\u8a2d\u5b9a\u304c\u7121\u3044\u5834\u5408\u306f\u660e\u793a\u6307\u5b9a\u63a8\u5968\u3002 status (save-task) inbox \u4e0d\u6b63\u5024\u306f\u81ea\u52d5\u3067 INBOX \u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3002 interactive false <code>-i/--interactive</code> \u3092\u4ed8\u3051\u305f\u5834\u5408\u306e\u307f\u5bfe\u8a71\u30d5\u30ed\u30fc\u3002 task counts \u81ea\u52d5\u96c6\u8a08 \u5bfe\u8a71\u30e2\u30fc\u30c9\u3067\u300c\u30b9\u30ad\u30c3\u30d7 = \u81ea\u52d5\u300d\u300cNo = \u624b\u52d5\u5165\u529b\u300d\u3002 <p>\u88dc\u8db3:</p> <ul> <li><code>--model</code> \u306e\u307f\u6307\u5b9a: OpenVINO Enum \u540d/\u5024\u306b\u4e00\u81f4 \u2192 provider=openvino\u3002\u975e\u4e00\u81f4 \u2192 provider=google\u3002</li> <li>provider=fake \u6642\u306f model \u3092\u7121\u8996\u3002</li> <li><code>save-task</code> \u306e title \u306f\u751f\u6210\u30c6\u30ad\u30b9\u30c8\u5148\u982d 60 \u6587\u5b57\u3092\u4f7f\u7528\u3002</li> <li>\u751f\u6210\u5931\u6557\u6642\u306f\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u6587\u8a00 (<code>\u4eca\u65e5\u3082\u4e00\u65e5\u3001\u304a\u75b2\u308c\u3055\u307e\u3067\u3059\u3002</code>) \u3092\u8868\u793a\u3059\u308b\u5b9f\u88c5\u65b9\u91dd\u3002</li> </ul>"},{"location":"dev/cli/agent/#_4","title":"\u4f8b","text":"<pre><code># \u6700\u3082\u7c21\u5358 (\u8a2d\u5b9a\u30c7\u30d5\u30a9\u30eb\u30c8)\npoe cli agent run\n\n# FAKE \u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3067\u751f\u6210\npoe cli agent run --provider fake\n\n# Google + \u30e2\u30c7\u30eb\u6307\u5b9a\npoe cli agent run --provider google --model gemini-1.5-flash-latest\n\n# \u30e2\u30c7\u30eb\u306e\u307f\u6307\u5b9a (google \u3068\u63a8\u5b9a)\npoe cli agent run --model gemini-1.5-flash-exp\n\n# OpenVINO (Enum \u540d\u6307\u5b9a)\npoe cli agent run --provider openvino --model QWEN_3_8B_INT4\n\n# OpenVINO (Enum \u5024\u6307\u5b9a)\npoe cli agent run --provider openvino --model OpenVINO/Mistral-7B-Instruct-v0.3-int4-cw-ov\n\n# \u751f\u6210\u3057\u3066\u30bf\u30b9\u30af\u4fdd\u5b58 (INBOX)\npoe cli agent save-task\n\n# \u30b9\u30c6\u30fc\u30bf\u30b9\u6307\u5b9a\u3067\u4fdd\u5b58\npoe cli agent save-task --status todo\n</code></pre>"},{"location":"dev/cli/agent/#-i","title":"\u5bfe\u8a71\u30e2\u30fc\u30c9 (-i)","text":"<p><code>-i/--interactive</code> \u3092\u4ed8\u4e0e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u9806\u5e8f\u3067\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059:</p> <ol> <li>Provider \u9078\u629e (fake / google / openvino)</li> <li>\u9078\u629e\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306b\u5fdc\u3058\u305f\u30e2\u30c7\u30eb\u9078\u629e / \u5165\u529b</li> <li>\u305d\u306e\u9078\u629e\u3092\u9069\u7528\u3059\u308b\u304b\u78ba\u8a8d (No \u3067\u8a2d\u5b9a\u30c7\u30d5\u30a9\u30eb\u30c8\u4f7f\u7528)</li> <li>\u30bf\u30b9\u30af\u4ef6\u6570\u3092\u81ea\u52d5\u96c6\u8a08\u3067\u53d6\u5f97\u3059\u308b\u304b\u78ba\u8a8d</li> <li>\u624b\u52d5\u5165\u529b\u3092\u9078\u3093\u3060\u5834\u5408: today/completed/overdue \u306e\u4ef6\u6570\u5165\u529b</li> </ol> <pre><code>poe cli agent run -i\n</code></pre>"},{"location":"dev/cli/agent/#_5","title":"\u30a8\u30e9\u30fc\u3068\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af","text":"\u72b6\u614b \u6319\u52d5 OpenVINO \u3067\u4e0d\u6b63\u306a\u30e2\u30c7\u30eb CLI \u304c <code>BadParameter</code> \u3067\u8b66\u544a Google API KEY \u672a\u8a2d\u5b9a \u4f8b\u5916\u30ed\u30b0\u5f8c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8 \u751f\u6210\u5931\u6557 (\u305d\u306e\u4ed6) \u30c7\u30d5\u30a9\u30eb\u30c8\u6587\u8a00: <code>\u4eca\u65e5\u3082\u4e00\u65e5\u3001\u304a\u75b2\u308c\u3055\u307e\u3067\u3059\u3002</code>"},{"location":"dev/cli/agent/#_6","title":"\u8fd4\u5374\u8868\u793a","text":"<p><code>run</code> \u5b9f\u884c\u5f8c\u306f Rich Panel \u3067\u4e00\u8a00\u3068\u7d4c\u904e\u79d2\u6570\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002<code>save-task</code> \u306f\u8ffd\u52a0\u3067\u4f5c\u6210\u3055\u308c\u305f\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\u3092\u8868\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"dev/cli/agent/#_7","title":"\u51fa\u529b\u30e1\u30bf\u60c5\u5831 (\u57cb\u3081\u8fbc\u307f\u5f62\u5f0f)","text":"<p>Panel \u672c\u6587\u306e\u672b\u5c3e\u306b dim \u30b9\u30bf\u30a4\u30eb\u3067\u4ee5\u4e0b\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u884c\u304c\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059 (\u4f8b: <code>elapsed=0.42s | provider=fake | counts(t=0,c=3,o=1)</code>).</p> <ul> <li><code>provider=&lt;value&gt;</code>: \u5b9f\u969b\u306b\u4f7f\u7528\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc (<code>fake</code> / <code>google</code> / <code>openvino</code>)</li> <li><code>model=&lt;name&gt;</code>: \u6307\u5b9a\u307e\u305f\u306f\u8a2d\u5b9a\u304b\u3089\u89e3\u6c7a\u3055\u308c\u305f\u30e2\u30c7\u30eb (OpenVINO \u306f Enum \u540d\u3001Google \u306f\u6587\u5b57\u5217\u3001fake \u306f\u8868\u793a\u306a\u3057)</li> <li><code>counts(t=&lt;today&gt;,c=&lt;completed&gt;,o=&lt;overdue&gt;)</code>: \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u6e21\u3055\u308c\u305f\u30bf\u30b9\u30af\u4ef6\u6570</li> </ul> <p>\u8868\u793a\u4f8b:</p> <pre><code>\u3053\u3093\u306b\u3061\u306f\uff01\u79c1\u306f Kage AI \u3067\u3059\u3002\n\n[dim]elapsed=1.08s | provider=google | model=gemini-2.0-flash | counts(t=2,c=5,o=1)[/dim]\n</code></pre> <p>\u88dc\u8db3:</p> <ul> <li>FAKE \u304b\u3064\u4ef6\u6570\u304c\u81ea\u52d5\u96c6\u8a08\u3055\u308c\u305f\u5834\u5408\u3067\u3082 counts(...) \u306f\u8868\u793a\u3055\u308c\u307e\u3059\u3002</li> <li>\u30e2\u30c7\u30eb\u672a\u6307\u5b9a (FAKE \u306a\u3069) \u3067\u306f <code>model=...</code> \u90e8\u5206\u306f\u7701\u7565\u3055\u308c\u307e\u3059\u3002</li> <li>\u9577\u3059\u304e\u308b\u5834\u5408\u306f\u7aef\u672b\u306e\u6a2a\u5e45\u306b\u4f9d\u5b58\u3057\u3066\u6298\u308a\u8fd4\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</li> <li><code>elapsed=...s</code> \u306f\u5e38\u306b\u5148\u982d\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002</li> </ul> <p>\u958b\u767a\u8005\u5411\u3051\u8a73\u7d30\u306f <code>logic/services/one_liner_service.py</code> \u3068 <code>agents/task_agents/one_liner/</code> \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"dev/cli/dev/","title":"CLI \u958b\u767a\u8005\u5411\u3051\u30ac\u30a4\u30c9","text":"<p>\u5185\u90e8\u69cb\u9020\u3068\u62e1\u5f35\u898f\u7d04\u3092\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"dev/cli/dev/#_1","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5c64","text":"<pre><code>Typer Command -&gt; Decorated Helper (_create_*, _get_* ...) -&gt; Application Service -&gt; Repository/DB\n</code></pre>"},{"location":"dev/cli/dev/#_2","title":"\u30c7\u30b3\u30ec\u30fc\u30bf","text":"\u30c7\u30b3\u30ec\u30fc\u30bf \u5f79\u5272 \u623b\u308a\u5024\u69cb\u9020 <code>@with_spinner(message)</code> \u5b9f\u884c\u4e2d\u30b9\u30d4\u30ca\u30fc\u8868\u793a \u5143\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u305d\u306e\u307e\u307e\u901a\u904e <code>@elapsed_time()</code> \u5b9f\u884c\u6642\u9593\u8a08\u6e2c Namespace(result=&lt;\u5143\u623b\u308a\u5024&gt;, elapsed=) <p>\u4e21\u65b9\u9069\u7528\u6642\u306f <code>elapsed_time</code> \u304c\u5916\u5074\u306b\u3042\u308b\u5b9f\u88c5\uff08\u8a08\u6e2c\u7bc4\u56f2=\u30b9\u30d4\u30ca\u30fc\u542b\u3080\uff09\u3002</p>"},{"location":"dev/cli/dev/#_3","title":"\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u898f\u7d04","text":"<ol> <li>1 \u30d8\u30eb\u30d1\u30fc = 1 \u30b5\u30fc\u30d3\u30b9\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057 (YAGNI)</li> <li>\u4f8b\u5916\u51e6\u7406\u306f\u30b5\u30fc\u30d3\u30b9\u5c64\u3067\u884c\u3044 CLI \u306f\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u8868\u793a\u306b\u96c6\u4e2d</li> <li>\u623b\u308a\u5024\u3092\u305d\u306e\u307e\u307e\u8fd4\u3057\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u5909\u63db\u306f\u30b3\u30de\u30f3\u30c9\u95a2\u6570\u5074</li> <li>\u53d6\u5f97\u7cfb\u3067\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f <code>None</code> \u3092 <code>.result</code> \u306b\u683c\u7d0d (\u30c6\u30fc\u30d6\u30eb\u51fa\u529b\u524d\u306b\u5224\u5b9a)</li> </ol>"},{"location":"dev/cli/dev/#_4","title":"\u65b0\u898f\u30b3\u30de\u30f3\u30c9\u8ffd\u52a0\u624b\u9806","text":"<ol> <li>Service / Command / Query \u3092\u5148\u306b\u5b9f\u88c5</li> <li><code>src/cli/commands/&lt;entity&gt;.py</code> \u306b\u30d8\u30eb\u30d1\u30fc <code>_do_something</code> \u3092\u8ffd\u52a0</li> <li>Typer \u306e <code>@app.command</code> \u3067 CLI \u95a2\u6570\u5b9f\u88c5</li> <li>\u51fa\u529b: \u30c6\u30fc\u30d6\u30eb or \u30b7\u30f3\u30d7\u30eb\u306a <code>console.print</code></li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: \u672c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b <code>&lt;entity&gt;.md</code> \u3078\u4f7f\u7528\u4f8b\u8ffd\u8a18</li> </ol>"},{"location":"dev/cli/dev/#_5","title":"\u63a8\u5968\u30c6\u30fc\u30d6\u30eb\u51fa\u529b\u30d1\u30bf\u30fc\u30f3","text":"<pre><code>from rich.table import Table\n\ntable = Table(title=\"Example\", caption=f\"Elapsed: {result.elapsed:.2f}s\")\n# \u30ab\u30e9\u30e0\u5b9a\u7fa9 -&gt; \u884c\u8ffd\u52a0 -&gt; console.print(table)\n</code></pre>"},{"location":"dev/cli/dev/#_6","title":"\u30c6\u30b9\u30c8\u6226\u7565 (\u5c06\u6765)","text":"\u30ec\u30d9\u30eb \u5bfe\u8c61 \u624b\u6cd5 unit \u30d8\u30eb\u30d1\u30fc \u30b5\u30fc\u30d3\u30b9\u3092\u30e2\u30c3\u30af\u3057\u623b\u308a\u5024\u3068 spinner/elapsed \u52d5\u4f5c\u3092\u78ba\u8a8d integration CLI \u30b3\u30de\u30f3\u30c9 <code>typer.testing.CliRunner</code> \u3092\u5229\u7528 e2e \u5b9f DB (sqlite) \u4e8b\u524d\u306b\u30c6\u30f3\u30dd\u30e9\u30ea DB \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"},{"location":"dev/cli/dev/#_7","title":"\u8ffd\u52a0\u691c\u8a0e\u4e8b\u9805","text":"<ul> <li>\u5171\u901a\u30c6\u30fc\u30d6\u30eb\u30d3\u30eb\u30c0\u30fc\u306e\u5c0e\u5165</li> <li>\u975e\u540c\u671f\u5316 (async Typer) \u691c\u8a3c</li> <li>JSON \u51fa\u529b\u30e2\u30fc\u30c9 (<code>--json</code>) \u306e\u8ffd\u52a0</li> </ul> <p>\u4ee5\u4e0a\u3002</p>"},{"location":"dev/cli/error_handling/","title":"\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u65b9\u91dd (CLI)","text":"<p>CLI \u30b3\u30de\u30f3\u30c9\u306f <code>handle_cli_errors</code> \u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u4e00\u5143\u7684\u306b\u4f8b\u5916\u3092\u6574\u5f62\u8868\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"dev/cli/error_handling/#_1","title":"\u30dd\u30ea\u30b7\u30fc","text":"\u4f8b\u5916\u578b \u8868\u793a\u30b9\u30bf\u30a4\u30eb \u52d5\u4f5c <code>ValueError</code> \u9ec4\u8272 Warning \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u8868\u793a <code>RuntimeError</code> \u8d64 Error \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u8868\u793a \u305d\u306e\u4ed6 \u8d64 Panel \"Unexpected\" \u898b\u51fa\u3057\u8868\u793a <p>Traceback \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u975e\u8868\u793a (\u5c06\u6765\u7684\u306b <code>--debug</code> \u8ffd\u52a0\u4e88\u5b9a)\u3002\u5185\u90e8\u30ed\u30b0\u7528\u9014\u3068\u3057\u3066 stderr \u306b\u306f traceback \u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/cli/error_handling/#_2","title":"\u5b9f\u88c5\u6982\u8981","text":"<p><code>cli/utils.py</code> \u306b\u4ee5\u4e0b\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u5b9f\u88c5:</p> <ul> <li><code>handle_cli_errors()</code>: \u4f8b\u5916\u6355\u6349\u3068 Rich Panel \u306b\u3088\u308b\u8272\u5206\u3051\u8868\u793a</li> <li>\u65e2\u5b58 <code>with_spinner</code>, <code>elapsed_time</code> \u3068\u306e\u4f75\u7528\u9806: <code>@app.command</code> \u2192 <code>@handle_cli_errors()</code> \u2192 \u95a2\u6570\u672c\u4f53\u5185\u90e8\u3067 helper \u547c\u3073\u51fa\u3057</li> </ul>"},{"location":"dev/cli/error_handling/#_3","title":"\u9069\u7528\u7bc4\u56f2","text":"<p><code>task</code>, <code>tag</code>, <code>project</code>, <code>task-tag</code>, <code>memo</code> \u5168\u30b3\u30de\u30f3\u30c9\u95a2\u6570\u3078\u9069\u7528\u6e08\u307f\u3002</p>"},{"location":"dev/cli/error_handling/#_4","title":"\u4eca\u5f8c\u306e\u62e1\u5f35\u5019\u88dc","text":"<ul> <li><code>--debug</code> / <code>KAGE_DEBUG=1</code> \u3067 traceback \u8868\u793a\u5207\u66ff</li> <li>\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc\u7d30\u5206\u5316 (\u30c9\u30e1\u30a4\u30f3\u4f8b\u5916\u5225 exit code)</li> <li>JSON \u51fa\u529b\u30e2\u30fc\u30c9\u6642\u306e\u69cb\u9020\u5316\u30a8\u30e9\u30fc (<code>{\"error\": {\"type\": ..., \"message\": ...}}</code>)</li> </ul>"},{"location":"dev/cli/memo/","title":"Memo \u30b3\u30de\u30f3\u30c9","text":"<p>\u30bf\u30b9\u30af\u306b\u7d10\u3065\u304f\u30e1\u30e2\u306e CRUD / \u691c\u7d22\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u5185\u5bb9\u3092\u7701\u7565\u3059\u308b\u3068\u5bfe\u8a71\u5165\u529b\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"dev/cli/memo/#_1","title":"\u4e3b\u306a\u30b3\u30de\u30f3\u30c9","text":"\u30b3\u30de\u30f3\u30c9\u4f8b \u8aac\u660e <code>poe cli memo create --task &lt;TASK_ID&gt; -c \"text\"</code> \u30e1\u30e2\u4f5c\u6210 <code>poe cli memo update &lt;MEMO_ID&gt; -c \"new content\"</code> \u30e1\u30e2\u5185\u5bb9\u66f4\u65b0 <code>poe cli memo delete &lt;MEMO_ID&gt;</code> \u30e1\u30e2\u524a\u9664 (\u78ba\u8a8d\u30d7\u30ed\u30f3\u30d7\u30c8) <code>poe cli memo delete &lt;MEMO_ID&gt; --force</code> \u30e1\u30e2\u524a\u9664 (\u78ba\u8a8d\u306a\u3057) <code>poe cli memo get &lt;MEMO_ID&gt;</code> \u5358\u4e00\u53d6\u5f97 <code>poe cli memo list</code> \u5168\u4ef6\u4e00\u89a7 <code>poe cli memo list --task &lt;TASK_ID&gt;</code> \u30bf\u30b9\u30af ID \u30d5\u30a3\u30eb\u30bf <code>poe cli memo search &lt;QUERY&gt;</code> \u90e8\u5206\u4e00\u81f4\u691c\u7d22"},{"location":"dev/cli/memo/#_2","title":"\u4f8b","text":"<pre><code># \u4f5c\u6210 (\u5185\u5bb9\u306f\u5bfe\u8a71\u5165\u529b)\npoe cli memo create --task 11111111-1111-1111-1111-111111111111\n\n# \u66f4\u65b0 (\u5185\u5bb9\u6307\u5b9a)\npoe cli memo update 33333333-3333-3333-3333-333333333333 -c \"Fix wording\"\n\n# \u691c\u7d22\npoe cli memo search meeting\n</code></pre>"},{"location":"dev/cli/memo/#_3","title":"\u5185\u90e8\u30d8\u30eb\u30d1\u30fc\u5bfe\u5fdc\u8868","text":"\u30d8\u30eb\u30d1\u30fc \u8aac\u660e Service \u30e1\u30bd\u30c3\u30c9 <code>_create_memo</code> \u4f5c\u6210 <code>create_memo</code> <code>_update_memo</code> \u66f4\u65b0 <code>update_memo</code> <code>_delete_memo</code> \u524a\u9664 <code>delete_memo</code> <code>_get_memo</code> \u5358\u4e00\u53d6\u5f97 <code>get_memo_by_id</code> <code>_list_all</code> \u5168\u4ef6\u4e00\u89a7 <code>get_all_memos</code> <code>_list_by_task</code> \u30bf\u30b9\u30af\u5225\u53d6\u5f97 <code>get_memos_by_task_id</code> <code>_search_memos</code> \u90e8\u5206\u4e00\u81f4\u691c\u7d22 <code>search_memos</code>"},{"location":"dev/cli/memo/#api","title":"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>Memo CLI commands.</p> <p>\u30e1\u30e2 CRUD / \u691c\u7d22\u7528\u30b3\u30de\u30f3\u30c9\u3002</p>"},{"location":"dev/cli/memo/#src.cli.commands.memo.app","title":"<code>app = typer.Typer(help='\u30e1\u30e2 CRUD / \u691c\u7d22')</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/memo/#src.cli.commands.memo.console","title":"<code>console = Console()</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/memo/#src.cli.commands.memo.MAX_PREVIEW_LEN","title":"<code>MAX_PREVIEW_LEN = 43</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/memo/#src.cli.commands.memo.DETAIL_PREVIEW_LEN","title":"<code>DETAIL_PREVIEW_LEN = 40</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/memo/#src.cli.commands.memo.create","title":"<code>create(task_id=typer.Option(..., '--task', help='\u5bfe\u8c61\u30bf\u30b9\u30afID'), content=typer.Option(None, '--content', '-c', help='\u30e1\u30e2\u5185\u5bb9'))</code>","text":"<p>\u65b0\u3057\u3044\u30e1\u30e2\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u7d10\u3065\u3051\u308b\u30bf\u30b9\u30af UUID</p> <code>Option(..., '--task', help='\u5bfe\u8c61\u30bf\u30b9\u30afID')</code> <code>content</code> <code>str | None</code> <p>\u30e1\u30e2\u672c\u6587 (\u672a\u6307\u5b9a\u3067\u5bfe\u8a71\u5165\u529b)</p> <code>Option(None, '--content', '-c', help='\u30e1\u30e2\u5185\u5bb9')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/memo.py</code> <pre><code>@app.command(\"create\", help=\"\u30e1\u30e2\u4f5c\u6210\")\n@handle_cli_errors()\ndef create(\n    task_id: str = typer.Option(..., \"--task\", help=\"\u5bfe\u8c61\u30bf\u30b9\u30afID\"),\n    content: str | None = typer.Option(None, \"--content\", \"-c\", help=\"\u30e1\u30e2\u5185\u5bb9\"),\n) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u65b0\u3057\u3044\u30e1\u30e2\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u7d10\u3065\u3051\u308b\u30bf\u30b9\u30af UUID\n        content: \u30e1\u30e2\u672c\u6587 (\u672a\u6307\u5b9a\u3067\u5bfe\u8a71\u5165\u529b)\n    \"\"\"\n    from logic.commands.memo_commands import CreateMemoCommand\n\n    t_uuid = uuid.UUID(task_id)\n    if content is None:\n        content = questionary.text(\"Memo content?\").ask()\n    if not content:\n        console.print(\"[red]content \u5fc5\u9808[/red]\")\n        raise typer.Exit(code=1)\n    created = _create_memo(CreateMemoCommand(content=content, task_id=t_uuid))\n    console.print(\n        f\"[green]Created:[/green] {created.result.id} (task={created.result.task_id}) Elapsed: {created.elapsed:.2f}s\"\n    )\n</code></pre>"},{"location":"dev/cli/memo/#src.cli.commands.memo.update","title":"<code>update(memo_id=typer.Argument(...), content=typer.Option(None, '--content', '-c', help='\u65b0\u3057\u3044\u5185\u5bb9'))</code>","text":"<p>\u65e2\u5b58\u30e1\u30e2\u306e\u5185\u5bb9\u3092\u66f4\u65b0\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>memo_id</code> <code>str</code> <p>\u5bfe\u8c61\u30e1\u30e2 UUID</p> <code>Argument(...)</code> <code>content</code> <code>str | None</code> <p>\u65b0\u3057\u3044\u672c\u6587 (\u672a\u6307\u5b9a\u3067\u5bfe\u8a71\u5165\u529b)</p> <code>Option(None, '--content', '-c', help='\u65b0\u3057\u3044\u5185\u5bb9')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/memo.py</code> <pre><code>@app.command(\"update\", help=\"\u30e1\u30e2\u66f4\u65b0\")\n@handle_cli_errors()\ndef update(\n    memo_id: str = typer.Argument(...),\n    content: str | None = typer.Option(None, \"--content\", \"-c\", help=\"\u65b0\u3057\u3044\u5185\u5bb9\"),\n) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u65e2\u5b58\u30e1\u30e2\u306e\u5185\u5bb9\u3092\u66f4\u65b0\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        memo_id: \u5bfe\u8c61\u30e1\u30e2 UUID\n        content: \u65b0\u3057\u3044\u672c\u6587 (\u672a\u6307\u5b9a\u3067\u5bfe\u8a71\u5165\u529b)\n    \"\"\"\n    from logic.commands.memo_commands import UpdateMemoCommand\n\n    m_uuid = uuid.UUID(memo_id)\n    if content is None:\n        content = questionary.text(\"New content?\").ask()\n    if not content:\n        console.print(\"[yellow]Cancelled[/yellow]\")\n        raise typer.Exit(code=1)\n    updated = _update_memo(UpdateMemoCommand(memo_id=m_uuid, content=content))\n    console.print(f\"[green]Updated:[/green] {updated.result.id} Elapsed: {updated.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/memo/#src.cli.commands.memo.delete","title":"<code>delete(memo_id, force=typer.Option(default=False, help='\u78ba\u8a8d\u306a\u3057', rich_help_panel='Danger'))</code>","text":"<p>\u30e1\u30e2\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>memo_id</code> <code>str</code> <p>\u5bfe\u8c61\u30e1\u30e2 UUID</p> \u5fc5\u9808 <code>force</code> <code>bool</code> <p>\u78ba\u8a8d\u3092\u7701\u7565\u3059\u308b\u304b</p> <code>Option(default=False, help='\u78ba\u8a8d\u306a\u3057', rich_help_panel='Danger')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/memo.py</code> <pre><code>@app.command(\"delete\", help=\"\u30e1\u30e2\u524a\u9664\")\n@handle_cli_errors()\ndef delete(\n    memo_id: str,\n    force: bool = typer.Option(\n        default=False,\n        help=\"\u78ba\u8a8d\u306a\u3057\",\n        rich_help_panel=\"Danger\",\n    ),\n) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30e1\u30e2\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        memo_id: \u5bfe\u8c61\u30e1\u30e2 UUID\n        force: \u78ba\u8a8d\u3092\u7701\u7565\u3059\u308b\u304b\n    \"\"\"\n    from logic.commands.memo_commands import DeleteMemoCommand\n\n    m_uuid = uuid.UUID(memo_id)\n    if (not force) and not questionary.confirm(\"Delete this memo?\").ask():\n        console.print(\"[yellow]Cancelled[/yellow]\")\n        raise typer.Exit(code=1)\n    deleted = _delete_memo(DeleteMemoCommand(memo_id=m_uuid))\n    console.print(f\"[red]Deleted:[/red] {m_uuid} ({'OK' if deleted.result else 'NG'}) Elapsed: {deleted.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/memo/#src.cli.commands.memo.get_memo","title":"<code>get_memo(memo_id)</code>","text":"<p>ID \u6307\u5b9a\u3067\u30e1\u30e2\u8a73\u7d30 (Markdown \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u542b\u3080) \u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>memo_id</code> <code>str</code> <p>\u30e1\u30e2 UUID</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/memo.py</code> <pre><code>@app.command(\"get\", help=\"ID\u3067\u53d6\u5f97\")\n@handle_cli_errors()\ndef get_memo(memo_id: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"ID \u6307\u5b9a\u3067\u30e1\u30e2\u8a73\u7d30 (Markdown \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u542b\u3080) \u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        memo_id: \u30e1\u30e2 UUID\n    \"\"\"\n    from logic.queries.memo_queries import GetMemoByIdQuery\n\n    m_uuid = uuid.UUID(memo_id)\n    memo = _get_memo(GetMemoByIdQuery(memo_id=m_uuid))\n    if memo.result is None:\n        console.print(\"[yellow]Not found[/yellow]\")\n        raise typer.Exit(code=1)\n    table = Table(title=\"Memo Detail\", box=box.MINIMAL_DOUBLE_HEAD, caption=f\"Elapsed: {memo.elapsed:.2f}s\")\n    table.add_column(\"Field\")\n    table.add_column(\"Value\")\n    table.add_row(\"ID\", str(memo.result.id))\n    table.add_row(\"Task ID\", str(memo.result.task_id))\n    # \u672c\u6587\u306f Markdown \u3068\u3057\u3066\u5225\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0 (\u30c6\u30fc\u30d6\u30eb\u5185\u306f\u7701\u7565)  # [AI GENERATED]\n    snippet = memo.result.content.splitlines()[0][:DETAIL_PREVIEW_LEN] + (\n        \"...\" if len(memo.result.content) &gt; DETAIL_PREVIEW_LEN else \"\"\n    )\n    table.add_row(\"Content (preview)\", snippet)\n    console.print(table)\n    console.print(Markdown(memo.result.content))\n</code></pre>"},{"location":"dev/cli/memo/#src.cli.commands.memo.list_memos","title":"<code>list_memos(task=typer.Option(None, '--task', help='\u7279\u5b9a\u30bf\u30b9\u30afID\u3067\u7d5e\u308a\u8fbc\u307f'))</code>","text":"<p>\u30e1\u30e2\u4e00\u89a7\u3092\u8868\u793a (\u30bf\u30b9\u30afID\u30d5\u30a3\u30eb\u30bf\u5bfe\u5fdc) \u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task</code> <code>str | None</code> <p>\u30bf\u30b9\u30af UUID \u30d5\u30a3\u30eb\u30bf</p> <code>Option(None, '--task', help='\u7279\u5b9a\u30bf\u30b9\u30afID\u3067\u7d5e\u308a\u8fbc\u307f')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/memo.py</code> <pre><code>@app.command(\"list\", help=\"\u30e1\u30e2\u4e00\u89a7 (\u30d5\u30a3\u30eb\u30bf\u5bfe\u5fdc)\")\n@handle_cli_errors()\ndef list_memos(\n    task: str | None = typer.Option(None, \"--task\", help=\"\u7279\u5b9a\u30bf\u30b9\u30afID\u3067\u7d5e\u308a\u8fbc\u307f\"),\n) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30e1\u30e2\u4e00\u89a7\u3092\u8868\u793a (\u30bf\u30b9\u30afID\u30d5\u30a3\u30eb\u30bf\u5bfe\u5fdc) \u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task: \u30bf\u30b9\u30af UUID \u30d5\u30a3\u30eb\u30bf\n    \"\"\"\n    from logic.queries.memo_queries import GetAllMemosQuery, GetMemosByTaskIdQuery\n\n    if task:\n        rows = _list_by_task(GetMemosByTaskIdQuery(task_id=uuid.UUID(task)))\n        _print_memos(rows.result, f\"task={task}\", rows.elapsed)\n        return\n    rows = _list_all(GetAllMemosQuery())\n    _print_memos(rows.result, \"all\", rows.elapsed)\n</code></pre>"},{"location":"dev/cli/memo/#src.cli.commands.memo.search","title":"<code>search(query)</code>","text":"<p>\u30e1\u30e2\u672c\u6587\u306e\u90e8\u5206\u4e00\u81f4\u691c\u7d22\u3092\u884c\u3046\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>query</code> <code>str</code> <p>\u691c\u7d22\u8a9e</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/memo.py</code> <pre><code>@app.command(\"search\", help=\"\u30e1\u30e2\u5168\u6587\u691c\u7d22 (\u90e8\u5206\u4e00\u81f4)\")\n@handle_cli_errors()\ndef search(query: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30e1\u30e2\u672c\u6587\u306e\u90e8\u5206\u4e00\u81f4\u691c\u7d22\u3092\u884c\u3046\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        query: \u691c\u7d22\u8a9e\n    \"\"\"\n    from logic.queries.memo_queries import SearchMemosQuery\n\n    results = _search_memos(SearchMemosQuery(query=query))\n    if not results.result:\n        console.print(\"[yellow]No results[/yellow]\")\n        raise typer.Exit(code=0)\n    _print_memos(results.result, f\"search='{query}'\", results.elapsed)\n</code></pre>"},{"location":"dev/cli/project/","title":"Project \u30b3\u30de\u30f3\u30c9","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u64cd\u4f5c\u3002</p>"},{"location":"dev/cli/project/#_1","title":"\u4e00\u89a7","text":"<pre><code>poe cli project list\n</code></pre>"},{"location":"dev/cli/project/#_2","title":"\u4f5c\u6210","text":"<pre><code>poe cli project create --title \"Refactor\" --desc \"Improve CLI layer\" --status active\n</code></pre>"},{"location":"dev/cli/project/#_3","title":"\u691c\u7d22","text":"<pre><code>poe cli project search refactor\n</code></pre>"},{"location":"dev/cli/project/#_4","title":"\u53d6\u5f97","text":"<pre><code>poe cli project get &lt;PROJECT_ID&gt;\n</code></pre>"},{"location":"dev/cli/project/#_5","title":"\u66f4\u65b0","text":"<pre><code>poe cli project update &lt;PROJECT_ID&gt; --title \"Refactor v2\" --desc \"More improvements\" --status on_hold\n</code></pre>"},{"location":"dev/cli/project/#_6","title":"\u524a\u9664","text":"<pre><code>poe cli project delete &lt;PROJECT_ID&gt;\npoe cli project delete &lt;PROJECT_ID&gt; --force\n</code></pre>"},{"location":"dev/cli/project/#_7","title":"\u5185\u90e8\u30d8\u30eb\u30d1\u30fc\u5bfe\u5fdc\u8868","text":"\u30d8\u30eb\u30d1\u30fc \u8aac\u660e Service \u30e1\u30bd\u30c3\u30c9 <code>_get_all_projects</code> \u5168\u4ef6\u53d6\u5f97 <code>get_all_projects</code> <code>_create_project</code> \u4f5c\u6210 <code>create_project</code> <code>_get_project</code> \u5358\u4f53\u53d6\u5f97 <code>get_project_by_id</code> <code>_search_projects</code> \u30bf\u30a4\u30c8\u30eb\u691c\u7d22 <code>search_projects_by_title</code> <code>_update_project</code> \u66f4\u65b0 <code>update_project</code> <code>_delete_project</code> \u524a\u9664 <code>delete_project</code>"},{"location":"dev/cli/project/#api","title":"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>Project related CLI commands.</p> <p>GUI\u5c64\u306e\u4ee3\u66ff\u3068\u3057\u3066 Application Service \u3092\u547c\u3073\u51fa\u3059 Typer \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u7fa4\u3002</p>"},{"location":"dev/cli/project/#src.cli.commands.project.app","title":"<code>app = typer.Typer(help='\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 CRUD / \u691c\u7d22 \u30b3\u30de\u30f3\u30c9')</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/project/#src.cli.commands.project.console","title":"<code>console = Console()</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/project/#src.cli.commands.project.list_projects","title":"<code>list_projects()</code>","text":"<p>\u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4e00\u89a7\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>ApplicationService \u304b\u3089\u5168\u4ef6\u53d6\u5f97\u3057 Rich Table \u3067\u51fa\u529b\u3057\u307e\u3059\u3002</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/project.py</code> <pre><code>@app.command(\"list\", help=\"\u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4e00\u89a7\u3092\u8868\u793a\")\n@handle_cli_errors()\ndef list_projects() -&gt; None:\n    \"\"\"\u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4e00\u89a7\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    ApplicationService \u304b\u3089\u5168\u4ef6\u53d6\u5f97\u3057 Rich Table \u3067\u51fa\u529b\u3057\u307e\u3059\u3002\n    \"\"\"\n    from logic.queries.project_queries import GetAllProjectsQuery\n\n    projects = _get_all_projects(GetAllProjectsQuery())\n    table = Table(\n        title=\"Projects\",\n        box=box.SIMPLE_HEAVY,\n        caption=f\"Total: {len(projects.result)} Elapsed: {projects.elapsed:.2f}s\",\n    )\n    table.add_column(\"ID\")\n    table.add_column(\"Title\")\n    table.add_column(\"Status\")\n    for p in projects.result:\n        table.add_row(str(p.id), p.title, p.status.value if hasattr(p.status, \"value\") else str(p.status))\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/project/#src.cli.commands.project.create_project","title":"<code>create_project(title=typer.Option(None, '--title', '-t', help='\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bf\u30a4\u30c8\u30eb'), description=typer.Option(None, '--desc', '-d', help='\u8aac\u660e'), status=ProjectStatus.ACTIVE)</code>","text":"<p>\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>title</code> <code>str | None</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bf\u30a4\u30c8\u30eb (\u672a\u6307\u5b9a\u306a\u3089\u5bfe\u8a71\u5165\u529b)</p> <code>Option(None, '--title', '-t', help='\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bf\u30a4\u30c8\u30eb')</code> <code>description</code> <code>str | None</code> <p>\u8aac\u660e (\u672a\u6307\u5b9a\u306a\u3089\u5bfe\u8a71\u5165\u529b\u53ef)</p> <code>Option(None, '--desc', '-d', help='\u8aac\u660e')</code> <code>status</code> <code>ProjectStatus</code> <p>\u521d\u671f\u30b9\u30c6\u30fc\u30bf\u30b9</p> <code>ACTIVE</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/project.py</code> <pre><code>@app.command(\"create\", help=\"\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\")\n@handle_cli_errors()\ndef create_project(\n    title: str | None = typer.Option(None, \"--title\", \"-t\", help=\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bf\u30a4\u30c8\u30eb\"),\n    description: str | None = typer.Option(None, \"--desc\", \"-d\", help=\"\u8aac\u660e\"),\n    status: ProjectStatus = ProjectStatus.ACTIVE,\n) -&gt; None:  # [AI GENERATED] CLI create project\n    \"\"\"\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        title: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bf\u30a4\u30c8\u30eb (\u672a\u6307\u5b9a\u306a\u3089\u5bfe\u8a71\u5165\u529b)\n        description: \u8aac\u660e (\u672a\u6307\u5b9a\u306a\u3089\u5bfe\u8a71\u5165\u529b\u53ef)\n        status: \u521d\u671f\u30b9\u30c6\u30fc\u30bf\u30b9\n    \"\"\"\n    from logic.commands.project_commands import CreateProjectCommand\n\n    if title is None:\n        title = questionary.text(\"Title?\").ask()\n    if description is None:\n        description = questionary.text(\"Description? (optional)\").ask()\n\n    if title is None:\n        msg = \"title \u304c\u5fc5\u8981\u3067\u3059\"  # [AI GENERATED] validation message\n        raise typer.BadParameter(msg)\n    cmd = CreateProjectCommand(title=title, description=description or \"\", status=status)\n    project = _create_project(cmd)\n    console.print(\n        f\"[green]Created:[/green] {project.result.title} ({project.result.id}) Elapsed: {project.elapsed:.2f}s\"\n    )\n</code></pre>"},{"location":"dev/cli/project/#src.cli.commands.project.get_project","title":"<code>get_project(project_id)</code>","text":"<p>ID \u3092\u6307\u5b9a\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a73\u7d30\u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>project_id</code> <code>str</code> <p>\u53d6\u5f97\u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 UUID \u6587\u5b57\u5217</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/project.py</code> <pre><code>@app.command(\"get\", help=\"ID\u6307\u5b9a\u3067\u53d6\u5f97\")\n@handle_cli_errors()\ndef get_project(project_id: str) -&gt; None:\n    \"\"\"ID \u3092\u6307\u5b9a\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a73\u7d30\u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        project_id: \u53d6\u5f97\u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 UUID \u6587\u5b57\u5217\n    \"\"\"\n    from logic.queries.project_queries import GetProjectByIdQuery\n\n    pid = uuid.UUID(project_id)\n    project = _get_project(GetProjectByIdQuery(project_id=pid))\n    table = Table(title=\"Project Detail\", box=box.MINIMAL_DOUBLE_HEAD, caption=f\"Elapsed: {project.elapsed:.2f}s\")\n    table.add_column(\"Field\")\n    table.add_column(\"Value\")\n    table.add_row(\"ID\", str(project.result.id))\n    table.add_row(\"Title\", project.result.title)\n    table.add_row(\n        \"Status\",\n        project.result.status.value if hasattr(project.result.status, \"value\") else str(project.result.status),\n    )\n    table.add_row(\"Description\", project.result.description or \"\")\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/project/#src.cli.commands.project.search_projects","title":"<code>search_projects(query)</code>","text":"<p>\u30bf\u30a4\u30c8\u30eb\u306e\u90e8\u5206\u4e00\u81f4\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u691c\u7d22\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>query</code> <code>str</code> <p>\u691c\u7d22\u8a9e (\u90e8\u5206\u4e00\u81f4)</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/project.py</code> <pre><code>@app.command(\"search\", help=\"\u30bf\u30a4\u30c8\u30eb\u90e8\u5206\u4e00\u81f4\u691c\u7d22\")\n@handle_cli_errors()\ndef search_projects(query: str) -&gt; None:\n    \"\"\"\u30bf\u30a4\u30c8\u30eb\u306e\u90e8\u5206\u4e00\u81f4\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u691c\u7d22\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        query: \u691c\u7d22\u8a9e (\u90e8\u5206\u4e00\u81f4)\n    \"\"\"\n    from logic.queries.project_queries import SearchProjectsByTitleQuery\n\n    results = _search_projects(SearchProjectsByTitleQuery(title_query=query))\n    if not results.result:\n        console.print(\"[yellow]No results[/yellow]\")\n        raise typer.Exit(code=0)\n    table = Table(\n        title=f\"Search: {query}\",\n        box=box.SIMPLE,\n        caption=f\"Hits: {len(results.result)} Elapsed: {results.elapsed:.2f}s\",\n    )\n    table.add_column(\"ID\")\n    table.add_column(\"Title\")\n    table.add_column(\"Status\")\n    for p in results.result:\n        table.add_row(str(p.id), p.title, p.status.value if hasattr(p.status, \"value\") else str(p.status))\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/project/#src.cli.commands.project.update_project","title":"<code>update_project(project_id=typer.Argument(..., help='\u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8ID'), title=typer.Option(None, '--title', '-t', help='\u65b0\u3057\u3044\u30bf\u30a4\u30c8\u30eb'), description=typer.Option(None, '--desc', '-d', help='\u8aac\u660e'), status=None)</code>","text":"<p>\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30c8\u30eb/\u8aac\u660e/\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u66f4\u65b0\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u5bfe\u8a71\u5165\u529b\u30e2\u30fc\u30c9\u306b\u5165\u308a\u307e\u3059\u3002</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>project_id</code> <code>str</code> <p>\u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 UUID</p> <code>Argument(..., help='\u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8ID')</code> <code>title</code> <code>str | None</code> <p>\u65b0\u30bf\u30a4\u30c8\u30eb</p> <code>Option(None, '--title', '-t', help='\u65b0\u3057\u3044\u30bf\u30a4\u30c8\u30eb')</code> <code>description</code> <code>str | None</code> <p>\u65b0\u8aac\u660e</p> <code>Option(None, '--desc', '-d', help='\u8aac\u660e')</code> <code>status</code> <code>ProjectStatus | None</code> <p>\u65b0\u30b9\u30c6\u30fc\u30bf\u30b9</p> <code>None</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/project.py</code> <pre><code>@app.command(\"update\", help=\"\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\")\n@handle_cli_errors()\ndef update_project(\n    project_id: str = typer.Argument(..., help=\"\u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8ID\"),\n    title: str | None = typer.Option(None, \"--title\", \"-t\", help=\"\u65b0\u3057\u3044\u30bf\u30a4\u30c8\u30eb\"),\n    description: str | None = typer.Option(None, \"--desc\", \"-d\", help=\"\u8aac\u660e\"),\n    status: ProjectStatus | None = None,\n) -&gt; None:  # [AI GENERATED] CLI update project\n    \"\"\"\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30c8\u30eb/\u8aac\u660e/\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u66f4\u65b0\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    \u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u5bfe\u8a71\u5165\u529b\u30e2\u30fc\u30c9\u306b\u5165\u308a\u307e\u3059\u3002\n\n    Args:\n        project_id: \u5bfe\u8c61\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 UUID\n        title: \u65b0\u30bf\u30a4\u30c8\u30eb\n        description: \u65b0\u8aac\u660e\n        status: \u65b0\u30b9\u30c6\u30fc\u30bf\u30b9\n    \"\"\"\n    from logic.commands.project_commands import UpdateProjectCommand\n\n    pid = uuid.UUID(project_id)\n    if title is None and description is None and status is None:\n        # interactive prompt if nothing provided\n        title = questionary.text(\"New Title (blank=skip)\").ask() or None\n        description = questionary.text(\"New Description (blank=skip)\").ask() or None\n        if questionary.confirm(\"Change status?\").ask():\n            status_choice = questionary.select(\"Status\", choices=[s.value for s in ProjectStatus]).ask()\n            if status_choice:\n                status = ProjectStatus(status_choice)\n\n    cmd = UpdateProjectCommand(project_id=pid, title=title, description=description, status=status)\n    updated = _update_project(cmd)\n    console.print(\n        f\"[green]Updated:[/green] {updated.result.title} ({updated.result.id}) Elapsed: {updated.elapsed:.2f}s\"\n    )\n</code></pre>"},{"location":"dev/cli/project/#src.cli.commands.project.delete_project","title":"<code>delete_project(project_id, force=typer.Option(default=False, help='\u78ba\u8a8d\u306a\u3057\u3067\u524a\u9664', rich_help_panel='Danger'))</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>force \u6307\u5b9a\u304c\u7121\u3044\u5834\u5408\u306f\u78ba\u8a8d\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>project_id</code> <code>str</code> <p>\u524a\u9664\u5bfe\u8c61 UUID</p> \u5fc5\u9808 <code>force</code> <code>bool</code> <p>\u78ba\u8a8d\u7121\u3057\u3067\u524a\u9664\u3059\u308b\u304b</p> <code>Option(default=False, help='\u78ba\u8a8d\u306a\u3057\u3067\u524a\u9664', rich_help_panel='Danger')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/project.py</code> <pre><code>@app.command(\"delete\", help=\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u524a\u9664\")\n@handle_cli_errors()\ndef delete_project(\n    project_id: str,\n    force: bool = typer.Option(\n        default=False,\n        help=\"\u78ba\u8a8d\u306a\u3057\u3067\u524a\u9664\",\n        rich_help_panel=\"Danger\",\n    ),\n) -&gt; None:\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    force \u6307\u5b9a\u304c\u7121\u3044\u5834\u5408\u306f\u78ba\u8a8d\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n    Args:\n        project_id: \u524a\u9664\u5bfe\u8c61 UUID\n        force: \u78ba\u8a8d\u7121\u3057\u3067\u524a\u9664\u3059\u308b\u304b\n    \"\"\"\n    from logic.commands.project_commands import DeleteProjectCommand\n\n    pid = uuid.UUID(project_id)\n    if (not force) and (not questionary.confirm(\"Delete this project?\").ask()):\n        console.print(\"[yellow]Cancelled[/yellow]\")\n        raise typer.Exit(code=1)\n    deleted = _delete_project(DeleteProjectCommand(project_id=pid))\n    console.print(f\"[red]Deleted:[/red] {pid} Elapsed: {deleted.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/tag/","title":"Tag \u30b3\u30de\u30f3\u30c9","text":"<p>\u30bf\u30b0\u7ba1\u7406\u64cd\u4f5c\u3002</p>"},{"location":"dev/cli/tag/#_1","title":"\u4e00\u89a7","text":"<pre><code>poe cli tag list\n</code></pre>"},{"location":"dev/cli/tag/#_2","title":"\u4f5c\u6210","text":"<pre><code>poe cli tag create --name \"#urgent\"\n</code></pre>"},{"location":"dev/cli/tag/#_3","title":"\u691c\u7d22","text":"<pre><code>poe cli tag search urgent\n</code></pre>"},{"location":"dev/cli/tag/#_4","title":"\u53d6\u5f97","text":"<pre><code>poe cli tag get &lt;TAG_ID&gt;\n</code></pre>"},{"location":"dev/cli/tag/#_5","title":"\u66f4\u65b0","text":"<pre><code>poe cli tag update &lt;TAG_ID&gt; --name \"#important\"\n</code></pre>"},{"location":"dev/cli/tag/#_6","title":"\u524a\u9664","text":"<pre><code>poe cli tag delete &lt;TAG_ID&gt;\npoe cli tag delete &lt;TAG_ID&gt; --force\n</code></pre>"},{"location":"dev/cli/tag/#_7","title":"\u5185\u90e8\u30d8\u30eb\u30d1\u30fc\u5bfe\u5fdc\u8868","text":"\u30d8\u30eb\u30d1\u30fc \u8aac\u660e Service \u30e1\u30bd\u30c3\u30c9 <code>_get_all_tags</code> \u5168\u4ef6\u53d6\u5f97 <code>get_all_tags</code> <code>_create_tag</code> \u4f5c\u6210 <code>create_tag</code> <code>_search_tags</code> \u540d\u524d\u90e8\u5206\u4e00\u81f4\u691c\u7d22 <code>search_tags_by_name</code> <code>_get_tag</code> \u5358\u4f53\u53d6\u5f97 <code>get_tag_by_id</code> <code>_update_tag</code> \u66f4\u65b0 <code>update_tag</code> <code>_delete_tag</code> \u524a\u9664 <code>delete_tag</code>"},{"location":"dev/cli/tag/#api","title":"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>Tag related CLI commands.</p> <p>\u30bf\u30b0 CRUD \u64cd\u4f5c\u7528\u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3002</p>"},{"location":"dev/cli/tag/#src.cli.commands.tag.app","title":"<code>app = typer.Typer(help='\u30bf\u30b0 CRUD / \u691c\u7d22')</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/tag/#src.cli.commands.tag.console","title":"<code>console = Console()</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/tag/#src.cli.commands.tag.list_tags","title":"<code>list_tags()</code>","text":"<p>\u5168\u30bf\u30b0\u3092\u4e00\u89a7\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/tag.py</code> <pre><code>@app.command(\"list\", help=\"\u5168\u30bf\u30b0\u4e00\u89a7\")\n@handle_cli_errors()\ndef list_tags() -&gt; None:\n    \"\"\"\u5168\u30bf\u30b0\u3092\u4e00\u89a7\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\"\"\"\n    from logic.queries.tag_queries import GetAllTagsQuery\n\n    tags = _get_all_tags(GetAllTagsQuery())\n    table = Table(title=\"Tags\", box=box.SIMPLE, caption=f\"Total: {len(tags.result)} Elapsed: {tags.elapsed:.2f}s\")\n    table.add_column(\"ID\")\n    table.add_column(\"Name\")\n    for t in tags.result:\n        table.add_row(str(t.id), t.name)\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/tag/#src.cli.commands.tag.create_tag","title":"<code>create_tag(name=typer.Option(None, '--name', '-n'))</code>","text":"<p>\u65b0\u3057\u3044\u30bf\u30b0\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>name</code> <code>str | None</code> <p>\u30bf\u30b0\u540d (\u672a\u6307\u5b9a\u306a\u3089\u5bfe\u8a71\u5165\u529b)</p> <code>Option(None, '--name', '-n')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/tag.py</code> <pre><code>@app.command(\"create\", help=\"\u30bf\u30b0\u4f5c\u6210\")\n@handle_cli_errors()\ndef create_tag(name: str | None = typer.Option(None, \"--name\", \"-n\")) -&gt; None:\n    \"\"\"\u65b0\u3057\u3044\u30bf\u30b0\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        name: \u30bf\u30b0\u540d (\u672a\u6307\u5b9a\u306a\u3089\u5bfe\u8a71\u5165\u529b)\n    \"\"\"\n    from logic.commands.tag_commands import CreateTagCommand\n\n    if name is None:\n        name = questionary.text(\"Tag name?\").ask()\n    if name is None:\n        msg = \"name \u5fc5\u9808\"\n        raise typer.BadParameter(msg)\n    created = _create_tag(CreateTagCommand(name=name))\n    console.print(\n        f\"[green]Created:[/green] {created.result.name} ({created.result.id}) Elapsed: {created.elapsed:.2f}s\"\n    )\n</code></pre>"},{"location":"dev/cli/tag/#src.cli.commands.tag.search_tags","title":"<code>search_tags(query)</code>","text":"<p>\u30bf\u30b0\u540d\u306e\u90e8\u5206\u4e00\u81f4\u691c\u7d22\u3092\u884c\u3046\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>query</code> <code>str</code> <p>\u691c\u7d22\u8a9e</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/tag.py</code> <pre><code>@app.command(\"search\", help=\"\u540d\u524d\u90e8\u5206\u4e00\u81f4\")\n@handle_cli_errors()\ndef search_tags(query: str) -&gt; None:\n    \"\"\"\u30bf\u30b0\u540d\u306e\u90e8\u5206\u4e00\u81f4\u691c\u7d22\u3092\u884c\u3046\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        query: \u691c\u7d22\u8a9e\n    \"\"\"\n    from logic.queries.tag_queries import SearchTagsByNameQuery\n\n    results = _search_tags(SearchTagsByNameQuery(name_query=query))\n    if not results.result:\n        console.print(\"[yellow]No results[/yellow]\")\n        raise typer.Exit(code=0)\n    table = Table(\n        title=f\"Search: {query}\",\n        box=box.SIMPLE,\n        caption=f\"Hits: {len(results.result)} Elapsed: {results.elapsed:.2f}s\",\n    )\n    table.add_column(\"ID\")\n    table.add_column(\"Name\")\n    for t in results.result:\n        table.add_row(str(t.id), t.name)\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/tag/#src.cli.commands.tag.get_tag","title":"<code>get_tag(tag_id)</code>","text":"<p>ID \u6307\u5b9a\u3067\u30bf\u30b0\u8a73\u7d30\u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>tag_id</code> <code>str</code> <p>\u30bf\u30b0 UUID \u6587\u5b57\u5217</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/tag.py</code> <pre><code>@app.command(\"get\", help=\"ID\u53d6\u5f97\")\n@handle_cli_errors()\ndef get_tag(tag_id: str) -&gt; None:\n    \"\"\"ID \u6307\u5b9a\u3067\u30bf\u30b0\u8a73\u7d30\u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        tag_id: \u30bf\u30b0 UUID \u6587\u5b57\u5217\n    \"\"\"\n    from logic.queries.tag_queries import GetTagByIdQuery\n\n    tid = uuid.UUID(tag_id)\n    tag = _get_tag(GetTagByIdQuery(tag_id=tid))\n    if tag.result is None:\n        console.print(\"[yellow]Not found[/yellow]\")\n        raise typer.Exit(code=1)\n    table = Table(title=\"Tag Detail\", box=box.MINIMAL_DOUBLE_HEAD, caption=f\"Elapsed: {tag.elapsed:.2f}s\")\n    table.add_column(\"Field\")\n    table.add_column(\"Value\")\n    table.add_row(\"ID\", str(tag.result.id))\n    table.add_row(\"Name\", tag.result.name)\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/tag/#src.cli.commands.tag.update_tag","title":"<code>update_tag(tag_id, name=typer.Option(None, '--name', '-n'))</code>","text":"<p>\u30bf\u30b0\u540d\u3092\u5909\u66f4\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>tag_id</code> <code>str</code> <p>\u30bf\u30b0 UUID</p> \u5fc5\u9808 <code>name</code> <code>str | None</code> <p>\u65b0\u3057\u3044\u30bf\u30b0\u540d</p> <code>Option(None, '--name', '-n')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/tag.py</code> <pre><code>@app.command(\"update\", help=\"\u30bf\u30b0\u540d\u5909\u66f4\")\n@handle_cli_errors()\ndef update_tag(tag_id: str, name: str | None = typer.Option(None, \"--name\", \"-n\")) -&gt; None:\n    \"\"\"\u30bf\u30b0\u540d\u3092\u5909\u66f4\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        tag_id: \u30bf\u30b0 UUID\n        name: \u65b0\u3057\u3044\u30bf\u30b0\u540d\n    \"\"\"\n    from logic.commands.tag_commands import UpdateTagCommand\n\n    tid = uuid.UUID(tag_id)\n    if name is None:\n        name = questionary.text(\"New name?\").ask()\n    if name is None:\n        console.print(\"[yellow]Cancelled[/yellow]\")\n        raise typer.Exit(code=1)\n    updated = _update_tag(UpdateTagCommand(tag_id=tid, name=name))\n    console.print(f\"[green]Updated:[/green] {updated.result.name} Elapsed: {updated.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/tag/#src.cli.commands.tag.delete_tag","title":"<code>delete_tag(tag_id, force=typer.Option(default=False, help='\u95a2\u9023\u304c\u3042\u3063\u3066\u3082\u524a\u9664'))</code>","text":"<p>\u30bf\u30b0\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>tag_id</code> <code>str</code> <p>\u524a\u9664\u5bfe\u8c61 UUID</p> \u5fc5\u9808 <code>force</code> <code>bool</code> <p>\u78ba\u8a8d\u3092\u7701\u7565\u3059\u308b\u304b</p> <code>Option(default=False, help='\u95a2\u9023\u304c\u3042\u3063\u3066\u3082\u524a\u9664')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/tag.py</code> <pre><code>@app.command(\"delete\", help=\"\u30bf\u30b0\u524a\u9664\")\n@handle_cli_errors()\ndef delete_tag(tag_id: str, force: bool = typer.Option(default=False, help=\"\u95a2\u9023\u304c\u3042\u3063\u3066\u3082\u524a\u9664\")) -&gt; None:\n    \"\"\"\u30bf\u30b0\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        tag_id: \u524a\u9664\u5bfe\u8c61 UUID\n        force: \u78ba\u8a8d\u3092\u7701\u7565\u3059\u308b\u304b\n    \"\"\"\n    from logic.commands.tag_commands import DeleteTagCommand\n\n    tid = uuid.UUID(tag_id)\n    if (not force) and (not questionary.confirm(\"Delete this tag?\").ask()):\n        console.print(\"[yellow]Cancelled[/yellow]\")\n        raise typer.Exit(code=1)\n    deleted = _delete_tag(DeleteTagCommand(tag_id=tid))\n    console.print(f\"[red]Deleted:[/red] {tid} Elapsed: {deleted.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task/","title":"Task \u30b3\u30de\u30f3\u30c9","text":"<p>\u30bf\u30b9\u30af\u7ba1\u7406\u64cd\u4f5c\u3002\u30b5\u30fc\u30d3\u30b9\u547c\u3073\u51fa\u3057\u306f\u5185\u90e8\u30d8\u30eb\u30d1\u30fc (\u30b9\u30d4\u30ca\u30fc + \u8a08\u6e2c) \u7d4c\u7531\u3002</p>"},{"location":"dev/cli/task/#_1","title":"\u4e00\u89a7\u8868\u793a","text":"<pre><code>poe cli task list --status inbox\npoe cli task list --all            # \u5168\u30b9\u30c6\u30fc\u30bf\u30b9\n</code></pre>"},{"location":"dev/cli/task/#_2","title":"\u4f5c\u6210","text":"<pre><code>poe cli task create --title \"Write docs\" --desc \"Add CLI docs\" --due 2025-09-30 --status inbox\n</code></pre> <p>\u5bfe\u8a71\u30e2\u30fc\u30c9 (\u30aa\u30d7\u30b7\u30e7\u30f3\u7701\u7565\u6642) \u3082\u53ef\u3002</p>"},{"location":"dev/cli/task/#_3","title":"\u53d6\u5f97","text":"<pre><code>poe cli task get &lt;TASK_ID&gt;\n</code></pre>"},{"location":"dev/cli/task/#_4","title":"\u66f4\u65b0","text":"<pre><code># \u3059\u3079\u3066\u4efb\u610f\u3002\u672a\u6307\u5b9a\u306f\u5bfe\u8a71 or \u73fe\u5728\u5024\u3092\u5229\u7528\npoe cli task update &lt;TASK_ID&gt; --title \"New title\" --desc \"New desc\" --status next_action --due 2025-10-01\n</code></pre>"},{"location":"dev/cli/task/#_5","title":"\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u30b7\u30e7\u30fc\u30c8","text":"<pre><code>poe cli task status &lt;TASK_ID&gt; done\n</code></pre>"},{"location":"dev/cli/task/#_6","title":"\u524a\u9664","text":"<pre><code>poe cli task delete &lt;TASK_ID&gt;\npoe cli task delete &lt;TASK_ID&gt; --force  # \u78ba\u8a8d\u306a\u3057\n</code></pre>"},{"location":"dev/cli/task/#_7","title":"\u5185\u90e8\u30d8\u30eb\u30d1\u30fc\u5bfe\u5fdc\u8868","text":"\u30d8\u30eb\u30d1\u30fc \u8aac\u660e Service \u30e1\u30bd\u30c3\u30c9 <code>_load_tasks</code> \u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u53d6\u5f97 <code>get_tasks_by_status</code> <code>_list_all_tasks</code> \u5168\u30b9\u30c6\u30fc\u30bf\u30b9 dict \u53d6\u5f97 <code>get_all_tasks_by_status_dict</code> <code>_create_task</code> \u4f5c\u6210 <code>create_task</code> <code>_get_task</code> \u5358\u4f53\u53d6\u5f97 <code>get_task_by_id</code> <code>_update_task</code> \u66f4\u65b0 <code>update_task</code> <code>_change_status</code> \u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4 <code>update_task</code> <code>_delete_task</code> \u524a\u9664 <code>delete_task</code>"},{"location":"dev/cli/task/#stats","title":"\u7d71\u8a08\u8868\u793a (stats)","text":"<p>\u30bf\u30b9\u30af\u4ef6\u6570\u306e\u7c21\u6613\u7d71\u8a08\u3092\u8868\u793a\u3002</p> <pre><code>poe cli task stats                # today/completed/overdue \u3092\u8868\u793a\npoe cli task stats --no-overdue   # overdue \u3092\u7701\u7565\n</code></pre> <p>\u30e1\u30c8\u30ea\u30af\u30b9:</p> <ul> <li>Today: \u671f\u9650\u65e5\u304c\u4eca\u65e5\u306e\u30bf\u30b9\u30af\u4ef6\u6570</li> <li>Completed: \u5b8c\u4e86\u6e08\u4ef6\u6570</li> <li>Overdue: \u671f\u9650\u8d85\u904e (\u672a\u5b8c\u4e86) \u4ef6\u6570</li> </ul> <p>\u5185\u90e8\u3067\u306f 3 \u3064\u306e\u30b5\u30fc\u30d3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u500b\u5225\u306b\u8a08\u6e2c\u3057\u3001\u6700\u5927 elapsed \u3092\u4ee3\u8868\u5024\u3068\u3057\u3066\u8868\u793a\u3002</p>"},{"location":"dev/cli/task/#api","title":"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>Task related CLI commands.</p> <p>Application Service\u3092\u4ecb\u3057\u305f\u30bf\u30b9\u30af\u64cd\u4f5c\u3002</p>"},{"location":"dev/cli/task/#src.cli.commands.task.app","title":"<code>app = typer.Typer(help='\u30bf\u30b9\u30af CRUD / \u30b9\u30c6\u30fc\u30bf\u30b9\u64cd\u4f5c')</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/task/#src.cli.commands.task.console","title":"<code>console = Console()</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/task/#src.cli.commands.task.list_tasks","title":"<code>list_tasks(status=TaskStatus.INBOX, *, all_=typer.Option(None, '--all', '-a', help='flag\u3092\u4ed8\u3051\u308b\u3068\u5168\u3066\u306e\u30bf\u30b9\u30af\u3092\u8868\u793a'))</code>","text":"<p>\u30bf\u30b9\u30af\u3092\u30b9\u30c6\u30fc\u30bf\u30b9\u6307\u5b9a\u307e\u305f\u306f\u5168\u4ef6\u3067\u4e00\u89a7\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>status</code> <code>TaskStatus</code> <p>\u5358\u4e00\u8868\u793a\u3059\u308b\u30b9\u30c6\u30fc\u30bf\u30b9 ( --all \u6307\u5b9a\u6642\u306f\u7121\u8996 )</p> <code>INBOX</code> <code>all_</code> <code>bool</code> <p>\u5168\u30b9\u30c6\u30fc\u30bf\u30b9\u6a2a\u65ad\u8868\u793a\u30d5\u30e9\u30b0</p> <code>Option(None, '--all', '-a', help='flag\u3092\u4ed8\u3051\u308b\u3068\u5168\u3066\u306e\u30bf\u30b9\u30af\u3092\u8868\u793a')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"list\", help=\"\u30b9\u30c6\u30fc\u30bf\u30b9\u3067\u4e00\u89a7\u8868\u793a\")\n@handle_cli_errors()\ndef list_tasks(\n    status: TaskStatus = TaskStatus.INBOX,\n    *,\n    all_: bool = typer.Option(None, \"--all\", \"-a\", help=\"flag\u3092\u4ed8\u3051\u308b\u3068\u5168\u3066\u306e\u30bf\u30b9\u30af\u3092\u8868\u793a\"),\n) -&gt; None:\n    \"\"\"\u30bf\u30b9\u30af\u3092\u30b9\u30c6\u30fc\u30bf\u30b9\u6307\u5b9a\u307e\u305f\u306f\u5168\u4ef6\u3067\u4e00\u89a7\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        status: \u5358\u4e00\u8868\u793a\u3059\u308b\u30b9\u30c6\u30fc\u30bf\u30b9 ( --all \u6307\u5b9a\u6642\u306f\u7121\u8996 )\n        all_: \u5168\u30b9\u30c6\u30fc\u30bf\u30b9\u6a2a\u65ad\u8868\u793a\u30d5\u30e9\u30b0\n    \"\"\"\n    if all_:\n        all_tasks = _list_all_tasks()\n        # all_tasks\u304b\u3089task\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\n        tasks = []\n        for task_list in all_tasks.result.values():\n            tasks.extend(task_list)\n        _print_tasks_table(tasks, \"all\", elapsed=all_tasks.elapsed)\n        return\n\n    tasks = _load_tasks(status)\n    _print_tasks_table(tasks.result, status.value, elapsed=tasks.elapsed)\n</code></pre>"},{"location":"dev/cli/task/#src.cli.commands.task.create_task","title":"<code>create_task(title=typer.Option(None, '--title', '-t'), description=typer.Option(None, '--desc', '-d'), status=TaskStatus.INBOX, due=typer.Option(None, '--due', help='YYYY-MM-DD'))</code>","text":"<p>\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u672a\u6307\u5b9a\u9805\u76ee\u306f\u5bfe\u8a71\u5165\u529b\u3055\u308c\u307e\u3059\u3002</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>title</code> <code>str | None</code> <p>\u30bf\u30a4\u30c8\u30eb</p> <code>Option(None, '--title', '-t')</code> <code>description</code> <code>str | None</code> <p>\u8aac\u660e</p> <code>Option(None, '--desc', '-d')</code> <code>status</code> <code>TaskStatus</code> <p>\u521d\u671f\u30b9\u30c6\u30fc\u30bf\u30b9</p> <code>INBOX</code> <code>due</code> <code>str | None</code> <p>\u671f\u9650 (YYYY-MM-DD)</p> <code>Option(None, '--due', help='YYYY-MM-DD')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"create\", help=\"\u30bf\u30b9\u30af\u4f5c\u6210\")\n@handle_cli_errors()\ndef create_task(\n    title: str | None = typer.Option(None, \"--title\", \"-t\"),\n    description: str | None = typer.Option(None, \"--desc\", \"-d\"),\n    status: TaskStatus = TaskStatus.INBOX,\n    due: str | None = typer.Option(None, \"--due\", help=\"YYYY-MM-DD\"),\n) -&gt; None:\n    \"\"\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    \u672a\u6307\u5b9a\u9805\u76ee\u306f\u5bfe\u8a71\u5165\u529b\u3055\u308c\u307e\u3059\u3002\n\n    Args:\n        title: \u30bf\u30a4\u30c8\u30eb\n        description: \u8aac\u660e\n        status: \u521d\u671f\u30b9\u30c6\u30fc\u30bf\u30b9\n        due: \u671f\u9650 (YYYY-MM-DD)\n    \"\"\"\n    from logic.commands.task_commands import CreateTaskCommand\n\n    if title is None:\n        title = questionary.text(\"Title?\").ask()\n    if description is None:\n        description = questionary.text(\"Description? (optional)\").ask()\n    due_date: date | None = None\n    if due:\n        try:\n            due_date = date.fromisoformat(due)\n        except ValueError:\n            console.print(\"[red]Invalid date format[/red]\")\n    if title is None:\n        msg = \"title \u5fc5\u9808\"\n        raise typer.BadParameter(msg)\n    cmd = CreateTaskCommand(title=title, description=description or \"\", status=status, due_date=due_date)\n    task = _create_task(cmd)\n    console.print(f\"[green]Created:[/green] {task.result.title} ({task.result.id}) Elapsed: {task.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task/#src.cli.commands.task.get_task","title":"<code>get_task(task_id)</code>","text":"<p>ID \u6307\u5b9a\u3067\u30bf\u30b9\u30af\u8a73\u7d30\u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u5bfe\u8c61\u30bf\u30b9\u30af UUID \u6587\u5b57\u5217</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"get\", help=\"ID\u3067\u53d6\u5f97\")\n@handle_cli_errors()\ndef get_task(task_id: str) -&gt; None:\n    \"\"\"ID \u6307\u5b9a\u3067\u30bf\u30b9\u30af\u8a73\u7d30\u3092\u53d6\u5f97\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u5bfe\u8c61\u30bf\u30b9\u30af UUID \u6587\u5b57\u5217\n    \"\"\"\n    from logic.queries.task_queries import GetTaskByIdQuery\n\n    tid = uuid.UUID(task_id)\n    task = _get_task(GetTaskByIdQuery(task_id=tid))\n    if task.result is None:\n        console.print(\"[yellow]Not found[/yellow]\")\n        raise typer.Exit(code=1)\n    table = Table(title=\"Task Detail\", box=box.MINIMAL_DOUBLE_HEAD)\n    table.add_column(\"Field\")\n    table.add_column(\"Value\")\n    detail = task.result\n    table.add_row(\"ID\", str(detail.id))\n    table.add_row(\"Title\", detail.title)\n    table.add_row(\"Status\", detail.status.value)\n    table.add_row(\"Description\", detail.description or \"\")\n    table.add_row(\"Due\", detail.due_date.isoformat() if detail.due_date else \"\")\n    table.caption = f\"Elapsed: {task.elapsed:.2f}s\"\n    console.print(table)\n</code></pre>"},{"location":"dev/cli/task/#src.cli.commands.task.update_task","title":"<code>update_task(task_id=typer.Argument(...), title=typer.Option(None, '--title', '-t'), description=typer.Option(None, '--desc', '-d'), status=None, due=typer.Option(None, '--due'))</code>","text":"<p>\u65e2\u5b58\u30bf\u30b9\u30af\u3092\u66f4\u65b0\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u5bfe\u8c61\u30bf\u30b9\u30af UUID</p> <code>Argument(...)</code> <code>title</code> <code>str | None</code> <p>\u65b0\u30bf\u30a4\u30c8\u30eb (None \u3067\u5909\u66f4\u3057\u306a\u3044)</p> <code>Option(None, '--title', '-t')</code> <code>description</code> <code>str | None</code> <p>\u65b0\u8aac\u660e (None \u3067\u5909\u66f4\u3057\u306a\u3044)</p> <code>Option(None, '--desc', '-d')</code> <code>status</code> <code>TaskStatus | None</code> <p>\u65b0\u30b9\u30c6\u30fc\u30bf\u30b9 (None \u3067\u5909\u66f4\u3057\u306a\u3044)</p> <code>None</code> <code>due</code> <code>str | None</code> <p>\u65b0\u671f\u9650\u6587\u5b57\u5217 (None \u3067\u5909\u66f4\u3057\u306a\u3044)</p> <code>Option(None, '--due')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"update\", help=\"\u30bf\u30b9\u30af\u66f4\u65b0\")\n@handle_cli_errors()\ndef update_task(\n    task_id: str = typer.Argument(...),\n    title: str | None = typer.Option(None, \"--title\", \"-t\"),\n    description: str | None = typer.Option(None, \"--desc\", \"-d\"),\n    status: TaskStatus | None = None,\n    due: str | None = typer.Option(None, \"--due\"),\n) -&gt; None:\n    \"\"\"\u65e2\u5b58\u30bf\u30b9\u30af\u3092\u66f4\u65b0\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u5bfe\u8c61\u30bf\u30b9\u30af UUID\n        title: \u65b0\u30bf\u30a4\u30c8\u30eb (None \u3067\u5909\u66f4\u3057\u306a\u3044)\n        description: \u65b0\u8aac\u660e (None \u3067\u5909\u66f4\u3057\u306a\u3044)\n        status: \u65b0\u30b9\u30c6\u30fc\u30bf\u30b9 (None \u3067\u5909\u66f4\u3057\u306a\u3044)\n        due: \u65b0\u671f\u9650\u6587\u5b57\u5217 (None \u3067\u5909\u66f4\u3057\u306a\u3044)\n    \"\"\"\n    from logic.commands.task_commands import UpdateTaskCommand\n    from logic.queries.task_queries import GetTaskByIdQuery\n\n    tid = uuid.UUID(task_id)\n\n    def prompt_interactive() -&gt; tuple[str | None, str | None, TaskStatus | None, str | None]:\n        new_title = questionary.text(\"New Title(blank=skip)\").ask() or None\n        new_desc = questionary.text(\"New Description(blank=skip)\").ask() or None\n        new_status: TaskStatus | None = None\n        if questionary.confirm(\"Change status?\").ask():\n            status_choice = questionary.select(\"Status\", choices=[s.value for s in TaskStatus]).ask()\n            if status_choice:\n                new_status = TaskStatus(status_choice)\n        new_due: str | None = None\n        if questionary.confirm(\"Change due date?\").ask():\n            new_due = questionary.text(\"YYYY-MM-DD(blank=skip)\").ask() or None\n        return new_title, new_desc, new_status, new_due\n\n    if title is None and description is None and status is None and due is None:\n        title, description, status, due = prompt_interactive()\n\n    # \u671f\u9650\u5909\u63db\n    due_date: date | None = None\n    if due:\n        try:\n            due_date = date.fromisoformat(due)\n        except ValueError:\n            console.print(\"[yellow]Invalid date -&gt; ignore[/yellow]\")\n    current = _get_task(GetTaskByIdQuery(task_id=tid))\n    if current.result is None:\n        console.print(\"[red]Task not found[/red]\")\n        raise typer.Exit(code=1)\n    current_task = current.result\n    title = title or current_task.title\n    if description is None:\n        description = current_task.description\n    status = status or current_task.status\n\n    cmd = UpdateTaskCommand(task_id=tid, title=title, description=description or \"\", status=status, due_date=due_date)\n    updated = _update_task(cmd)\n    console.print(\n        f\"[green]Updated:[/green] {updated.result.title} ({updated.result.id}) Elapsed: {updated.elapsed:.2f}s\"\n    )\n</code></pre>"},{"location":"dev/cli/task/#src.cli.commands.task.delete_task","title":"<code>delete_task(task_id, force=typer.Option(default=False, help='\u78ba\u8a8d\u306a\u3057'))</code>","text":"<p>\u30bf\u30b9\u30af\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u524a\u9664\u5bfe\u8c61 UUID</p> \u5fc5\u9808 <code>force</code> <code>bool</code> <p>\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u7701\u7565\u3059\u308b\u304b</p> <code>Option(default=False, help='\u78ba\u8a8d\u306a\u3057')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"delete\", help=\"\u30bf\u30b9\u30af\u524a\u9664\")\n@handle_cli_errors()\ndef delete_task(task_id: str, force: bool = typer.Option(default=False, help=\"\u78ba\u8a8d\u306a\u3057\")) -&gt; None:\n    \"\"\"\u30bf\u30b9\u30af\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u524a\u9664\u5bfe\u8c61 UUID\n        force: \u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u7701\u7565\u3059\u308b\u304b\n    \"\"\"\n    from logic.commands.task_commands import DeleteTaskCommand\n\n    tid = uuid.UUID(task_id)\n    if (not force) and (not questionary.confirm(\"Delete this task?\").ask()):\n        console.print(\"[yellow]Cancelled[/yellow]\")\n        raise typer.Exit(code=1)\n    deleted = _delete_task(DeleteTaskCommand(task_id=tid))\n    console.print(f\"[red]Deleted:[/red] {tid} Elapsed: {deleted.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task/#src.cli.commands.task.change_status","title":"<code>change_status(task_id, new_status)</code>","text":"<p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u5909\u66f4\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u5bfe\u8c61\u30bf\u30b9\u30af UUID</p> \u5fc5\u9808 <code>new_status</code> <code>TaskStatus</code> <p>\u65b0\u3057\u3044\u30b9\u30c6\u30fc\u30bf\u30b9</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"status\", help=\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\")\n@handle_cli_errors()\ndef change_status(task_id: str, new_status: TaskStatus) -&gt; None:\n    \"\"\"\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u5909\u66f4\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u5bfe\u8c61\u30bf\u30b9\u30af UUID\n        new_status: \u65b0\u3057\u3044\u30b9\u30c6\u30fc\u30bf\u30b9\n    \"\"\"\n    from logic.commands.task_commands import UpdateTaskCommand\n    from logic.queries.task_queries import GetTaskByIdQuery\n\n    tid = uuid.UUID(task_id)\n    current = _get_task(GetTaskByIdQuery(task_id=tid))\n    if current.result is None:\n        console.print(\"[red]Not found[/red]\")\n        raise typer.Exit(code=1)\n    cmd = UpdateTaskCommand(\n        task_id=tid,\n        title=current.result.title,\n        description=current.result.description or \"\",\n        status=new_status,\n        due_date=current.result.due_date,\n    )\n    updated = _change_status(cmd)\n    console.print(f\"[green]Status -&gt; {updated.result.status.value}[/green] Elapsed: {updated.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task/#src.cli.commands.task.task_stats","title":"<code>task_stats(show_overdue=typer.Option(default=True, help='\u671f\u9650\u8d85\u904e\u4ef6\u6570\u3092\u8868\u793a\u3059\u308b\u304b', rich_help_panel='Filters'))</code>","text":"<p>\u30bf\u30b9\u30af\u4ef6\u6570\u306e\u7d71\u8a08 (today/completed/overdue) \u3092\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>show_overdue</code> <code>bool</code> <p>\u671f\u9650\u8d85\u904e\u3092\u8868\u793a\u3059\u308b\u304b\u3069\u3046\u304b</p> <code>Option(default=True, help='\u671f\u9650\u8d85\u904e\u4ef6\u6570\u3092\u8868\u793a\u3059\u308b\u304b', rich_help_panel='Filters')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task.py</code> <pre><code>@app.command(\"stats\", help=\"\u30bf\u30b9\u30af\u4ef6\u6570\u7d71\u8a08\u8868\u793a (today/completed/overdue)\")\n@handle_cli_errors()\ndef task_stats(\n    show_overdue: bool = typer.Option(\n        default=True,\n        help=\"\u671f\u9650\u8d85\u904e\u4ef6\u6570\u3092\u8868\u793a\u3059\u308b\u304b\",\n        rich_help_panel=\"Filters\",\n    ),\n) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30bf\u30b9\u30af\u4ef6\u6570\u306e\u7d71\u8a08 (today/completed/overdue) \u3092\u8868\u793a\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        show_overdue: \u671f\u9650\u8d85\u904e\u3092\u8868\u793a\u3059\u308b\u304b\u3069\u3046\u304b\n    \"\"\"\n    today_res = _get_today_count()\n    completed_res = _get_completed_count()\n    overdue_res = _get_overdue_count() if show_overdue else None\n\n    # \u6700\u5927\u306eelapsed\u3092\u4ee3\u8868\u5024\u3068\u3059\u308b\uff083\u56de\u8a08\u6e2c\u3055\u308c\u308b\u305f\u3081\uff09\n    elapsed = max(\n        today_res.elapsed,\n        completed_res.elapsed,\n        overdue_res.elapsed if overdue_res is not None else 0.0,\n    )\n    _print_stats(\n        today=today_res.result,\n        completed=completed_res.result,\n        overdue=overdue_res.result if overdue_res is not None else 0,\n        elapsed=elapsed,\n    )\n</code></pre>"},{"location":"dev/cli/task_qa/","title":"Task Quick Actions (<code>task-qa</code>)","text":"<p>\u30bf\u30b9\u30af\u751f\u6210\u3092\u9ad8\u901f\u5316\u3059\u308b\u305f\u3081\u306e\u5b9a\u578b\u30a2\u30af\u30b7\u30e7\u30f3\u7fa4\u3092\u64cd\u4f5c\u3059\u308b CLI \u30b0\u30eb\u30fc\u30d7\u3067\u3059\u3002</p>"},{"location":"dev/cli/task_qa/#_1","title":"\u30b3\u30de\u30f3\u30c9\u4e00\u89a7","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>list</code> \u767b\u9332\u6e08\u307f\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u3092\u8868\u793a <code>describe</code> \u6307\u5b9a\u30ad\u30fc\u306e\u8a73\u7d30 (\u8aac\u660e / \u30d7\u30ed\u30f3\u30d7\u30c8 / \u30bf\u30b0\u306a\u3069) \u3092\u8868\u793a <code>create</code> \u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u30bf\u30b9\u30af\u751f\u6210"},{"location":"dev/cli/task_qa/#_2","title":"\u4ee3\u8868\u7684\u306a\u5229\u7528\u30b7\u30ca\u30ea\u30aa","text":"<ol> <li>\u3069\u3093\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u3042\u308b\u304b\u628a\u63e1\u3057\u305f\u3044 \u2192 <code>list</code></li> <li>\u5177\u4f53\u7684\u306a\u30a2\u30af\u30b7\u30e7\u30f3\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u305f\u3044 \u2192 <code>describe &lt;key&gt;</code></li> <li>\u3059\u3050\u306b\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3057\u305f\u3044 \u2192 <code>create &lt;key&gt;</code></li> </ol>"},{"location":"dev/cli/task_qa/#_3","title":"\u4f8b","text":"<pre><code># \u4e00\u89a7\u8868\u793a\npoe cli task-qa list\n\n# \u8a73\u7d30\u8868\u793a\npoe cli task-qa describe daily_reflection\n\n# \u30bf\u30b9\u30af\u4f5c\u6210 (INBOX \u3078\u8ffd\u52a0)\npoe cli task-qa create daily_reflection\n</code></pre> <p><code>describe</code> \u306f Rich Panel \u3067\u4ee5\u4e0b\u3092\u51fa\u529b\u3057\u307e\u3059:</p> <ul> <li>Key</li> <li>\u8aac\u660e</li> <li>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u672c\u6587</li> <li>\u30bf\u30b0 / \u4ed8\u4e0e\u4e88\u5b9a\u30b9\u30c6\u30fc\u30bf\u30b9</li> </ul> <p><code>create</code> \u306f\u751f\u6210\u3055\u308c\u305f\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\u3092\u8868\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"dev/cli/task_qa/#_4","title":"\u30a8\u30e9\u30fc\u30b1\u30fc\u30b9","text":"\u30b1\u30fc\u30b9 \u6319\u52d5 \u5b58\u5728\u3057\u306a\u3044 key <code>ResourceNotFoundError</code> \u3092\u6355\u6349\u3057\u30e6\u30fc\u30b6\u5411\u3051\u8b66\u544a\u8868\u793a \u30b9\u30c8\u30ec\u30fc\u30b8\u4e0d\u6574\u5408 \u30ed\u30b0\u51fa\u529b\u3057 CLI \u306f\u5931\u6557\u30b3\u30fc\u30c9 <p>\u5b9f\u88c5\u53c2\u7167: <code>src/cli/commands/task_qa.py</code>\u3002</p>"},{"location":"dev/cli/task_status/","title":"Task Status / Board (<code>task-status</code>)","text":"<p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30fb\u30dc\u30fc\u30c9\u5217\u69cb\u6210\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e CLI \u30b0\u30eb\u30fc\u30d7\u3067\u3059\u3002</p>"},{"location":"dev/cli/task_status/#_1","title":"\u30b3\u30de\u30f3\u30c9","text":"\u30b3\u30de\u30f3\u30c9 \u8aac\u660e <code>displays</code> \u8868\u793a\u7528\u30b9\u30c6\u30fc\u30bf\u30b9\u30bb\u30c3\u30c8 (\u96c6\u8a08\u3084\u30d3\u30e5\u30fc\u3067\u5229\u7528) \u3092\u4e00\u89a7\u8868\u793a <code>board</code> \u30ab\u30f3\u30d0\u30f3\u5217 (\u30b9\u30c6\u30fc\u30bf\u30b9\u914d\u5217) \u3092\u8868\u793a"},{"location":"dev/cli/task_status/#_2","title":"\u4f8b","text":"<pre><code>poe cli task-status displays\npoe cli task-status board\n</code></pre>"},{"location":"dev/cli/task_status/#displays","title":"<code>displays</code> \u51fa\u529b","text":"<p>Rich Table \u3067 \u4e0b\u8a18\u306e\u3088\u3046\u306a\u96c6\u5408\u3092\u8868\u793a (\u4f8b):</p> <pre><code>INBOX / TODO / DOING / WAITING / DONE / ARCHIVED\nFOCUS / BACKLOG / COMPLETED_TODAY\n</code></pre>"},{"location":"dev/cli/task_status/#board","title":"<code>board</code> \u51fa\u529b","text":"<p>\u30dc\u30fc\u30c9\u5217\u3068\u306a\u308b\u30b9\u30c6\u30fc\u30bf\u30b9\u914d\u5217\u3092\u5de6 \u2192 \u53f3\u306e\u9806\u5e8f\u3067\u8868\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"dev/cli/task_status/#_3","title":"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9","text":"<ul> <li>\u65b0\u3057\u3044\u30d3\u30e5\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u969b\u306b\u5229\u7528\u3059\u308b\u30b9\u30c6\u30fc\u30bf\u30b9\u96c6\u5408\u3092\u628a\u63e1</li> <li>\u5916\u90e8\u9023\u643a (Notion \u7b49) \u306e\u30ab\u30e9\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\u691c\u8a0e</li> </ul> <p>\u5b9f\u88c5\u53c2\u7167: <code>src/cli/commands/task_status.py</code>\u3002</p>"},{"location":"dev/cli/task_tag/","title":"Task-Tag \u30b3\u30de\u30f3\u30c9","text":"<p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u4ed8\u3051\u7ba1\u7406\u3002\u30bf\u30b9\u30af\u3078\u30bf\u30b0\u3092\u4ed8\u4e0e / \u89e3\u9664\u3057\u305f\u308a\u3001\u30d5\u30a3\u30eb\u30bf\u4ed8\u304d\u3067\u95a2\u9023\u4e00\u89a7\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"dev/cli/task_tag/#_1","title":"\u4e3b\u306a\u30b3\u30de\u30f3\u30c9","text":"\u30b3\u30de\u30f3\u30c9\u4f8b \u8aac\u660e <code>poe cli task-tag add &lt;TASK_ID&gt; &lt;TAG_ID&gt;</code> \u30bf\u30b9\u30af\u3078\u30bf\u30b0\u3092\u4ed8\u4e0e <code>poe cli task-tag remove &lt;TASK_ID&gt; &lt;TAG_ID&gt;</code> \u30bf\u30b9\u30af\u304b\u3089\u7279\u5b9a\u30bf\u30b0\u3092\u89e3\u9664 <code>poe cli task-tag list</code> \u3059\u3079\u3066\u306e\u95a2\u9023\u3092\u4e00\u89a7 <code>poe cli task-tag list --task &lt;TASK_ID&gt;</code> \u7279\u5b9a\u30bf\u30b9\u30af\u306b\u7d10\u3065\u304f\u30bf\u30b0\u4e00\u89a7 <code>poe cli task-tag list --tag &lt;TAG_ID&gt;</code> \u7279\u5b9a\u30bf\u30b0\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u30bf\u30b9\u30af\u4e00\u89a7 <code>poe cli task-tag clear-task &lt;TASK_ID&gt;</code> \u30bf\u30b9\u30af\u306b\u4ed8\u4e0e\u3055\u308c\u305f\u5168\u30bf\u30b0\u89e3\u9664 <code>poe cli task-tag clear-tag &lt;TAG_ID&gt;</code> \u30bf\u30b0\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u5168\u30bf\u30b9\u30af\u89e3\u9664 <code>poe cli task-tag exists &lt;TASK_ID&gt; &lt;TAG_ID&gt;</code> \u5b58\u5728\u78ba\u8a8d (exit code 0/1)"},{"location":"dev/cli/task_tag/#_2","title":"\u4f8b","text":"<pre><code># \u4ed8\u4e0e\npoe cli task-tag add 11111111-1111-1111-1111-111111111111 22222222-2222-2222-2222-222222222222\n\n# \u4e00\u89a7 (\u30bf\u30b9\u30af\u30d5\u30a3\u30eb\u30bf)\npoe cli task-tag list --task 11111111-1111-1111-1111-111111111111\n\n# \u5b58\u5728\u78ba\u8a8d (\u30b7\u30a7\u30eb\u6761\u4ef6\u5206\u5c90\u306b\u5229\u7528)\npoe cli task-tag exists 11111111-1111-1111-1111-111111111111 22222222-2222-2222-2222-222222222222 &amp;&amp; echo OK\n</code></pre>"},{"location":"dev/cli/task_tag/#_3","title":"\u5185\u90e8\u30d8\u30eb\u30d1\u30fc\u5bfe\u5fdc\u8868","text":"\u30d8\u30eb\u30d1\u30fc \u8aac\u660e Service \u30e1\u30bd\u30c3\u30c9 <code>_create_relation</code> \u95a2\u9023\u4f5c\u6210 <code>create_task_tag</code> <code>_delete_relation</code> \u5358\u4e00\u95a2\u9023\u524a\u9664 <code>delete_task_tag</code> <code>_list_all</code> \u5168\u95a2\u9023\u53d6\u5f97 <code>get_all_task_tags</code> <code>_list_by_task</code> \u30bf\u30b9\u30af ID \u3067\u7d5e\u308a\u8fbc\u307f <code>get_task_tags_by_task_id</code> <code>_list_by_tag</code> \u30bf\u30b0 ID \u3067\u7d5e\u308a\u8fbc\u307f <code>get_task_tags_by_tag_id</code> <code>_get_single</code> \u5358\u4e00\u53d6\u5f97 <code>get_task_tag_by_task_and_tag</code> <code>_exists</code> \u5b58\u5728\u78ba\u8a8d <code>check_task_tag_exists</code> <code>_clear_task</code> \u30bf\u30b9\u30af\u95a2\u9023\u4e00\u62ec\u524a\u9664 <code>delete_task_tags_by_task_id</code> <code>_clear_tag</code> \u30bf\u30b0\u95a2\u9023\u4e00\u62ec\u524a\u9664 <code>delete_task_tags_by_tag_id</code>"},{"location":"dev/cli/task_tag/#api","title":"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>Task-Tag relation CLI commands.</p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u4ed8\u3051\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3002</p>"},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.app","title":"<code>app = typer.Typer(help='\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u95a2\u9023\u64cd\u4f5c')</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.console","title":"<code>console = Console()</code>  <code>module-attribute</code>","text":""},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.add","title":"<code>add(task_id, tag_id)</code>","text":"<p>\u30bf\u30b9\u30af\u306b\u30bf\u30b0\u3092\u95a2\u9023\u4ed8\u3051\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u30bf\u30b9\u30af UUID</p> \u5fc5\u9808 <code>tag_id</code> <code>str</code> <p>\u30bf\u30b0 UUID</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task_tag.py</code> <pre><code>@app.command(\"add\", help=\"\u30bf\u30b9\u30af\u3078\u30bf\u30b0\u4ed8\u4e0e\")\n@handle_cli_errors()\ndef add(task_id: str, tag_id: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30bf\u30b9\u30af\u306b\u30bf\u30b0\u3092\u95a2\u9023\u4ed8\u3051\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u30bf\u30b9\u30af UUID\n        tag_id: \u30bf\u30b0 UUID\n    \"\"\"\n    from logic.commands.task_tag_commands import CreateTaskTagCommand\n\n    t_uuid = uuid.UUID(task_id)\n    tag_uuid = uuid.UUID(tag_id)\n    created = _create_relation(CreateTaskTagCommand(task_id=t_uuid, tag_id=tag_uuid))\n    console.print(\n        f\"[green]Linked:[/green] task={created.result.task_id} tag={created.result.tag_id} \"\n        f\"Elapsed: {created.elapsed:.2f}s\"\n    )\n</code></pre>"},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.remove","title":"<code>remove(task_id, tag_id)</code>","text":"<p>\u30bf\u30b9\u30af\u304b\u3089\u6307\u5b9a\u30bf\u30b0\u95a2\u9023\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u30bf\u30b9\u30af UUID</p> \u5fc5\u9808 <code>tag_id</code> <code>str</code> <p>\u30bf\u30b0 UUID</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task_tag.py</code> <pre><code>@app.command(\"remove\", help=\"\u30bf\u30b9\u30af\u306e\u7279\u5b9a\u30bf\u30b0\u89e3\u9664\")\n@handle_cli_errors()\ndef remove(task_id: str, tag_id: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30bf\u30b9\u30af\u304b\u3089\u6307\u5b9a\u30bf\u30b0\u95a2\u9023\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u30bf\u30b9\u30af UUID\n        tag_id: \u30bf\u30b0 UUID\n    \"\"\"\n    from logic.commands.task_tag_commands import DeleteTaskTagCommand\n\n    t_uuid = uuid.UUID(task_id)\n    tag_uuid = uuid.UUID(tag_id)\n    deleted = _delete_relation(DeleteTaskTagCommand(task_id=t_uuid, tag_id=tag_uuid))\n    console.print(f\"[red]Removed:[/red] task={t_uuid} tag={tag_uuid} Elapsed: {deleted.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.list_relations","title":"<code>list_relations(task=typer.Option(None, '--task', help='\u7279\u5b9a\u30bf\u30b9\u30afID\u3067\u7d5e\u308a\u8fbc\u307f'), tag=typer.Option(None, '--tag', help='\u7279\u5b9a\u30bf\u30b0ID\u3067\u7d5e\u308a\u8fbc\u307f'))</code>","text":"<p>\u30bf\u30b9\u30af-\u30bf\u30b0\u95a2\u9023\u3092\u4e00\u89a7\u8868\u793a (\u30bf\u30b9\u30af or \u30bf\u30b0\u3067\u30d5\u30a3\u30eb\u30bf\u53ef) \u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task</code> <code>str | None</code> <p>\u30bf\u30b9\u30af UUID (\u30d5\u30a3\u30eb\u30bf)</p> <code>Option(None, '--task', help='\u7279\u5b9a\u30bf\u30b9\u30afID\u3067\u7d5e\u308a\u8fbc\u307f')</code> <code>tag</code> <code>str | None</code> <p>\u30bf\u30b0 UUID (\u30d5\u30a3\u30eb\u30bf)</p> <code>Option(None, '--tag', help='\u7279\u5b9a\u30bf\u30b0ID\u3067\u7d5e\u308a\u8fbc\u307f')</code> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task_tag.py</code> <pre><code>@app.command(\"list\", help=\"\u95a2\u9023\u4e00\u89a7 (\u30d5\u30a3\u30eb\u30bf\u5bfe\u5fdc)\")\n@handle_cli_errors()\ndef list_relations(\n    task: str | None = typer.Option(None, \"--task\", help=\"\u7279\u5b9a\u30bf\u30b9\u30afID\u3067\u7d5e\u308a\u8fbc\u307f\"),\n    tag: str | None = typer.Option(None, \"--tag\", help=\"\u7279\u5b9a\u30bf\u30b0ID\u3067\u7d5e\u308a\u8fbc\u307f\"),\n) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30bf\u30b9\u30af-\u30bf\u30b0\u95a2\u9023\u3092\u4e00\u89a7\u8868\u793a (\u30bf\u30b9\u30af or \u30bf\u30b0\u3067\u30d5\u30a3\u30eb\u30bf\u53ef) \u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task: \u30bf\u30b9\u30af UUID (\u30d5\u30a3\u30eb\u30bf)\n        tag: \u30bf\u30b0 UUID (\u30d5\u30a3\u30eb\u30bf)\n    \"\"\"\n    from logic.queries.task_tag_queries import (\n        GetAllTaskTagsQuery,\n        GetTaskTagsByTagIdQuery,\n        GetTaskTagsByTaskIdQuery,\n    )\n\n    if task and tag:\n        console.print(\"[yellow]--task \u3068 --tag \u306f\u540c\u6642\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093[/yellow]\")\n        raise typer.Exit(code=1)\n\n    if task:\n        rows = _list_by_task(GetTaskTagsByTaskIdQuery(task_id=uuid.UUID(task)))\n        _print_relations(rows.result, f\"task={task}\", rows.elapsed)\n        return\n    if tag:\n        rows = _list_by_tag(GetTaskTagsByTagIdQuery(tag_id=uuid.UUID(tag)))\n        _print_relations(rows.result, f\"tag={tag}\", rows.elapsed)\n        return\n\n    rows = _list_all(GetAllTaskTagsQuery())\n    _print_relations(rows.result, \"all\", rows.elapsed)\n</code></pre>"},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.clear_task","title":"<code>clear_task(task_id)</code>","text":"<p>\u6307\u5b9a\u30bf\u30b9\u30af\u306b\u7d10\u3065\u304f\u5168\u3066\u306e\u30bf\u30b0\u95a2\u9023\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u30bf\u30b9\u30af UUID</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task_tag.py</code> <pre><code>@app.command(\"clear-task\", help=\"\u30bf\u30b9\u30af\u306e\u5168\u30bf\u30b0\u95a2\u9023\u524a\u9664\")\n@handle_cli_errors()\ndef clear_task(task_id: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u6307\u5b9a\u30bf\u30b9\u30af\u306b\u7d10\u3065\u304f\u5168\u3066\u306e\u30bf\u30b0\u95a2\u9023\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u30bf\u30b9\u30af UUID\n    \"\"\"\n    from logic.commands.task_tag_commands import DeleteTaskTagsByTaskCommand\n\n    t_uuid = uuid.UUID(task_id)\n    cleared = _clear_task(DeleteTaskTagsByTaskCommand(task_id=t_uuid))\n    console.print(f\"[red]Cleared task relations:[/red] task={t_uuid} Elapsed: {cleared.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.clear_tag","title":"<code>clear_tag(tag_id)</code>","text":"<p>\u6307\u5b9a\u30bf\u30b0\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u5168\u30bf\u30b9\u30af\u3068\u306e\u95a2\u9023\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>tag_id</code> <code>str</code> <p>\u30bf\u30b0 UUID</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task_tag.py</code> <pre><code>@app.command(\"clear-tag\", help=\"\u30bf\u30b0\u306e\u5168\u30bf\u30b9\u30af\u95a2\u9023\u524a\u9664\")\n@handle_cli_errors()\ndef clear_tag(tag_id: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u6307\u5b9a\u30bf\u30b0\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u5168\u30bf\u30b9\u30af\u3068\u306e\u95a2\u9023\u3092\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        tag_id: \u30bf\u30b0 UUID\n    \"\"\"\n    from logic.commands.task_tag_commands import DeleteTaskTagsByTagCommand\n\n    tag_uuid = uuid.UUID(tag_id)\n    cleared = _clear_tag(DeleteTaskTagsByTagCommand(tag_id=tag_uuid))\n    console.print(f\"[red]Cleared tag relations:[/red] tag={tag_uuid} Elapsed: {cleared.elapsed:.2f}s\")\n</code></pre>"},{"location":"dev/cli/task_tag/#src.cli.commands.task_tag.exists","title":"<code>exists(task_id, tag_id)</code>","text":"<p>\u30bf\u30b9\u30af-\u30bf\u30b0\u95a2\u9023\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3057 exit code \u3092\u8fd4\u3059\u30b3\u30de\u30f3\u30c9 [AI GENERATED]</p> <p>\u5f15\u6570\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30c7\u30d5\u30a9\u30eb\u30c8 <code>task_id</code> <code>str</code> <p>\u30bf\u30b9\u30af UUID</p> \u5fc5\u9808 <code>tag_id</code> <code>str</code> <p>\u30bf\u30b0 UUID</p> \u5fc5\u9808 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/cli/commands/task_tag.py</code> <pre><code>@app.command(\"exists\", help=\"\u7279\u5b9a\u30bf\u30b9\u30af-\u30bf\u30b0\u95a2\u9023\u304c\u5b58\u5728\u3059\u308b\u304b (exit code 0/1)\")\n@handle_cli_errors()\ndef exists(task_id: str, tag_id: str) -&gt; None:  # [AI GENERATED]\n    \"\"\"\u30bf\u30b9\u30af-\u30bf\u30b0\u95a2\u9023\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3057 exit code \u3092\u8fd4\u3059\u30b3\u30de\u30f3\u30c9 [AI GENERATED]\n\n    Args:\n        task_id: \u30bf\u30b9\u30af UUID\n        tag_id: \u30bf\u30b0 UUID\n    \"\"\"\n    from logic.queries.task_tag_queries import CheckTaskTagExistsQuery\n\n    t_uuid = uuid.UUID(task_id)\n    tag_uuid = uuid.UUID(tag_id)\n    res = _exists(CheckTaskTagExistsQuery(task_id=t_uuid, tag_id=tag_uuid))\n    console.print(\n        f\"[blue]Exists:[/blue] task={t_uuid} tag={tag_uuid} -&gt; {'YES' if res.result else 'NO'} \"\n        f\"Elapsed: {res.elapsed:.2f}s\"\n    )\n    raise typer.Exit(code=0 if res.result else 1)\n</code></pre>"},{"location":"dev/reference/commands_queries/","title":"\u30b3\u30de\u30f3\u30c9 / \u30af\u30a8\u30ea\u4e00\u89a7","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u5c64\u306b\u51e6\u7406\u3092\u4f9d\u983c\u3059\u308b\u305f\u3081\u306e 2 \u7a2e\u985e\u306e DTO (Command / Query) \u3092\u307e\u3068\u3081\u3066\u53c2\u7167\u3067\u304d\u308b\u30da\u30fc\u30b8\u3067\u3059\u3002UI \u3084 Agent \u304b\u3089\u30c9\u30e1\u30a4\u30f3\u64cd\u4f5c\u3092\u884c\u3046\u969b\u306b\u3001\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u304b\uff08Command\uff09\u3001\u53d6\u5f97\u3059\u308b\u304b\uff08Query\uff09\u3067\u4f7f\u3044\u5206\u3051\u307e\u3059\u3002</p> \u533a\u5206 \u76ee\u7684 \u526f\u4f5c\u7528 \u547d\u540d\u4f8b \u4ee3\u8868\u30e1\u30bd\u30c3\u30c9/\u5909\u63db Command \u72b6\u614b\u5909\u66f4(\u4f5c\u6210/\u66f4\u65b0/\u524a\u9664/\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4) \u3042\u308a CreateTaskCommand to_task_create(), to_project_update() \u306a\u3069 Query \u72b6\u614b\u53d6\u5f97(\u691c\u7d22/\u4e00\u89a7/\u4ef6\u6570/\u5b58\u5728\u78ba\u8a8d) \u306a\u3057 GetTasksByStatusQuery (\u5909\u63db\u4e0d\u8981: \u6761\u4ef6\u5024\u306e\u307f)"},{"location":"dev/reference/commands_queries/#command","title":"Command \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066","text":"<p>\u66f8\u304d\u8fbc\u307f\u7cfb\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff08\u72b6\u614b\u5909\u66f4\uff09\u3092\u4f9d\u983c\u3059\u308b\u305f\u3081\u306e\u4e0d\u5909 DTO \u3067\u3059\u3002\u547c\u3073\u51fa\u3057\u5074\u306f\u5fc5\u8981\u6700\u5c0f\u9650\u306e\u5165\u529b\u3092\u307e\u3068\u3081\u3001Application Service \u306b\u6e21\u3057\u307e\u3059\u3002</p> <p>\u8a2d\u8a08\u6307\u91dd:</p> <ul> <li>1 \u30b3\u30de\u30f3\u30c9 = 1 \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9 (\u526f\u4f5c\u7528\u3092\u4f34\u3046\u64cd\u4f5c)</li> <li>dataclass \u306b\u3088\u308a\u8efd\u91cf\u3067\u30c6\u30b9\u30c8\u5bb9\u6613</li> <li><code>to_xxx_create</code> / <code>to_xxx_update</code> \u306a\u3069\u3067\u30e2\u30c7\u30eb\u3078\u5909\u63db</li> <li>Validation \u306f\u4e0a\u4f4d (UI/Service) \u3067\u5b9f\u65bd\u3057\u3001DTO \u81ea\u4f53\u306f\u30c7\u30fc\u30bf\u30ad\u30e3\u30ea\u30a2</li> </ul>"},{"location":"dev/reference/commands_queries/#_2","title":"\u5229\u7528\u4f8b (\u30bf\u30b9\u30af\u4f5c\u6210)","text":"<pre><code>from logic.commands.task_commands import CreateTaskCommand\nfrom logic.application_services.task_application_service import TaskApplicationService\n\ncmd = CreateTaskCommand(title=\"\u8abf\u67fb\", description=\"\u4ed5\u69d8\u78ba\u8a8d\")\nservice = TaskApplicationService(...)\nservice.create_task(cmd)\n</code></pre>"},{"location":"dev/reference/commands_queries/#query","title":"Query \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066","text":"<p>\u8aad\u307f\u53d6\u308a\u7cfb\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff08\u72b6\u614b\u53d6\u5f97\uff09\u3092\u4f9d\u983c\u3059\u308b\u305f\u3081\u306e DTO \u3067\u3059\u3002\u30d5\u30a3\u30eb\u30bf\u6761\u4ef6\u3092\u30ab\u30d7\u30bb\u30eb\u5316\u3057\u30b5\u30fc\u30d3\u30b9\u5c64\u306b\u6e21\u3057\u307e\u3059\u3002</p> <p>\u8a2d\u8a08\u6307\u91dd:</p> <ul> <li>1 \u30af\u30a8\u30ea = 1 \u8aad\u307f\u53d6\u308a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9 (\u526f\u4f5c\u7528\u306a\u3057)</li> <li>dataclass \u306b\u3088\u308a\u30b7\u30f3\u30d7\u30eb</li> <li>\u6761\u4ef6/\u8b58\u5225\u5b50\u306e\u307f\u3092\u4fdd\u6301\u3057\u30ed\u30b8\u30c3\u30af\u3092\u6301\u305f\u306a\u3044</li> <li>\u8907\u96d1\u5316\u3059\u308b\u5834\u5408\u306f\u65b0\u305f\u306a\u5c02\u7528\u30af\u30a8\u30ea\u3092\u8ffd\u52a0\u3057\u8cac\u52d9\u5206\u96e2</li> </ul>"},{"location":"dev/reference/commands_queries/#_3","title":"\u5229\u7528\u4f8b (\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30bf\u30b9\u30af\u53d6\u5f97)","text":"<pre><code>from logic.queries.task_queries import GetTasksByStatusQuery\nfrom logic.application_services.task_application_service import TaskApplicationService\nfrom models import TaskStatus\n\nq = GetTasksByStatusQuery(status=TaskStatus.INBOX)\nservice = TaskApplicationService(...)\ntasks = service.get_tasks_by_status(q)\n</code></pre>"},{"location":"dev/reference/commands_queries/#api","title":"\u30b3\u30de\u30f3\u30c9 API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":""},{"location":"dev/reference/commands_queries/#_4","title":"\u30bf\u30b9\u30af\u95a2\u9023\u30b3\u30de\u30f3\u30c9","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands","title":"<code>src.logic.commands.task_commands</code>","text":"<p>\u30bf\u30b9\u30af\u95a2\u9023\u306e\u30b3\u30de\u30f3\u30c9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bCommand DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand","title":"<code>CreateTaskCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u4f5c\u6210\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_commands.py</code> <pre><code>@dataclass\nclass CreateTaskCommand:\n    \"\"\"\u30bf\u30b9\u30af\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    title: str\n    description: str = \"\"\n    status: TaskStatus = TaskStatus.INBOX\n    due_date: date | None = None\n\n    def to_task_create(self) -&gt; TaskCreate:\n        \"\"\"TaskCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            TaskCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return TaskCreate(\n            title=self.title,\n            description=self.description,\n            status=self.status,\n            due_date=self.due_date,\n        )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand.title","title":"<code>title</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand.description","title":"<code>description = ''</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand.status","title":"<code>status = TaskStatus.INBOX</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand.due_date","title":"<code>due_date = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand.__init__","title":"<code>__init__(title, description='', status=TaskStatus.INBOX, due_date=None)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.CreateTaskCommand.to_task_create","title":"<code>to_task_create()</code>","text":"<p>TaskCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>TaskCreate</code> <code>TaskCreate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/task_commands.py</code> <pre><code>def to_task_create(self) -&gt; TaskCreate:\n    \"\"\"TaskCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        TaskCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return TaskCreate(\n        title=self.title,\n        description=self.description,\n        status=self.status,\n        due_date=self.due_date,\n    )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand","title":"<code>UpdateTaskCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u66f4\u65b0\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_commands.py</code> <pre><code>@dataclass\nclass UpdateTaskCommand:\n    \"\"\"\u30bf\u30b9\u30af\u66f4\u65b0\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    task_id: UUID\n    title: str\n    description: str = \"\"\n    status: TaskStatus = TaskStatus.INBOX\n    due_date: date | None = None\n\n    def to_task_update(self) -&gt; TaskUpdate:\n        \"\"\"TaskUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            TaskUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return TaskUpdate(\n            title=self.title,\n            description=self.description,\n            status=self.status,\n            due_date=self.due_date,\n        )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.title","title":"<code>title</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.description","title":"<code>description = ''</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.status","title":"<code>status = TaskStatus.INBOX</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.due_date","title":"<code>due_date = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.__init__","title":"<code>__init__(task_id, title, description='', status=TaskStatus.INBOX, due_date=None)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskCommand.to_task_update","title":"<code>to_task_update()</code>","text":"<p>TaskUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>TaskUpdate</code> <code>TaskUpdate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/task_commands.py</code> <pre><code>def to_task_update(self) -&gt; TaskUpdate:\n    \"\"\"TaskUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        TaskUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return TaskUpdate(\n        title=self.title,\n        description=self.description,\n        status=self.status,\n        due_date=self.due_date,\n    )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.DeleteTaskCommand","title":"<code>DeleteTaskCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u524a\u9664\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_commands.py</code> <pre><code>@dataclass\nclass DeleteTaskCommand:\n    \"\"\"\u30bf\u30b9\u30af\u524a\u9664\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    task_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.DeleteTaskCommand.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.DeleteTaskCommand.__init__","title":"<code>__init__(task_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskStatusCommand","title":"<code>UpdateTaskStatusCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u66f4\u65b0\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_commands.py</code> <pre><code>@dataclass\nclass UpdateTaskStatusCommand:\n    \"\"\"\u30bf\u30b9\u30af\u30b9\u30c6\u30fc\u30bf\u30b9\u66f4\u65b0\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    task_id: UUID\n    new_status: TaskStatus\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskStatusCommand.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskStatusCommand.new_status","title":"<code>new_status</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_commands.UpdateTaskStatusCommand.__init__","title":"<code>__init__(task_id, new_status)</code>","text":""},{"location":"dev/reference/commands_queries/#_5","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u95a2\u9023\u30b3\u30de\u30f3\u30c9","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands","title":"<code>src.logic.commands.project_commands</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u95a2\u9023\u306e\u30b3\u30de\u30f3\u30c9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bCommand DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.CreateProjectCommand","title":"<code>CreateProjectCommand</code>  <code>dataclass</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/project_commands.py</code> <pre><code>@dataclass\nclass CreateProjectCommand:\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    title: str\n    description: str = \"\"\n    status: ProjectStatus = ProjectStatus.ACTIVE\n\n    def to_project_create(self) -&gt; ProjectCreate:\n        \"\"\"ProjectCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            ProjectCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return ProjectCreate(\n            title=self.title,\n            description=self.description,\n            status=self.status,\n        )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.CreateProjectCommand.title","title":"<code>title</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.CreateProjectCommand.description","title":"<code>description = ''</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.CreateProjectCommand.status","title":"<code>status = ProjectStatus.ACTIVE</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.CreateProjectCommand.__init__","title":"<code>__init__(title, description='', status=ProjectStatus.ACTIVE)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.CreateProjectCommand.to_project_create","title":"<code>to_project_create()</code>","text":"<p>ProjectCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>ProjectCreate</code> <code>ProjectCreate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/project_commands.py</code> <pre><code>def to_project_create(self) -&gt; ProjectCreate:\n    \"\"\"ProjectCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        ProjectCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return ProjectCreate(\n        title=self.title,\n        description=self.description,\n        status=self.status,\n    )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand","title":"<code>UpdateProjectCommand</code>  <code>dataclass</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u66f4\u65b0\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/project_commands.py</code> <pre><code>@dataclass\nclass UpdateProjectCommand:\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u66f4\u65b0\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    project_id: UUID\n    title: str | None = None\n    description: str | None = None\n    status: ProjectStatus | None = None\n\n    def to_project_update(self) -&gt; ProjectUpdate:\n        \"\"\"ProjectUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            ProjectUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return ProjectUpdate(\n            title=self.title,\n            description=self.description,\n            status=self.status,\n        )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand.project_id","title":"<code>project_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand.title","title":"<code>title = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand.status","title":"<code>status = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand.__init__","title":"<code>__init__(project_id, title=None, description=None, status=None)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectCommand.to_project_update","title":"<code>to_project_update()</code>","text":"<p>ProjectUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>ProjectUpdate</code> <code>ProjectUpdate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/project_commands.py</code> <pre><code>def to_project_update(self) -&gt; ProjectUpdate:\n    \"\"\"ProjectUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        ProjectUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return ProjectUpdate(\n        title=self.title,\n        description=self.description,\n        status=self.status,\n    )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.DeleteProjectCommand","title":"<code>DeleteProjectCommand</code>  <code>dataclass</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u524a\u9664\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/project_commands.py</code> <pre><code>@dataclass\nclass DeleteProjectCommand:\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u524a\u9664\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    project_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.DeleteProjectCommand.project_id","title":"<code>project_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.DeleteProjectCommand.__init__","title":"<code>__init__(project_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectStatusCommand","title":"<code>UpdateProjectStatusCommand</code>  <code>dataclass</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30b9\u30c6\u30fc\u30bf\u30b9\u66f4\u65b0\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/project_commands.py</code> <pre><code>@dataclass\nclass UpdateProjectStatusCommand:\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30b9\u30c6\u30fc\u30bf\u30b9\u66f4\u65b0\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    project_id: UUID\n    new_status: ProjectStatus\n\n    def to_project_update(self) -&gt; ProjectUpdate:\n        \"\"\"ProjectUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            ProjectUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return ProjectUpdate(status=self.new_status)\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectStatusCommand.project_id","title":"<code>project_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectStatusCommand.new_status","title":"<code>new_status</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectStatusCommand.__init__","title":"<code>__init__(project_id, new_status)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.project_commands.UpdateProjectStatusCommand.to_project_update","title":"<code>to_project_update()</code>","text":"<p>ProjectUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>ProjectUpdate</code> <code>ProjectUpdate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/project_commands.py</code> <pre><code>def to_project_update(self) -&gt; ProjectUpdate:\n    \"\"\"ProjectUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        ProjectUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return ProjectUpdate(status=self.new_status)\n</code></pre>"},{"location":"dev/reference/commands_queries/#_6","title":"\u30bf\u30b0\u95a2\u9023\u30b3\u30de\u30f3\u30c9","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands","title":"<code>src.logic.commands.tag_commands</code>","text":"<p>\u30bf\u30b0\u95a2\u9023\u306e\u30b3\u30de\u30f3\u30c9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bCommand DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.CreateTagCommand","title":"<code>CreateTagCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b0\u4f5c\u6210\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/tag_commands.py</code> <pre><code>@dataclass\nclass CreateTagCommand:\n    \"\"\"\u30bf\u30b0\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    name: str\n\n    def to_tag_create(self) -&gt; TagCreate:\n        \"\"\"TagCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            TagCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return TagCreate(name=self.name)\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.CreateTagCommand.name","title":"<code>name</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.CreateTagCommand.__init__","title":"<code>__init__(name)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.CreateTagCommand.to_tag_create","title":"<code>to_tag_create()</code>","text":"<p>TagCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>TagCreate</code> <code>TagCreate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/tag_commands.py</code> <pre><code>def to_tag_create(self) -&gt; TagCreate:\n    \"\"\"TagCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        TagCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return TagCreate(name=self.name)\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.UpdateTagCommand","title":"<code>UpdateTagCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b0\u66f4\u65b0\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/tag_commands.py</code> <pre><code>@dataclass\nclass UpdateTagCommand:\n    \"\"\"\u30bf\u30b0\u66f4\u65b0\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    tag_id: UUID\n    name: str | None = None\n\n    def to_tag_update(self) -&gt; TagUpdate:\n        \"\"\"TagUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            TagUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return TagUpdate(name=self.name)\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.UpdateTagCommand.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.UpdateTagCommand.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.UpdateTagCommand.__init__","title":"<code>__init__(tag_id, name=None)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.UpdateTagCommand.to_tag_update","title":"<code>to_tag_update()</code>","text":"<p>TagUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>TagUpdate</code> <code>TagUpdate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/tag_commands.py</code> <pre><code>def to_tag_update(self) -&gt; TagUpdate:\n    \"\"\"TagUpdate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        TagUpdate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return TagUpdate(name=self.name)\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.DeleteTagCommand","title":"<code>DeleteTagCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b0\u524a\u9664\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/tag_commands.py</code> <pre><code>@dataclass\nclass DeleteTagCommand:\n    \"\"\"\u30bf\u30b0\u524a\u9664\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.DeleteTagCommand.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.tag_commands.DeleteTagCommand.__init__","title":"<code>__init__(tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#_7","title":"\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u30b3\u30de\u30f3\u30c9","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands","title":"<code>src.logic.commands.task_tag_commands</code>","text":"<p>\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u306e\u30b3\u30de\u30f3\u30c9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bCommand DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.CreateTaskTagCommand","title":"<code>CreateTaskTagCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u4f5c\u6210\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_tag_commands.py</code> <pre><code>@dataclass\nclass CreateTaskTagCommand:\n    \"\"\"\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    task_id: UUID\n    tag_id: UUID\n\n    def to_task_tag_create(self) -&gt; TaskTagCreate:\n        \"\"\"TaskTagCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n        Returns:\n            TaskTagCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n        \"\"\"\n        return TaskTagCreate(\n            task_id=self.task_id,\n            tag_id=self.tag_id,\n        )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.CreateTaskTagCommand.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.CreateTaskTagCommand.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.CreateTaskTagCommand.__init__","title":"<code>__init__(task_id, tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.CreateTaskTagCommand.to_task_tag_create","title":"<code>to_task_tag_create()</code>","text":"<p>TaskTagCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db</p> <p>\u623b\u308a\u5024\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>TaskTagCreate</code> <code>TaskTagCreate</code> <p>\u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c</p> \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f4d\u7f6e\uff1a <code>src/logic/commands/task_tag_commands.py</code> <pre><code>def to_task_tag_create(self) -&gt; TaskTagCreate:\n    \"\"\"TaskTagCreate\u30e2\u30c7\u30eb\u306b\u5909\u63db\n\n    Returns:\n        TaskTagCreate: \u30e2\u30c7\u30eb\u5909\u63db\u7d50\u679c\n    \"\"\"\n    return TaskTagCreate(\n        task_id=self.task_id,\n        tag_id=self.tag_id,\n    )\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagCommand","title":"<code>DeleteTaskTagCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u524a\u9664\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_tag_commands.py</code> <pre><code>@dataclass\nclass DeleteTaskTagCommand:\n    \"\"\"\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u524a\u9664\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    task_id: UUID\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagCommand.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagCommand.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagCommand.__init__","title":"<code>__init__(task_id, tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagsByTaskCommand","title":"<code>DeleteTaskTagsByTaskCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u306e\u3059\u3079\u3066\u306e\u30bf\u30b0\u95a2\u9023\u524a\u9664\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_tag_commands.py</code> <pre><code>@dataclass\nclass DeleteTaskTagsByTaskCommand:\n    \"\"\"\u30bf\u30b9\u30af\u306e\u3059\u3079\u3066\u306e\u30bf\u30b0\u95a2\u9023\u524a\u9664\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    task_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagsByTaskCommand.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagsByTaskCommand.__init__","title":"<code>__init__(task_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagsByTagCommand","title":"<code>DeleteTaskTagsByTagCommand</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b0\u306e\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u95a2\u9023\u524a\u9664\u30b3\u30de\u30f3\u30c9</p> Source code in <code>src/logic/commands/task_tag_commands.py</code> <pre><code>@dataclass\nclass DeleteTaskTagsByTagCommand:\n    \"\"\"\u30bf\u30b0\u306e\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u95a2\u9023\u524a\u9664\u30b3\u30de\u30f3\u30c9\"\"\"\n\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagsByTagCommand.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.commands.task_tag_commands.DeleteTaskTagsByTagCommand.__init__","title":"<code>__init__(tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#api_1","title":"\u30af\u30a8\u30ea API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":""},{"location":"dev/reference/commands_queries/#_8","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u95a2\u9023\u30af\u30a8\u30ea","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries","title":"<code>src.logic.queries.project_queries</code>","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u95a2\u9023\u306e\u30af\u30a8\u30ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bQuery DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetProjectByIdQuery","title":"<code>GetProjectByIdQuery</code>  <code>dataclass</code>","text":"<p>ID\u6307\u5b9a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/project_queries.py</code> <pre><code>@dataclass\nclass GetProjectByIdQuery:\n    \"\"\"ID\u6307\u5b9a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    project_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetProjectByIdQuery.project_id","title":"<code>project_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetProjectByIdQuery.__init__","title":"<code>__init__(project_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetAllProjectsQuery","title":"<code>GetAllProjectsQuery</code>  <code>dataclass</code>","text":"<p>\u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/project_queries.py</code> <pre><code>@dataclass\nclass GetAllProjectsQuery:\n    \"\"\"\u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetAllProjectsQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetProjectsByStatusQuery","title":"<code>GetProjectsByStatusQuery</code>  <code>dataclass</code>","text":"<p>\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/project_queries.py</code> <pre><code>@dataclass\nclass GetProjectsByStatusQuery:\n    \"\"\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    status: ProjectStatus\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetProjectsByStatusQuery.status","title":"<code>status</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetProjectsByStatusQuery.__init__","title":"<code>__init__(status)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.SearchProjectsByTitleQuery","title":"<code>SearchProjectsByTitleQuery</code>  <code>dataclass</code>","text":"<p>\u30bf\u30a4\u30c8\u30eb\u691c\u7d22\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/project_queries.py</code> <pre><code>@dataclass\nclass SearchProjectsByTitleQuery:\n    \"\"\"\u30bf\u30a4\u30c8\u30eb\u691c\u7d22\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    title_query: str\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.SearchProjectsByTitleQuery.title_query","title":"<code>title_query</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.SearchProjectsByTitleQuery.__init__","title":"<code>__init__(title_query)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetActiveProjectsQuery","title":"<code>GetActiveProjectsQuery</code>  <code>dataclass</code>","text":"<p>\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/project_queries.py</code> <pre><code>@dataclass\nclass GetActiveProjectsQuery:\n    \"\"\"\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetActiveProjectsQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetCompletedProjectsQuery","title":"<code>GetCompletedProjectsQuery</code>  <code>dataclass</code>","text":"<p>\u5b8c\u4e86\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/project_queries.py</code> <pre><code>@dataclass\nclass GetCompletedProjectsQuery:\n    \"\"\"\u5b8c\u4e86\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.project_queries.GetCompletedProjectsQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/commands_queries/#_9","title":"\u30bf\u30b0\u95a2\u9023\u30af\u30a8\u30ea","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries","title":"<code>src.logic.queries.tag_queries</code>","text":"<p>\u30bf\u30b0\u95a2\u9023\u306e\u30af\u30a8\u30ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bQuery DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetTagByIdQuery","title":"<code>GetTagByIdQuery</code>  <code>dataclass</code>","text":"<p>ID\u6307\u5b9a\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/tag_queries.py</code> <pre><code>@dataclass\nclass GetTagByIdQuery:\n    \"\"\"ID\u6307\u5b9a\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetTagByIdQuery.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetTagByIdQuery.__init__","title":"<code>__init__(tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetAllTagsQuery","title":"<code>GetAllTagsQuery</code>  <code>dataclass</code>","text":"<p>\u5168\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/tag_queries.py</code> <pre><code>@dataclass\nclass GetAllTagsQuery:\n    \"\"\"\u5168\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetAllTagsQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetTagByNameQuery","title":"<code>GetTagByNameQuery</code>  <code>dataclass</code>","text":"<p>\u540d\u524d\u6307\u5b9a\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/tag_queries.py</code> <pre><code>@dataclass\nclass GetTagByNameQuery:\n    \"\"\"\u540d\u524d\u6307\u5b9a\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    name: str\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetTagByNameQuery.name","title":"<code>name</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.GetTagByNameQuery.__init__","title":"<code>__init__(name)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.SearchTagsByNameQuery","title":"<code>SearchTagsByNameQuery</code>  <code>dataclass</code>","text":"<p>\u540d\u524d\u691c\u7d22\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/tag_queries.py</code> <pre><code>@dataclass\nclass SearchTagsByNameQuery:\n    \"\"\"\u540d\u524d\u691c\u7d22\u30bf\u30b0\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    name_query: str\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.SearchTagsByNameQuery.name_query","title":"<code>name_query</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.SearchTagsByNameQuery.__init__","title":"<code>__init__(name_query)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.CheckTagExistsByNameQuery","title":"<code>CheckTagExistsByNameQuery</code>  <code>dataclass</code>","text":"<p>\u540d\u524d\u306b\u3088\u308b\u30bf\u30b0\u5b58\u5728\u78ba\u8a8d\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/tag_queries.py</code> <pre><code>@dataclass\nclass CheckTagExistsByNameQuery:\n    \"\"\"\u540d\u524d\u306b\u3088\u308b\u30bf\u30b0\u5b58\u5728\u78ba\u8a8d\u30af\u30a8\u30ea\"\"\"\n\n    name: str\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.CheckTagExistsByNameQuery.name","title":"<code>name</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.tag_queries.CheckTagExistsByNameQuery.__init__","title":"<code>__init__(name)</code>","text":""},{"location":"dev/reference/commands_queries/#_10","title":"\u30bf\u30b9\u30af\u95a2\u9023\u30af\u30a8\u30ea","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries","title":"<code>src.logic.queries.task_queries</code>","text":"<p>\u30bf\u30b9\u30af\u95a2\u9023\u306e\u30af\u30a8\u30ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bQuery DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTasksByStatusQuery","title":"<code>GetTasksByStatusQuery</code>  <code>dataclass</code>","text":"<p>\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_queries.py</code> <pre><code>@dataclass\nclass GetTasksByStatusQuery:\n    \"\"\"\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    status: TaskStatus\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTasksByStatusQuery.status","title":"<code>status</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTasksByStatusQuery.__init__","title":"<code>__init__(status)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTodayTasksCountQuery","title":"<code>GetTodayTasksCountQuery</code>  <code>dataclass</code>","text":"<p>\u4eca\u65e5\u306e\u30bf\u30b9\u30af\u4ef6\u6570\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_queries.py</code> <pre><code>@dataclass\nclass GetTodayTasksCountQuery:\n    \"\"\"\u4eca\u65e5\u306e\u30bf\u30b9\u30af\u4ef6\u6570\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTodayTasksCountQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTaskByIdQuery","title":"<code>GetTaskByIdQuery</code>  <code>dataclass</code>","text":"<p>ID\u6307\u5b9a\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_queries.py</code> <pre><code>@dataclass\nclass GetTaskByIdQuery:\n    \"\"\"ID\u6307\u5b9a\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    task_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTaskByIdQuery.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetTaskByIdQuery.__init__","title":"<code>__init__(task_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetAllTasksByStatusDictQuery","title":"<code>GetAllTasksByStatusDictQuery</code>  <code>dataclass</code>","text":"<p>\u5168\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_queries.py</code> <pre><code>@dataclass\nclass GetAllTasksByStatusDictQuery:\n    \"\"\"\u5168\u30b9\u30c6\u30fc\u30bf\u30b9\u5225\u30bf\u30b9\u30af\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_queries.GetAllTasksByStatusDictQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/commands_queries/#_11","title":"\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u30af\u30a8\u30ea","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries","title":"<code>src.logic.queries.task_tag_queries</code>","text":"<p>\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u306e\u30af\u30a8\u30ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <p>Application Service\u5c64\u3067\u4f7f\u7528\u3059\u308bQuery DTOs (Data Transfer Objects)</p>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagsByTaskIdQuery","title":"<code>GetTaskTagsByTaskIdQuery</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30afID\u6307\u5b9a\u3067\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_tag_queries.py</code> <pre><code>@dataclass\nclass GetTaskTagsByTaskIdQuery:\n    \"\"\"\u30bf\u30b9\u30afID\u6307\u5b9a\u3067\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    task_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagsByTaskIdQuery.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagsByTaskIdQuery.__init__","title":"<code>__init__(task_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagsByTagIdQuery","title":"<code>GetTaskTagsByTagIdQuery</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b0ID\u6307\u5b9a\u3067\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_tag_queries.py</code> <pre><code>@dataclass\nclass GetTaskTagsByTagIdQuery:\n    \"\"\"\u30bf\u30b0ID\u6307\u5b9a\u3067\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagsByTagIdQuery.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagsByTagIdQuery.__init__","title":"<code>__init__(tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagByTaskAndTagQuery","title":"<code>GetTaskTagByTaskAndTagQuery</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30afID\u3068\u30bf\u30b0ID\u3067\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_tag_queries.py</code> <pre><code>@dataclass\nclass GetTaskTagByTaskAndTagQuery:\n    \"\"\"\u30bf\u30b9\u30afID\u3068\u30bf\u30b0ID\u3067\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n\n    task_id: UUID\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagByTaskAndTagQuery.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagByTaskAndTagQuery.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetTaskTagByTaskAndTagQuery.__init__","title":"<code>__init__(task_id, tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.CheckTaskTagExistsQuery","title":"<code>CheckTaskTagExistsQuery</code>  <code>dataclass</code>","text":"<p>\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u5b58\u5728\u78ba\u8a8d\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_tag_queries.py</code> <pre><code>@dataclass\nclass CheckTaskTagExistsQuery:\n    \"\"\"\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u5b58\u5728\u78ba\u8a8d\u30af\u30a8\u30ea\"\"\"\n\n    task_id: UUID\n    tag_id: UUID\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.CheckTaskTagExistsQuery.task_id","title":"<code>task_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.CheckTaskTagExistsQuery.tag_id","title":"<code>tag_id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.CheckTaskTagExistsQuery.__init__","title":"<code>__init__(task_id, tag_id)</code>","text":""},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetAllTaskTagsQuery","title":"<code>GetAllTaskTagsQuery</code>  <code>dataclass</code>","text":"<p>\u5168\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea</p> Source code in <code>src/logic/queries/task_tag_queries.py</code> <pre><code>@dataclass\nclass GetAllTaskTagsQuery:\n    \"\"\"\u5168\u30bf\u30b9\u30af\u30bf\u30b0\u95a2\u9023\u53d6\u5f97\u30af\u30a8\u30ea\"\"\"\n</code></pre>"},{"location":"dev/reference/commands_queries/#src.logic.queries.task_tag_queries.GetAllTaskTagsQuery.__init__","title":"<code>__init__()</code>","text":""},{"location":"dev/reference/models/","title":"\u30e2\u30c7\u30eb\u4e00\u89a7","text":""},{"location":"dev/reference/models/#_2","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7528 \u30e2\u30c7\u30eb","text":"<p>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 SQLModel\u3092\u7d99\u627f\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eCRUD\u64cd\u4f5c\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u57fa\u672c\u5404\u30e2\u30c7\u30eb\u306f\u4ee5\u4e0b\u306e\u5f62\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002</p> <ul> <li>Base: \u57fa\u672c\u7684\u306a\u30e2\u30c7\u30eb\u30af\u30e9\u30b9</li> <li>Main: \u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u7528\u306e\u30af\u30e9\u30b9 \uff08DB\u64cd\u4f5c\u6642\u306b\u4f7f\u7528\uff09</li> <li>Create: \u65b0\u898f\u4f5c\u6210\u7528\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9</li> <li>Read: \u8aad\u307f\u53d6\u308a\u7528\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9</li> <li>Update: \u66f4\u65b0\u7528\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9</li> </ul> <p>\u3053\u306e\u8a2d\u8a08\u306f\u3001\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u3068\u64cd\u4f5c\u306e\u660e\u78ba\u5316\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"dev/reference/models/#src.models.task","title":"<code>src.models.task</code>","text":"<p>\u65b0\u3057\u3044Task\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9</p>"},{"location":"dev/reference/models/#src.models.task.TaskStatus","title":"<code>TaskStatus</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\uff08GTD\u30b7\u30b9\u30c6\u30e0\u306b\u57fa\u3065\u304f\uff09</p> Source code in <code>src/models/task.py</code> <pre><code>class TaskStatus(str, Enum):\n    \"\"\"\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\uff08GTD\u30b7\u30b9\u30c6\u30e0\u306b\u57fa\u3065\u304f\uff09\"\"\"\n\n    INBOX = \"inbox\"\n    NEXT_ACTION = \"next_action\"\n    WAITING_FOR = \"waiting_for\"\n    SOMEDAY_MAYBE = \"someday_maybe\"\n    DELEGATED = \"delegated\"\n    COMPLETED = \"completed\"\n    CANCELLED = \"cancelled\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.task.TaskStatus.INBOX","title":"<code>INBOX = 'inbox'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskStatus.NEXT_ACTION","title":"<code>NEXT_ACTION = 'next_action'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskStatus.WAITING_FOR","title":"<code>WAITING_FOR = 'waiting_for'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskStatus.SOMEDAY_MAYBE","title":"<code>SOMEDAY_MAYBE = 'someday_maybe'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskStatus.DELEGATED","title":"<code>DELEGATED = 'delegated'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskStatus.COMPLETED","title":"<code>COMPLETED = 'completed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskStatus.CANCELLED","title":"<code>CANCELLED = 'cancelled'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskBase","title":"<code>TaskBase</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30bf\u30b9\u30af\u306e\u57fa\u672c\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>project_id</code> <code>UUID | None</code> <p>\u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002</p> <code>parent_id</code> <code>UUID | None</code> <p>\u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002</p> <code>title</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>TaskStatus</code> <p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002</p> <code>due_date</code> <code>date | None</code> <p>\u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002</p> Source code in <code>src/models/task.py</code> <pre><code>class TaskBase(SQLModel):\n    \"\"\"\u30bf\u30b9\u30af\u306e\u57fa\u672c\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        project_id (uuid.UUID | None): \u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002\n        parent_id (uuid.UUID | None): \u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002\n        title (str): \u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (TaskStatus): \u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002\n        due_date (date | None): \u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002\n    \"\"\"\n\n    project_id: uuid.UUID | None = Field(default=None, foreign_key=\"project.id\", index=True)\n    parent_id: uuid.UUID | None = Field(default=None, foreign_key=\"task.id\", index=True)\n    title: str = Field(index=True)\n    description: str = Field(default=\"\")\n    status: TaskStatus = Field(default=TaskStatus.INBOX, index=True)\n    due_date: date | None = Field(default=None, index=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.task.TaskBase.project_id","title":"<code>project_id = Field(default=None, foreign_key='project.id', index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskBase.parent_id","title":"<code>parent_id = Field(default=None, foreign_key='task.id', index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskBase.title","title":"<code>title = Field(index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskBase.description","title":"<code>description = Field(default='')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskBase.status","title":"<code>status = Field(default=(TaskStatus.INBOX), index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskBase.due_date","title":"<code>due_date = Field(default=None, index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.Task","title":"<code>Task</code>","text":"<p>               Bases: <code>TaskBase</code></p> <p>\u65b0\u3057\u3044\u30bf\u30b9\u30af\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>id</code> <code>UUID | None</code> <p>\u30bf\u30b9\u30af\u306eID\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p> <code>project_id</code> <code>UUID | None</code> <p>\u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002</p> <code>parent_id</code> <code>UUID | None</code> <p>\u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002</p> <code>title</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>TaskStatus</code> <p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002</p> <code>due_date</code> <code>date | None</code> <p>\u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002</p> Source code in <code>src/models/task.py</code> <pre><code>class Task(TaskBase, table=True):\n    \"\"\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        id (uuid.UUID | None): \u30bf\u30b9\u30af\u306eID\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n        project_id (uuid.UUID | None): \u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002\n        parent_id (uuid.UUID | None): \u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002\n        title (str): \u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (TaskStatus): \u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002\n        due_date (date | None): \u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002\n    \"\"\"\n\n    id: uuid.UUID | None = Field(default_factory=uuid.uuid4, primary_key=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.task.Task.id","title":"<code>id = Field(default_factory=(uuid.uuid4), primary_key=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskCreate","title":"<code>TaskCreate</code>","text":"<p>               Bases: <code>TaskBase</code></p> <p>\u65b0\u3057\u3044\u30bf\u30b9\u30af\u4f5c\u6210\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>project_id</code> <code>UUID | None</code> <p>\u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002</p> <code>parent_id</code> <code>UUID | None</code> <p>\u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002</p> <code>title</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>TaskStatus</code> <p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002</p> <code>due_date</code> <code>date | None</code> <p>\u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002</p> Source code in <code>src/models/task.py</code> <pre><code>class TaskCreate(TaskBase):\n    \"\"\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\u4f5c\u6210\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        project_id (uuid.UUID | None): \u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002\n        parent_id (uuid.UUID | None): \u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002\n        title (str): \u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (TaskStatus): \u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002\n        due_date (date | None): \u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002\n    \"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.task.TaskRead","title":"<code>TaskRead</code>","text":"<p>               Bases: <code>TaskBase</code></p> <p>\u65b0\u3057\u3044\u30bf\u30b9\u30af\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>id</code> <code>UUID</code> <p>\u30bf\u30b9\u30af\u306eID\u3002</p> <code>project_id</code> <code>UUID | None</code> <p>\u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002</p> <code>parent_id</code> <code>UUID | None</code> <p>\u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002</p> <code>title</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>TaskStatus</code> <p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002</p> <code>due_date</code> <code>date | None</code> <p>\u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002</p> Source code in <code>src/models/task.py</code> <pre><code>class TaskRead(TaskBase):\n    \"\"\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        id (uuid.UUID): \u30bf\u30b9\u30af\u306eID\u3002\n        project_id (uuid.UUID | None): \u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c5e\u3055\u306a\u3044\u30bf\u30b9\u30af\u306e\u5834\u5408\u306fNone\u3002\n        parent_id (uuid.UUID | None): \u89aa\u30bf\u30b9\u30af\u306eID\u3002\u30b5\u30d6\u30bf\u30b9\u30af\u306e\u5834\u5408\u306b\u4f7f\u7528\u3002\n        title (str): \u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (TaskStatus): \u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fINBOX\u3002\n        due_date (date | None): \u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306fNone\u3002\n    \"\"\"\n\n    id: uuid.UUID\n</code></pre>"},{"location":"dev/reference/models/#src.models.task.TaskRead.id","title":"<code>id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskUpdate","title":"<code>TaskUpdate</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u65b0\u3057\u3044\u30bf\u30b9\u30af\u66f4\u65b0\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>project_id</code> <code>UUID | None</code> <p>\u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>parent_id</code> <code>UUID | None</code> <p>\u89aa\u30bf\u30b9\u30af\u306eID\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>title</code> <code>str | None</code> <p>\u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>description</code> <code>str | None</code> <p>\u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>status</code> <code>TaskStatus | None</code> <p>\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>due_date</code> <code>date | None</code> <p>\u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> Source code in <code>src/models/task.py</code> <pre><code>class TaskUpdate(SQLModel):\n    \"\"\"\u65b0\u3057\u3044\u30bf\u30b9\u30af\u66f4\u65b0\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        project_id (uuid.UUID | None): \u30bf\u30b9\u30af\u304c\u5c5e\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        parent_id (uuid.UUID | None): \u89aa\u30bf\u30b9\u30af\u306eID\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        title (str | None): \u30bf\u30b9\u30af\u306e\u30bf\u30a4\u30c8\u30eb\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        description (str | None): \u30bf\u30b9\u30af\u306e\u8a73\u7d30\u8aac\u660e\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        status (TaskStatus | None): \u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        due_date (date | None): \u30bf\u30b9\u30af\u306e\u7de0\u3081\u5207\u308a\u65e5\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n    \"\"\"\n\n    project_id: uuid.UUID | None = None\n    parent_id: uuid.UUID | None = None\n    title: str | None = None\n    description: str | None = None\n    status: TaskStatus | None = None\n    due_date: date | None = None\n</code></pre>"},{"location":"dev/reference/models/#src.models.task.TaskUpdate.project_id","title":"<code>project_id = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskUpdate.parent_id","title":"<code>parent_id = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskUpdate.title","title":"<code>title = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskUpdate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskUpdate.status","title":"<code>status = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task.TaskUpdate.due_date","title":"<code>due_date = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project","title":"<code>src.models.project</code>","text":"<p>Project\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9</p>"},{"location":"dev/reference/models/#src.models.project.ProjectStatus","title":"<code>ProjectStatus</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9</p> Source code in <code>src/models/project.py</code> <pre><code>class ProjectStatus(str, Enum):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\"\"\"\n\n    ACTIVE = \"active\"\n    ON_HOLD = \"on_hold\"\n    COMPLETED = \"completed\"\n    CANCELLED = \"cancelled\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.project.ProjectStatus.ACTIVE","title":"<code>ACTIVE = 'active'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectStatus.ON_HOLD","title":"<code>ON_HOLD = 'on_hold'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectStatus.COMPLETED","title":"<code>COMPLETED = 'completed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectStatus.CANCELLED","title":"<code>CANCELLED = 'cancelled'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectBase","title":"<code>ProjectBase</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u30e2\u30c7\u30eb</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>title</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>ProjectStatus</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002</p> Source code in <code>src/models/project.py</code> <pre><code>class ProjectBase(SQLModel):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u30e2\u30c7\u30eb\n\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        title (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (ProjectStatus): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002\n    \"\"\"\n\n    title: str = Field(index=True)\n    description: str = Field(default=\"\")\n    status: ProjectStatus = Field(default=ProjectStatus.ACTIVE, index=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.project.ProjectBase.title","title":"<code>title = Field(index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectBase.description","title":"<code>description = Field(default='')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectBase.status","title":"<code>status = Field(default=(ProjectStatus.ACTIVE), index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.Project","title":"<code>Project</code>","text":"<p>               Bases: <code>ProjectBase</code></p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30e2\u30c7\u30eb</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>id</code> <code>UUID | None</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p> <code>title</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>ProjectStatus</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002</p> Source code in <code>src/models/project.py</code> <pre><code>class Project(ProjectBase, table=True):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30e2\u30c7\u30eb\n\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        id (uuid.UUID | None): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n        title (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (ProjectStatus): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002\n    \"\"\"\n\n    id: uuid.UUID | None = Field(default_factory=uuid.uuid4, primary_key=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.project.Project.id","title":"<code>id = Field(default_factory=(uuid.uuid4), primary_key=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectCreate","title":"<code>ProjectCreate</code>","text":"<p>               Bases: <code>ProjectBase</code></p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u7528\u30e2\u30c7\u30eb</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>title</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>ProjectStatus</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002</p> Source code in <code>src/models/project.py</code> <pre><code>class ProjectCreate(ProjectBase):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u7528\u30e2\u30c7\u30eb\n\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        title (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (ProjectStatus): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002\n    \"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.project.ProjectRead","title":"<code>ProjectRead</code>","text":"<p>               Bases: <code>ProjectBase</code></p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>id</code> <code>UUID</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002</p> <code>title</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <code>description</code> <code>str</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002</p> <code>status</code> <code>ProjectStatus</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002</p> Source code in <code>src/models/project.py</code> <pre><code>class ProjectRead(ProjectBase):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb\n\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        id (uuid.UUID): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eID\u3002\n        title (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n        description (str): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7a7a\u6587\u5b57\u5217\u3002\n        status (ProjectStatus): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fACTIVE\u3002\n    \"\"\"\n\n    id: uuid.UUID\n</code></pre>"},{"location":"dev/reference/models/#src.models.project.ProjectRead.id","title":"<code>id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectUpdate","title":"<code>ProjectUpdate</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u66f4\u65b0\u7528\u30e2\u30c7\u30eb</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>title</code> <code>str | None</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>description</code> <code>str | None</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> <code>status</code> <code>ProjectStatus | None</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> Source code in <code>src/models/project.py</code> <pre><code>class ProjectUpdate(SQLModel):\n    \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u66f4\u65b0\u7528\u30e2\u30c7\u30eb\n\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        title (str | None): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        description (str | None): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n        status (ProjectStatus | None): \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n    \"\"\"\n\n    title: str | None = None\n    description: str | None = None\n    status: ProjectStatus | None = None\n</code></pre>"},{"location":"dev/reference/models/#src.models.project.ProjectUpdate.title","title":"<code>title = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectUpdate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.project.ProjectUpdate.status","title":"<code>status = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.tag","title":"<code>src.models.tag</code>","text":"<p>Tag\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9</p>"},{"location":"dev/reference/models/#src.models.tag.TagBase","title":"<code>TagBase</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30bf\u30b0\u306e\u57fa\u672c\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b0\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>name</code> <code>str</code> <p>\u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/models/tag.py</code> <pre><code>class TagBase(SQLModel):\n    \"\"\"\u30bf\u30b0\u306e\u57fa\u672c\u30e2\u30c7\u30eb\n\n    \u30bf\u30b0\u306e\u57fa\u672c\u60c5\u5831\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        name (str): \u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n\n    name: str = Field(index=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.tag.TagBase.name","title":"<code>name = Field(index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.tag.Tag","title":"<code>Tag</code>","text":"<p>               Bases: <code>TagBase</code></p> <p>\u30bf\u30b0\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b0\u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>id</code> <code>UUID | None</code> <p>\u30bf\u30b0\u306eID\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p> <code>name</code> <code>str</code> <p>\u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/models/tag.py</code> <pre><code>class Tag(TagBase, table=True):\n    \"\"\"\u30bf\u30b0\u30e2\u30c7\u30eb\n\n    \u30bf\u30b0\u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        id (uuid.UUID | None): \u30bf\u30b0\u306eID\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fNone\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n        name (str): \u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n\n    id: uuid.UUID | None = Field(default_factory=uuid.uuid4, primary_key=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.tag.Tag.id","title":"<code>id = Field(default_factory=(uuid.uuid4), primary_key=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.tag.TagCreate","title":"<code>TagCreate</code>","text":"<p>               Bases: <code>TagBase</code></p> <p>\u30bf\u30b0\u4f5c\u6210\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b0\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>name</code> <code>str</code> <p>\u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/models/tag.py</code> <pre><code>class TagCreate(TagBase):\n    \"\"\"\u30bf\u30b0\u4f5c\u6210\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b0\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        name (str): \u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.tag.TagRead","title":"<code>TagRead</code>","text":"<p>               Bases: <code>TagBase</code></p> <p>\u30bf\u30b0\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b0\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>id</code> <code>UUID</code> <p>\u30bf\u30b0\u306eID\u3002</p> <code>name</code> <code>str</code> <p>\u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/models/tag.py</code> <pre><code>class TagRead(TagBase):\n    \"\"\"\u30bf\u30b0\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b0\u306e\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        id (uuid.UUID): \u30bf\u30b0\u306eID\u3002\n        name (str): \u30bf\u30b0\u540d\uff08\u4f8b: @PC, #\u91cd\u8981\uff09\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u304a\u308a\u3001\u691c\u7d22\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n\n    id: uuid.UUID\n</code></pre>"},{"location":"dev/reference/models/#src.models.tag.TagRead.id","title":"<code>id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.tag.TagUpdate","title":"<code>TagUpdate</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30bf\u30b0\u66f4\u65b0\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b0\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>name</code> <code>str | None</code> <p>\u30bf\u30b0\u540d\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002</p> Source code in <code>src/models/tag.py</code> <pre><code>class TagUpdate(SQLModel):\n    \"\"\"\u30bf\u30b0\u66f4\u65b0\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b0\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        name (str | None): \u30bf\u30b0\u540d\u3002None\u306e\u5834\u5408\u306f\u66f4\u65b0\u3057\u306a\u3044\u3002\n    \"\"\"\n\n    name: str | None = None\n</code></pre>"},{"location":"dev/reference/models/#src.models.tag.TagUpdate.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task_tag","title":"<code>src.models.task_tag</code>","text":"<p>TaskTag\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9\uff08\u591a\u5bfe\u591a\u306e\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\uff09</p>"},{"location":"dev/reference/models/#src.models.task_tag.TaskTagBase","title":"<code>TaskTagBase</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u306e\u57fa\u672c\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u591a\u5bfe\u591a\u95a2\u4fc2\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>task_id</code> <code>UUID</code> <p>\u30bf\u30b9\u30af\u306eID\u3002</p> <code>tag_id</code> <code>UUID</code> <p>\u30bf\u30b0\u306eID\u3002</p> Source code in <code>src/models/task_tag.py</code> <pre><code>class TaskTagBase(SQLModel):\n    \"\"\"\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u306e\u57fa\u672c\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u591a\u5bfe\u591a\u95a2\u4fc2\u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        task_id (uuid.UUID): \u30bf\u30b9\u30af\u306eID\u3002\n        tag_id (uuid.UUID): \u30bf\u30b0\u306eID\u3002\n    \"\"\"\n\n    task_id: uuid.UUID = Field(foreign_key=\"task.id\", primary_key=True)\n    tag_id: uuid.UUID = Field(foreign_key=\"tag.id\", primary_key=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.task_tag.TaskTagBase.task_id","title":"<code>task_id = Field(foreign_key='task.id', primary_key=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task_tag.TaskTagBase.tag_id","title":"<code>tag_id = Field(foreign_key='tag.id', primary_key=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.task_tag.TaskTag","title":"<code>TaskTag</code>","text":"<p>               Bases: <code>TaskTagBase</code></p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u591a\u5bfe\u591a\u95a2\u4fc2\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>task_id</code> <code>UUID</code> <p>\u30bf\u30b9\u30af\u306eID\u3002\u8907\u5408\u4e3b\u30ad\u30fc\u306e\u4e00\u90e8\u3002</p> <code>tag_id</code> <code>UUID</code> <p>\u30bf\u30b0\u306eID\u3002\u8907\u5408\u4e3b\u30ad\u30fc\u306e\u4e00\u90e8\u3002</p> Source code in <code>src/models/task_tag.py</code> <pre><code>class TaskTag(TaskTagBase, table=True):\n    \"\"\"\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u591a\u5bfe\u591a\u95a2\u4fc2\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        task_id (uuid.UUID): \u30bf\u30b9\u30af\u306eID\u3002\u8907\u5408\u4e3b\u30ad\u30fc\u306e\u4e00\u90e8\u3002\n        tag_id (uuid.UUID): \u30bf\u30b0\u306eID\u3002\u8907\u5408\u4e3b\u30ad\u30fc\u306e\u4e00\u90e8\u3002\n    \"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.task_tag.TaskTagCreate","title":"<code>TaskTagCreate</code>","text":"<p>               Bases: <code>TaskTagBase</code></p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u4f5c\u6210\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>task_id</code> <code>UUID</code> <p>\u30bf\u30b9\u30af\u306eID\u3002</p> <code>tag_id</code> <code>UUID</code> <p>\u30bf\u30b0\u306eID\u3002</p> Source code in <code>src/models/task_tag.py</code> <pre><code>class TaskTagCreate(TaskTagBase):\n    \"\"\"\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u4f5c\u6210\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        task_id (uuid.UUID): \u30bf\u30b9\u30af\u306eID\u3002\n        tag_id (uuid.UUID): \u30bf\u30b0\u306eID\u3002\n    \"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.task_tag.TaskTagRead","title":"<code>TaskTagRead</code>","text":"<p>               Bases: <code>TaskTagBase</code></p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb</p> <p>\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u524d \u30bf\u30a4\u30d7 \u30c7\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 <code>task_id</code> <code>UUID</code> <p>\u30bf\u30b9\u30af\u306eID\u3002</p> <code>tag_id</code> <code>UUID</code> <p>\u30bf\u30b0\u306eID\u3002</p> Source code in <code>src/models/task_tag.py</code> <pre><code>class TaskTagRead(TaskTagBase):\n    \"\"\"\u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb\n\n    \u30bf\u30b9\u30af\u3068\u30bf\u30b0\u306e\u95a2\u9023\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3002SQLModel\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n    Attributes:\n        task_id (uuid.UUID): \u30bf\u30b9\u30af\u306eID\u3002\n        tag_id (uuid.UUID): \u30bf\u30b0\u306eID\u3002\n    \"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.memo","title":"<code>src.models.memo</code>","text":"<p>Memo\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9</p>"},{"location":"dev/reference/models/#src.models.memo.MemoBase","title":"<code>MemoBase</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30e1\u30e2\u306e\u57fa\u672c\u30e2\u30c7\u30eb</p> Source code in <code>src/models/memo.py</code> <pre><code>class MemoBase(SQLModel):\n    \"\"\"\u30e1\u30e2\u306e\u57fa\u672c\u30e2\u30c7\u30eb\"\"\"\n\n    content: str = Field(default=\"\", description=\"\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u5f62\u5f0f\u306e\u30e1\u30e2\u5185\u5bb9\")\n    task_id: uuid.UUID = Field(foreign_key=\"task.id\", index=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.memo.MemoBase.content","title":"<code>content = Field(default='', description='\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u5f62\u5f0f\u306e\u30e1\u30e2\u5185\u5bb9')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.memo.MemoBase.task_id","title":"<code>task_id = Field(foreign_key='task.id', index=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.memo.Memo","title":"<code>Memo</code>","text":"<p>               Bases: <code>MemoBase</code></p> <p>\u30e1\u30e2\u30e2\u30c7\u30eb</p> Source code in <code>src/models/memo.py</code> <pre><code>class Memo(MemoBase, table=True):\n    \"\"\"\u30e1\u30e2\u30e2\u30c7\u30eb\"\"\"\n\n    id: uuid.UUID = Field(default_factory=uuid.uuid4, primary_key=True)\n</code></pre>"},{"location":"dev/reference/models/#src.models.memo.Memo.id","title":"<code>id = Field(default_factory=(uuid.uuid4), primary_key=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.memo.MemoCreate","title":"<code>MemoCreate</code>","text":"<p>               Bases: <code>MemoBase</code></p> <p>\u30e1\u30e2\u4f5c\u6210\u7528\u30e2\u30c7\u30eb</p> Source code in <code>src/models/memo.py</code> <pre><code>class MemoCreate(MemoBase):\n    \"\"\"\u30e1\u30e2\u4f5c\u6210\u7528\u30e2\u30c7\u30eb\"\"\"\n</code></pre>"},{"location":"dev/reference/models/#src.models.memo.MemoRead","title":"<code>MemoRead</code>","text":"<p>               Bases: <code>MemoBase</code></p> <p>\u30e1\u30e2\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb</p> Source code in <code>src/models/memo.py</code> <pre><code>class MemoRead(MemoBase):\n    \"\"\"\u30e1\u30e2\u8aad\u307f\u53d6\u308a\u7528\u30e2\u30c7\u30eb\"\"\"\n\n    id: uuid.UUID\n</code></pre>"},{"location":"dev/reference/models/#src.models.memo.MemoRead.id","title":"<code>id</code>  <code>instance-attribute</code>","text":""},{"location":"dev/reference/models/#src.models.memo.MemoUpdate","title":"<code>MemoUpdate</code>","text":"<p>               Bases: <code>SQLModel</code></p> <p>\u30e1\u30e2\u66f4\u65b0\u7528\u30e2\u30c7\u30eb</p> Source code in <code>src/models/memo.py</code> <pre><code>class MemoUpdate(SQLModel):\n    \"\"\"\u30e1\u30e2\u66f4\u65b0\u7528\u30e2\u30c7\u30eb\"\"\"\n\n    content: str | None = None\n</code></pre>"},{"location":"dev/reference/models/#src.models.memo.MemoUpdate.content","title":"<code>content = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"images/","title":"Kage UI Screenshots","text":"<p>This directory contains screenshots of the Kage application interface.</p>"},{"location":"images/#available-screenshots","title":"Available Screenshots","text":""},{"location":"images/#main-application-screens","title":"Main Application Screens","text":"<ul> <li><code>home-screen.png</code> - \u30db\u30fc\u30e0\u753b\u9762</li> <li>\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8</li> <li>\u30bf\u30b9\u30af\u7ba1\u7406\u30dc\u30bf\u30f3</li> <li> <p>\u4eca\u65e5\u306e\u30bf\u30b9\u30af\u7d71\u8a08\u30ab\u30fc\u30c9</p> </li> <li> <p><code>task-screen.png</code> - \u30bf\u30b9\u30af\u7ba1\u7406\u753b\u9762</p> </li> <li>\u30af\u30a4\u30c3\u30af\u30a2\u30af\u30b7\u30e7\u30f3\u30bb\u30af\u30b7\u30e7\u30f3\uff08GTD\u30d9\u30fc\u30b9\u306e4\u3064\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\uff09</li> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30bb\u30af\u30b7\u30e7\u30f3\uff08\u958b\u767a\u4e2d\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\uff09</li> <li> <p>\u30bf\u30b9\u30af\u30dc\u30fc\u30c9\uff08CLOSED/INBOX\u306e2\u30ab\u30e9\u30e0\u69cb\u6210\uff09</p> </li> <li> <p><code>task-dialog.png</code> - \u30bf\u30b9\u30af\u4f5c\u6210\u30fb\u7de8\u96c6\u30c0\u30a4\u30a2\u30ed\u30b0</p> </li> <li>\u30bf\u30b9\u30af\u30bf\u30a4\u30c8\u30eb\u5165\u529b\u30d5\u30a3\u30fc\u30eb\u30c9</li> <li>\u8aac\u660e\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2</li> <li>\u30b9\u30c6\u30fc\u30bf\u30b9\u9078\u629e\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3</li> <li>\u4f5c\u6210\u65e5\u6642\u8868\u793a</li> <li>\u64cd\u4f5c\u30dc\u30bf\u30f3\uff08\u524a\u9664\u30fb\u30ad\u30e3\u30f3\u30bb\u30eb\u30fb\u4fdd\u5b58\uff09</li> </ul>"},{"location":"images/#screenshot-details","title":"Screenshot Details","text":"<p>\u3053\u308c\u3089\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306f\u3001Playwright MCP\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306eHTML\u30e2\u30c3\u30af\u30a2\u30c3\u30d7\u304b\u3089\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002 \u5b9f\u969b\u306eFlet\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e UI\u69cb\u9020\u3068\u6a5f\u80fd\u3092\u6b63\u78ba\u306b\u53cd\u6620\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u5404\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306f\u3001<code>docs/app/ui.md</code> \u306eUI \u30ac\u30a4\u30c9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u3067\u53c2\u7167\u3055\u308c\u3066\u304a\u308a\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u753b\u9762\u69cb\u6210\u3068\u6a5f\u80fd\u306e\u7406\u89e3\u3092\u52a9\u3051\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"images/#image-format","title":"Image Format","text":"<ul> <li>Format: PNG (JPEG with quality optimization)</li> <li>Full page screenshots included</li> <li>Optimized for documentation viewing</li> </ul>"}]}